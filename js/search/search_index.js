var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/DropDownView.html",[0,0.949,1,2.253]],["body/classes/DropDownView.html",[0,1.027,1,2.118,2,0.931,3,0.436,4,0.402,5,0.402,6,1.162,7,0.37,8,0.83,9,1.299,10,1.436,11,1.373,12,3.145,13,3.023,14,1.511,15,1.596,16,1.667,17,3.458,18,1.667,19,1.731,20,1.906,21,1.538,22,1.837,23,2.59,24,0.773,25,0.032,26,0.472,27,0.919,28,0.402,29,3.012,30,1.487,31,1.596,32,0.83,33,1.583,34,1.596,35,1.254,36,1.596,37,1.335,38,0.542,39,1.162,40,0.552,41,1.678,42,0.554,43,1.326,44,0.871,45,1.886,46,1.678,47,0.37,48,1.557,49,1.667,50,2.027,51,1.058,52,0.773,53,1.034,54,1.162,55,1.162,56,1.334,57,1.162,58,1.034,59,1.162,60,1.162,61,1.334,62,1.162,63,1.334,64,1.034,65,2.118,66,1.334,67,1.767,68,1.886,69,1.034,70,2.74,71,1.034,72,1.886,73,1.373,74,2.381,75,0.931,76,0.931,77,2.74,78,1.034,79,1.162,80,1.511,81,1.886,82,1.162,83,1.678,84,1.162,85,1.536,86,1.162,87,1.334,88,0.773,89,0.773,90,0.773,91,0.773,92,0.773,93,0.773,94,3.54,95,1.334,96,1.334,97,2.733,98,1.162,99,3.145,100,2.118,101,2.433,102,2.192,103,0.83,104,1.334,105,1.334,106,1.334,107,1.334,108,2.733,109,2.166,110,1.334,111,1.034,112,0.652,113,1.334,114,1.334,115,2.733,116,3.012,117,3.012,118,2.74,119,1.334,120,0.892,121,3.145,122,1.334,123,1.334,124,1.334,125,1.334,126,1.61,127,1.334,128,0.846,129,1.334,130,1.334,131,1.334,132,1.334,133,1.334,134,1.334,135,3.226,136,1.334,137,1.536,138,1.334,139,1.334,140,0.707,141,1.334,142,3.398,143,1.058,144,1.334,145,0.709,146,0.899,147,1.886,148,1.335,149,1.335,150,2.118,151,1.886,152,1.274,153,1.886,154,1.162,155,1.334,156,1.334,157,1.334,158,1.162,159,2.381,160,1.334,161,1.334,162,2.381,163,0.931,164,1.334,165,1.334,166,1.334,167,1.162,168,1.334,169,1.334,170,1.334,171,1.334,172,1.334,173,1.334,174,1.334,175,1.334,176,2.381,177,1.334,178,1.334,179,1.334,180,2.166,181,2.166,182,1.334,183,0.432,184,2.166,185,1.334,186,1.326,187,2.437,188,1.886,189,2.166,190,0.402,191,2.166,192,1.678,193,1.334,194,1.334,195,1.334,196,1.034,197,1.334,198,1.334,199,1.334,200,1.334,201,2.74,202,1.334,203,1.334,204,1.334,205,1.334,206,1.334,207,1.334,208,1.334,209,2.166,210,2.166,211,2.166,212,1.334,213,2.166,214,1.334,215,1.334,216,1.334,217,1.334,218,1.162,219,1.334,220,1.162,221,1.162,222,0.931,223,1.334,224,1.334,225,1.334,226,1.334,227,0.931,228,0.931,229,1.162,230,1.162,231,1.452,232,1.334,233,1.886,234,1.162,235,0.284,236,1.034,237,1.034,238,0.436,239,1.162,240,1.162,241,1.886,242,0.83,243,1.886,244,1.162,245,1.162,246,1.886,247,1.886,248,1.162,249,2.381,250,0.931,251,1.162,252,1.162,253,1.162,254,1.162,255,1.162,256,1.162,257,1.162,258,1.162,259,1.162,260,1.034,261,0.846,262,0.472,263,1.162,264,1.162,265,0.931,266,0.652,267,1.162,268,1.162,269,1.886,270,1.886,271,0.512,272,1.162,273,1.162,274,1.162,275,1.162,276,1.162,277,1.162,278,1.162,279,0.008,280,0.012,281,0.008]],["title/interfaces/DropdownViewRender.html",[37,1.42,282,0.949]],["body/interfaces/DropdownViewRender.html",[3,0.939,4,0.866,5,0.866,7,0.797,8,1.47,9,1.482,10,1.909,16,1.295,18,1.295,19,1.627,21,1.195,25,0.032,26,1.018,27,1.122,30,1.695,37,1.873,38,0.541,40,0.757,42,1.592,43,1.763,44,1.194,47,0.797,48,1.295,49,1.295,50,1.295,51,1.405,103,1.103,120,1.252,140,0.939,143,1.405,145,1.528,146,1.195,148,1.405,149,1.405,152,1.252,183,0.779,186,1.763,190,0.866,235,1.142,238,1.408,242,1.103,262,1.876,266,1.405,279,0.016,280,0.022,281,0.016,282,1.608,283,1.528,284,1.666,285,2.662,286,1.357,287,2.036,288,1.873,289,2.43,290,2.43,291,2.22,292,2.496,293,2.036,294,1.824,295,1.824,296,1.873,297,1.297,298,1.666,299,1.824,300,1.103,301,0.732,302,2.036,303,1.666,304,1.405,305,1.405]],["title/classes/MenuBarView.html",[0,0.949,306,2.907]],["body/classes/MenuBarView.html",[0,1.024,2,2.188,3,1.024,4,0.944,5,0.944,7,0.868,8,1.555,9,1.353,11,2.571,13,3.683,14,2.188,19,1.841,20,2.507,21,2.095,22,2.726,24,1.815,25,0.032,26,1.109,27,1.049,28,0.944,30,1.435,32,1.202,35,2.349,38,0.597,40,0.712,42,1.974,43,1.555,44,1.123,52,1.815,67,1.468,98,2.731,102,1.987,152,1.647,186,1.887,235,0.668,236,2.429,237,3.142,271,1.202,279,0.018,280,0.023,281,0.018,306,4.496,307,3.749,308,5.376,309,4.849,310,4.849,311,3.749,312,3.749,313,3.749,314,3.749,315,3.749,316,1.684,317,3.749,318,3.533,319,3.749,320,3.749,321,3.749,322,3.135,323,3.749,324,3.749,325,3.749,326,3.749,327,3.749]],["title/interfaces/MenuItemMeta.html",[65,2.253,282,0.949]],["body/interfaces/MenuItemMeta.html",[3,0.9,4,0.83,5,0.83,7,0.764,8,1.428,25,0.032,27,1.168,28,1.36,32,1.057,64,2.886,65,3.269,67,0.9,88,1.596,89,1.596,90,1.596,91,1.596,92,1.596,93,1.596,120,1.72,140,1.72,146,2.152,192,3.769,222,3.471,231,1.464,235,0.793,242,1.057,262,1.834,265,3.616,279,0.016,280,0.021,281,0.016,282,0.9,283,1.464,296,2.637,328,2.757,329,5.378,330,2.886,331,2.945,332,2.401,333,2.6,334,2.757,335,1.748,336,2.034,337,3.154,338,3.154,339,2.136,340,2.401,341,2.401,342,2.757,343,2.136,344,2.443,345,2.757]],["title/classes/MenuItemView.html",[0,0.949,150,2.253]],["body/classes/MenuItemView.html",[0,1.034,1,1.693,2,0.942,3,0.441,4,0.406,5,0.406,6,1.176,7,0.374,8,0.838,9,1.304,10,1.144,11,1.385,12,1.35,13,3.037,14,1.525,16,1.425,17,2.754,18,1.425,19,1.735,20,1.699,21,1.315,22,1.682,24,0.782,25,0.032,26,0.478,27,0.898,28,0.406,29,2.758,30,1.492,32,0.517,33,1.266,35,1.266,37,1.068,38,0.544,39,1.176,40,0.556,41,1.693,42,0.561,43,1.333,44,0.877,45,1.904,46,1.693,47,0.374,48,1.765,49,1.676,50,2.033,51,1.345,52,0.782,53,1.046,54,1.176,55,1.176,56,1.35,57,1.176,58,1.046,59,1.176,60,1.176,61,1.35,62,1.176,63,1.35,64,1.046,65,2.695,66,1.35,67,1.768,68,1.904,69,1.046,70,2.758,71,1.046,72,1.904,73,1.385,74,2.399,75,0.942,76,0.942,77,2.758,78,1.046,79,1.176,80,1.525,81,1.904,82,1.176,83,1.693,84,1.176,85,1.547,86,1.176,87,1.35,88,0.782,89,0.782,90,0.782,91,0.782,92,0.782,93,0.782,94,3.555,95,1.35,96,1.35,97,2.754,98,1.176,99,3.166,100,2.134,101,2.442,102,2.205,103,0.838,104,1.35,105,1.35,106,1.35,107,1.35,108,2.754,109,2.186,110,1.35,111,1.046,112,0.659,113,1.35,114,1.35,115,2.754,116,3.03,117,3.03,118,2.758,119,1.35,120,0.899,121,3.166,122,1.35,123,1.35,124,1.35,125,1.35,126,1.617,127,1.35,128,0.856,129,1.35,130,1.35,131,1.35,132,1.35,133,1.35,134,1.35,135,3.414,136,1.35,137,1.547,138,1.35,139,1.35,140,0.714,141,1.35,142,3.674,143,1.068,144,1.35,145,0.717,146,0.908,147,1.904,148,1.345,149,1.345,150,2.453,151,1.904,152,1.28,153,1.904,154,1.176,155,1.35,156,1.35,157,1.35,158,1.176,159,2.399,160,1.35,161,1.35,162,2.399,163,0.942,164,1.35,165,1.35,166,1.35,167,1.176,168,1.35,169,1.35,170,1.35,171,1.35,172,1.35,173,1.35,174,1.35,175,1.35,176,2.399,177,1.35,178,1.35,179,2.186,180,2.186,181,2.186,182,1.35,183,0.436,184,2.186,185,1.35,186,1.333,187,2.453,188,1.904,189,2.186,190,0.406,191,2.186,192,1.693,193,1.35,194,1.35,195,1.35,196,1.046,197,1.35,198,1.35,199,1.35,200,3.166,201,2.758,202,1.35,203,1.35,204,1.35,205,1.35,206,1.35,207,1.35,208,1.35,209,2.186,210,2.186,211,2.186,212,1.35,213,2.186,214,1.35,215,1.35,216,1.35,217,1.35,218,1.176,219,1.35,220,1.176,221,1.176,222,0.942,223,1.35,224,1.35,225,1.35,226,1.35,227,0.942,228,0.942,229,1.176,230,1.176,231,1.463,232,1.35,233,1.904,234,1.176,235,0.287,236,1.046,237,1.046,238,0.441,239,1.176,240,1.176,241,1.904,242,0.838,243,1.904,244,1.176,245,1.176,246,1.904,247,1.904,248,1.176,249,2.399,250,0.942,251,1.176,252,1.176,253,1.176,254,1.176,255,1.176,256,1.176,257,1.176,258,1.176,259,1.176,260,1.046,261,0.856,262,0.478,263,1.176,264,1.176,265,0.942,266,0.659,267,1.176,268,1.176,269,1.904,270,1.904,271,0.517,272,1.176,273,1.176,274,1.176,275,1.176,276,1.176,277,1.176,278,1.176,279,0.008,280,0.012,281,0.008,346,2.613,347,1.614,348,1.614]],["title/interfaces/MenuItemViewRender.html",[51,1.42,282,0.949]],["body/interfaces/MenuItemViewRender.html",[3,0.939,4,0.866,5,0.866,7,0.797,8,1.47,9,1.482,10,1.195,16,1.295,18,1.295,19,1.627,21,1.195,25,0.032,26,1.018,27,1.122,30,1.695,37,1.405,38,0.541,40,0.757,42,1.592,43,1.763,44,1.194,47,0.797,48,1.295,49,1.295,50,1.295,51,1.873,103,1.103,120,1.252,140,0.939,143,1.405,145,1.528,146,1.195,148,1.405,149,1.405,152,1.563,183,0.779,186,1.763,190,0.866,235,1.142,238,1.408,242,1.103,262,1.876,266,1.405,271,1.47,279,0.016,280,0.022,281,0.016,282,1.608,283,1.528,284,1.666,285,2.22,286,1.357,287,2.036,288,1.873,289,2.43,290,2.43,291,2.22,292,2.496,293,2.036,294,1.824,295,1.824,296,1.873,297,1.297,298,1.666,299,1.824,300,1.103,301,0.732,302,2.036,303,1.666,304,1.405,305,1.405]],["title/interfaces/MenuItemViewSpec.html",[48,1.309,282,0.949]],["body/interfaces/MenuItemViewSpec.html",[3,0.885,4,0.816,5,0.816,7,0.751,8,1.412,9,1.259,10,1.126,16,1.22,18,1.22,19,1.588,21,1.126,25,0.032,26,0.959,27,1.148,28,1.516,30,1.48,37,1.324,38,0.525,40,0.734,42,1.53,43,1.72,44,1.159,47,0.751,48,1.658,49,1.22,50,1.22,51,1.324,103,1.039,120,1.202,140,0.885,143,2.192,145,2.383,146,1.864,148,2.192,149,2.192,152,1.202,183,0.766,186,1.72,190,0.816,235,1.133,238,1.366,242,1.039,262,1.934,266,2.192,279,0.015,280,0.021,281,0.015,282,1.58,283,1.44,284,1.57,285,2.133,286,1.303,287,1.956,288,1.799,289,2.335,290,2.335,291,2.133,292,2.422,293,1.956,294,1.718,295,1.718,296,1.799,297,1.259,298,1.57,299,1.718,300,1.039,301,0.69,302,1.956,303,1.57,304,1.324,305,1.324,330,2.853]],["title/interfaces/MenuOptions.html",[21,1.208,282,0.949]],["body/interfaces/MenuOptions.html",[3,0.92,4,0.848,5,0.848,7,0.781,8,1.449,9,1.284,10,1.17,16,1.268,18,1.268,19,1.613,21,1.57,25,0.032,26,0.997,27,1.126,28,1.473,30,1.51,37,1.377,38,0.536,40,0.749,42,1.57,43,1.748,44,1.182,47,0.781,48,1.268,49,1.268,50,1.268,51,1.377,103,1.748,120,1.234,140,0.92,143,1.377,145,1.497,146,1.17,148,1.377,149,1.377,152,1.234,183,0.83,186,1.748,190,0.848,235,1.139,238,1.66,242,1.08,262,1.87,266,1.377,279,0.016,280,0.021,281,0.016,282,1.598,283,1.497,284,1.632,285,2.189,286,1.338,287,2.008,288,1.847,289,2.396,290,2.396,291,2.189,292,2.471,293,2.008,294,1.786,295,1.786,296,1.847,297,1.284,298,1.632,299,1.786,300,1.08,301,0.717,302,2.422,303,1.632,304,1.377,305,1.377]],["title/components/NgxEditorComponent.html",[349,2.029,350,2.253]],["body/components/NgxEditorComponent.html",[0,0.735,3,0.457,4,0.421,5,0.421,7,0.623,8,0.863,9,0.421,11,1.427,14,0.977,19,0.796,22,2.01,24,1.635,25,0.032,26,1.254,27,0.689,28,0.849,32,0.537,33,1.303,35,1.873,38,0.475,40,0.622,42,0.935,43,0.537,44,0.896,47,0.388,67,1.299,69,1.084,71,1.084,73,2.939,75,2.473,76,0.977,78,1.084,80,1.571,83,1.084,85,0.684,94,3.466,100,1.084,101,1.873,120,0.457,126,1.24,128,2.246,137,1.58,152,0.457,163,1.97,183,0.446,186,1.777,190,1.066,227,0.977,228,2.777,231,0.743,235,0.298,250,2.641,265,2.257,279,0.008,280,0.013,281,0.008,287,1.195,288,1.099,297,0.677,301,0.573,304,0.684,316,1.976,318,1.219,322,1.399,339,1.084,341,1.219,344,0.81,349,1.97,350,2.932,351,2.691,352,1.399,353,1.399,354,1.673,355,2.522,356,1.673,357,2.691,358,3.375,359,2.823,360,3.375,361,1.673,362,2.691,363,2.691,364,1.96,365,1.96,366,2.459,367,1.96,368,2.459,369,1.96,370,2.823,371,1.637,372,0.999,373,2.25,374,3.375,375,2.25,376,2.691,377,3.866,378,2.691,379,3.866,380,2.25,381,2.691,382,2.745,383,1.673,384,1.673,385,2.691,386,1.673,387,2.691,388,1.673,389,2.691,390,1.673,391,3.375,392,1.673,393,2.691,394,2.25,395,1.673,396,1.673,397,1.673,398,0.887,399,1.084,400,1.571,401,1.399,402,1.673,403,0.743,404,1.673,405,2.459,406,1.673,407,2.691,408,1.673,409,2.691,410,1.673,411,1.673,412,1.673,413,1.673,414,1.673,415,2.459,416,1.673,417,1.399,418,1.399,419,1.673,420,1.673,421,1.673,422,1.673,423,1.673,424,1.673,425,1.399,426,1.673,427,2.691,428,1.673,429,1.399,430,1.673,431,1.673,432,1.673,433,1.673,434,1.399,435,1.673,436,1.673,437,1.673,438,1.673,439,1.673,440,1.673,441,1.399,442,2.691,443,1.399,444,1.673,445,1.673,446,1.673,447,4.27,448,3.086,449,2.691,450,2.823,451,4.856,452,4.757,453,1.673,454,5.204,455,2.691,456,5.806,457,4.757,458,4.947,459,5.355,460,3.375,461,1.673,462,1.673,463,5.455,464,1.673,465,3.375,466,1.673,467,3.719,468,4.382,469,3.866,470,1.673,471,1.673,472,2.691,473,4.757,474,1.673,475,1.673,476,4.757,477,3.866,478,3.375,479,2.691,480,1.673,481,5.62,482,3.234,483,2.459,484,3.234,485,1.673,486,2.459,487,1.673,488,1.673,489,1.673,490,1.084,491,4.757,492,2.823,493,1.219,494,1.673,495,2.691,496,1.673,497,1.673,498,1.399,499,3.375,500,1.673,501,1.673,502,1.673,503,2.691,504,1.673,505,2.691,506,0.887,507,1.744,508,1.673,509,1.673,510,3.866,511,2.691,512,2.691,513,2.691,514,1.673,515,1.673,516,1.673,517,1.673,518,1.673,519,1.673,520,1.673,521,1.673,522,1.673,523,1.219,524,1.399,525,1.673,526,1.673,527,2.691,528,2.25,529,1.673,530,1.673,531,2.691,532,1.399,533,1.673,534,1.399,535,1.673,536,1.673,537,1.673,538,1.673,539,1.673,540,1.673,541,1.219,542,1.427,543,2.25,544,1.673,545,3.866,546,1.673,547,1.673,548,1.673]],["title/interfaces/NgxEditorConfig.html",[282,0.949,300,1.115]],["body/interfaces/NgxEditorConfig.html",[3,0.92,4,0.848,5,0.848,7,0.781,8,1.449,9,1.284,10,1.17,16,1.268,18,1.268,19,1.613,21,1.17,25,0.032,26,0.997,27,1.126,28,1.473,30,1.51,37,1.377,38,0.536,40,0.749,42,1.57,43,1.748,44,1.182,47,0.781,48,1.268,49,1.268,50,1.268,51,1.377,103,1.08,120,1.234,140,0.92,143,1.377,145,1.497,146,1.17,148,1.377,149,1.377,152,1.234,183,0.83,186,1.748,190,0.848,235,1.139,238,1.393,242,1.08,262,1.87,266,1.377,279,0.016,280,0.021,281,0.016,282,1.598,283,1.497,284,1.632,285,2.189,286,1.613,287,2.008,288,1.847,289,2.396,290,2.396,291,2.189,292,2.471,293,2.008,294,1.786,295,1.786,296,1.847,297,1.53,298,1.632,299,1.786,300,1.449,301,1.16,302,2.008,303,1.632,304,1.377,305,1.377]],["title/modules/NgxEditorModule.html",[549,1.684,550,1.544]],["body/modules/NgxEditorModule.html",[0,1.006,3,1.006,4,0.927,5,0.927,11,1.953,22,1.636,24,1.784,25,0.032,26,1.09,27,0.656,28,0.927,35,1.784,38,0.593,52,1.784,67,1.006,85,1.505,126,1.181,128,3.104,235,0.656,279,0.017,280,0.023,281,0.017,300,1.81,350,4.256,355,2.542,364,3.493,365,4.265,366,3.884,367,3.884,368,3.884,369,4.265,371,1.537,394,4.01,398,1.953,400,2.799,401,3.081,403,2.13,490,2.387,541,2.684,549,1.784,550,2.753,551,2.684,552,2.15,553,3.884,554,2.387,555,4.458,556,3.081,557,3.081,558,3.081,559,3.081,560,4.01,561,3.081,562,3.081,563,3.684,564,4.795,565,3.684,566,5.331,567,3.884,568,3.684,569,3.684,570,4.01,571,4.458,572,3.081,573,3.684,574,3.684,575,3.684]],["title/injectables/NgxEditorService.html",[382,2.253,576,2.253]],["body/injectables/NgxEditorService.html",[0,1.361,3,1.069,4,0.985,5,0.985,7,0.907,8,1.599,14,2.284,22,2.215,24,1.895,25,0.032,26,1.158,27,0.888,28,1.255,38,0.651,40,0.732,44,0.907,47,0.907,52,1.895,67,1.069,126,1.255,183,0.82,235,0.977,271,1.255,279,0.019,280,0.024,281,0.019,286,1.476,297,1.454,300,1.852,301,1.061,316,1.732,355,2.909,382,3.231,398,2.075,400,3.56,403,2.753,405,2.851,576,3.555,577,2.851,578,2.536,579,3.914,580,4.986,581,3.273,582,3.273,583,2.415,584,3.273,585,4.17,586,3.632,587,4.588,588,3.273,589,3.632,590,2.851,591,2.536]],["title/injectables/NgxEditorServiceConfig.html",[400,2.029,576,2.253]],["body/injectables/NgxEditorServiceConfig.html",[0,1.326,3,1.025,4,0.945,5,0.945,7,0.87,8,1.557,22,2.39,25,0.032,27,0.958,28,0.945,32,1.725,33,2.606,38,0.645,40,0.713,44,0.87,47,0.87,52,1.819,67,1.025,126,1.204,183,0.845,235,0.958,271,1.204,279,0.018,280,0.023,281,0.018,286,1.592,297,1.545,300,1.824,301,1.21,316,1.869,355,3.016,382,2.433,398,1.991,400,3.32,403,2.527,405,2.736,576,3.486,577,2.736,578,2.433,582,3.141,583,2.606,584,3.141,585,4.06,586,3.537,587,5.258,588,3.141,589,3.537,590,2.736,591,2.433,592,3.755,593,3.755,594,3.755]],["title/interfaces/NodeViews.html",[282,0.949,297,0.875]],["body/interfaces/NodeViews.html",[3,0.956,4,0.881,5,0.881,9,1.309,10,1.216,16,1.319,18,1.319,19,1.639,21,1.216,22,1.556,25,0.032,26,1.373,27,1.105,30,1.539,37,1.431,38,0.546,40,0.764,42,1.611,43,1.775,44,1.205,47,0.811,48,1.319,49,1.319,50,1.319,51,1.431,103,1.123,120,1.267,140,0.956,143,1.431,145,1.556,146,1.216,148,1.431,149,1.431,152,1.267,183,0.783,186,1.775,190,0.881,235,1.145,238,1.42,242,1.123,262,1.892,266,1.431,279,0.017,280,0.022,281,0.017,282,1.616,283,1.556,284,1.696,285,2.246,286,1.373,287,2.06,288,1.895,289,2.459,290,2.757,291,2.246,292,2.519,293,2.06,294,1.857,295,1.857,296,1.895,297,1.394,298,1.696,299,1.857,300,1.123,301,0.745,302,2.06,303,1.696,304,1.431,305,1.431,595,3.502,596,3.502]],["title/changelog.html",[597,1.924,598,1.924,599,2.483]],["body/changelog.html",[2,0.769,5,0.556,9,0.332,10,1.294,11,0.698,20,0.538,25,0.018,32,1.293,33,1.383,38,0.138,40,0.709,44,0.305,47,0.305,52,0.638,73,1.172,80,0.769,85,1.523,112,0.538,126,0.422,137,0.903,152,1.688,154,3.96,158,0.96,163,0.769,183,0.292,190,0.332,227,1.29,238,1.228,271,0.422,279,0.006,280,0.01,281,0.006,286,0.39,296,0.538,297,0.332,301,0.712,305,0.538,316,1.162,336,1.614,343,0.854,344,0.638,349,0.769,353,1.102,359,1.102,371,0.916,372,1.663,380,1.102,403,1.269,418,1.102,441,1.102,448,0.96,450,1.102,451,1.102,454,2.389,468,1.102,482,1.102,483,0.96,484,1.102,486,0.96,493,0.96,498,1.102,524,4.25,542,2.139,549,0.638,552,2.355,554,2.167,583,1.805,599,1.849,600,1.317,601,3.778,602,1.317,603,1.317,604,1.317,605,5.672,606,5.876,607,5.94,608,3.727,609,1.317,610,4.677,611,4.498,612,4.831,613,3.123,614,5.672,615,4.965,616,1.317,617,4.041,618,3.727,619,1.317,620,5.435,621,2.856,622,2.437,623,2.437,624,1.317,625,1.317,626,2.856,627,3.585,628,2.211,629,1.317,630,1.102,631,1.317,632,1.317,633,1.317,634,3.52,635,3.617,636,1.317,637,1.317,638,4.034,639,1.317,640,1.317,641,2.211,642,1.317,643,1.433,644,1.317,645,0.96,646,0.698,647,1.849,648,0.96,649,0.96,650,1.317,651,1.317,652,4.677,653,2.211,654,1.851,655,2.856,656,2.211,657,1.317,658,2.856,659,1.317,660,1.317,661,1.317,662,1.317,663,1.102,664,1.317,665,0.538,666,0.96,667,0.96,668,0.854,669,0.96,670,1.102,671,1.317,672,1.317,673,2.081,674,2.856,675,2.856,676,0.854,677,0.96,678,1.317,679,1.317,680,1.317,681,2.211,682,4.034,683,2.211,684,1.317,685,1.317,686,2.211,687,1.317,688,1.317,689,1.102,690,1.317,691,1.317,692,2.211,693,3.345,694,1.317,695,1.317,696,1.317,697,1.317,698,1.317,699,2.211,700,2.211,701,1.611,702,1.317,703,1.317,704,3.727,705,1.317,706,1.317,707,2.211,708,2.797,709,1.317,710,1.317,711,1.317,712,1.317,713,4.152,714,2.211,715,1.317,716,1.317,717,1.317,718,1.317,719,2.211,720,1.317,721,1.317,722,3.345,723,1.317,724,2.211,725,5.62,726,2.211,727,1.317,728,1.317,729,1.317,730,1.317,731,3.345,732,1.317,733,1.317,734,4.831,735,4.677,736,1.317,737,2.211,738,1.317,739,1.317,740,3.585,741,1.317,742,1.317,743,1.317,744,1.317,745,1.317,746,1.317,747,1.317,748,1.317,749,1.317,750,4.034,751,1.317,752,5.564,753,1.317,754,1.317,755,1.317,756,2.211,757,2.211,758,1.317,759,1.317,760,4.965,761,1.317,762,1.317,763,2.211,764,1.317,765,5.503,766,1.317,767,1.317,768,1.317,769,1.317,770,1.317,771,1.317,772,1.317,773,3.345,774,2.211,775,1.102,776,2.856,777,1.317,778,2.856,779,1.317,780,2.211,781,1.317,782,1.317,783,4.831,784,2.211,785,1.317,786,2.856,787,1.317,788,1.317,789,1.317,790,2.211,791,3.727,792,1.317,793,1.317,794,1.317,795,1.102,796,3.117,797,3.345,798,1.317,799,1.317,800,2.211,801,1.317,802,2.211,803,1.317,804,1.317,805,4.677,806,1.849,807,1.849,808,2.211,809,1.317,810,1.317,811,1.317,812,2.211,813,1.317,814,1.317,815,3.345,816,1.317,817,1.317,818,1.317,819,1.317,820,2.211,821,1.317,822,1.317,823,2.211,824,2.211,825,1.317,826,1.317,827,1.317,828,1.317,829,1.317,830,1.317,831,1.317,832,1.317,833,1.317,834,1.317,835,1.317,836,2.856,837,1.317,838,1.317,839,1.317,840,1.317,841,2.211,842,2.856,843,1.317,844,1.317,845,2.211,846,1.317,847,1.317,848,1.317,849,1.317,850,1.317,851,1.317,852,1.317,853,1.317,854,1.317,855,1.317,856,1.317,857,1.317,858,1.317,859,1.317,860,1.317,861,2.211,862,1.317,863,1.317,864,0.96,865,1.317,866,1.317,867,1.317,868,1.317,869,2.211,870,1.317,871,1.317,872,3.727,873,1.317,874,1.317,875,1.317,876,1.317,877,1.317,878,1.317,879,1.317,880,1.317,881,1.317,882,1.317,883,1.317,884,1.317,885,2.856,886,1.317,887,1.317,888,1.317,889,1.317,890,1.317,891,1.317,892,0.458,893,1.317,894,1.317,895,1.317,896,1.317,897,1.433,898,2.211,899,1.317,900,1.317,901,1.317,902,1.317,903,1.433,904,1.317,905,2.211,906,1.317,907,1.317,908,1.317,909,1.317,910,1.317,911,1.317,912,1.317,913,1.317,914,2.856,915,1.317,916,0.458,917,2.211,918,1.317,919,1.102,920,1.317,921,1.317,922,3.345,923,1.317,924,1.317,925,1.317,926,1.317,927,1.317,928,4.82,929,1.317,930,1.849,931,1.317,932,1.317,933,1.317,934,1.317,935,1.317,936,1.317,937,2.211,938,1.317,939,1.317,940,1.317,941,2.856,942,1.317,943,1.317,944,1.102,945,2.211,946,2.211,947,1.317,948,1.317,949,1.317,950,1.317,951,1.317,952,1.317,953,1.317,954,1.29,955,1.317,956,2.211,957,1.317,958,1.317,959,2.211,960,1.317,961,1.317,962,1.317,963,2.211,964,2.211,965,1.317,966,1.317,967,1.317,968,1.317,969,1.317,970,1.317,971,1.317,972,2.211,973,1.317,974,1.317,975,1.317,976,1.317,977,1.317,978,1.317,979,1.317,980,1.317,981,1.317,982,1.317,983,1.317,984,1.317,985,1.317,986,1.317,987,1.317,988,1.317,989,1.317,990,1.317,991,1.317,992,1.317,993,1.317,994,1.317,995,1.317,996,1.317,997,2.211,998,1.317,999,2.211,1000,1.317,1001,1.317,1002,1.317,1003,1.317,1004,1.317,1005,1.317,1006,1.317,1007,1.317,1008,1.317,1009,1.317,1010,1.317,1011,1.317,1012,1.102,1013,1.102,1014,1.317,1015,1.317,1016,1.317,1017,1.317,1018,1.317,1019,1.317,1020,1.317,1021,1.317,1022,1.317,1023,1.317,1024,3.727,1025,1.317,1026,1.317,1027,1.317,1028,1.317,1029,1.317,1030,1.317,1031,1.317,1032,1.317,1033,1.317,1034,1.317,1035,4.498,1036,1.317,1037,2.211,1038,1.317,1039,2.856,1040,1.317,1041,1.317,1042,1.317,1043,1.317,1044,1.317,1045,1.317,1046,1.317,1047,1.317,1048,1.317,1049,1.317,1050,1.317,1051,1.317,1052,1.102,1053,1.317,1054,1.317,1055,1.317,1056,2.211,1057,1.317,1058,1.317,1059,1.317,1060,2.211,1061,1.317,1062,1.317,1063,1.317,1064,3.345,1065,2.856,1066,2.211,1067,1.317,1068,1.317,1069,1.317,1070,1.102,1071,2.211,1072,1.317,1073,1.317,1074,1.317,1075,1.317,1076,1.317,1077,1.102,1078,1.102]],["title/dependencies.html",[552,2.42,701,2.163]],["body/dependencies.html",[25,0.032,279,0.023,280,0.027,281,0.023,398,2.53,399,3.093,552,2.786,1079,4.773,1080,6.509,1081,3.992,1082,4.773,1083,4.709,1084,4.102,1085,4.773,1086,4.773,1087,4.773,1088,4.773,1089,4.773,1090,4.773,1091,4.773,1092,4.773]],["title/miscellaneous/functions.html",[1093,1.574,1094,3.467]],["body/miscellaneous/functions.html",[7,1.047,20,1.847,24,2.943,25,0.031,26,1.841,28,1.53,35,2.943,60,3.971,137,1.847,262,1.338,279,0.021,280,0.026,281,0.021,286,1.613,300,1.449,355,2.396,403,2.008,448,3.971,486,3.971,570,4.559,578,3.532,581,3.78,590,3.293,1093,2.396,1094,3.78,1095,4.559,1096,5.451,1097,5.451,1098,3.78,1099,3.78,1100,3.78,1101,4.52,1102,3.78,1103,3.78,1104,3.78,1105,4.52]],["title/index.html",[7,0.688,597,1.924,598,1.924]],["body/index.html",[0,1.02,20,1.526,25,0.031,28,1.429,32,1.198,38,0.596,75,2.18,88,1.809,89,1.809,90,1.809,91,1.809,92,1.809,93,1.809,101,1.809,103,1.198,112,1.977,140,1.465,183,0.64,235,0.665,238,1.02,261,1.98,279,0.018,280,0.023,281,0.018,297,0.94,301,0.795,316,1.864,331,3.132,333,2.18,335,2.565,336,2.021,337,2.824,338,2.824,371,1.932,372,1.815,399,2.42,506,1.98,542,1.98,549,1.809,550,2.149,567,2.721,583,1.809,597,2.42,598,2.42,613,3.525,634,2.721,654,2.42,665,1.526,666,2.721,667,2.721,668,3.135,673,2.721,701,2.721,713,3.124,740,3.124,775,3.124,897,2.42,903,2.42,944,3.124,954,2.18,1070,4.047,1077,3.124,1078,3.124,1106,3.735,1107,3.735,1108,4.838,1109,3.735,1110,3.735,1111,3.735,1112,4.838,1113,4.838,1114,3.735,1115,3.735,1116,3.124,1117,3.124,1118,3.735,1119,3.124,1120,3.124,1121,3.91,1122,3.525,1123,3.525,1124,2.721,1125,3.735,1126,3.735,1127,2.18,1128,2.18,1129,3.124,1130,3.735,1131,3.735,1132,3.735,1133,3.735,1134,3.735,1135,3.735,1136,3.735,1137,3.735,1138,3.735,1139,3.735,1140,3.735,1141,3.735,1142,3.735,1143,3.735,1144,3.735]],["title/license.html",[597,1.924,598,1.924,1145,2.483]],["body/license.html",[25,0.025,279,0.02,280,0.025,281,0.02,490,2.748,613,3.09,617,3.547,708,4.385,919,3.547,928,3.547,1145,3.547,1146,4.241,1147,5.692,1148,4.241,1149,4.241,1150,5.243,1151,4.241,1152,4.241,1153,4.241,1154,4.241,1155,4.241,1156,4.241,1157,5.243,1158,6.424,1159,4.241,1160,4.241,1161,4.241,1162,5.692,1163,4.241,1164,5.243,1165,4.241,1166,4.241,1167,4.241,1168,4.241,1169,4.241,1170,4.241,1171,4.241,1172,4.241,1173,4.241,1174,5.243,1175,4.241,1176,4.241,1177,4.241,1178,4.241,1179,4.241,1180,4.241,1181,4.241,1182,5.243,1183,5.243,1184,4.241,1185,4.241,1186,4.241,1187,3.547,1188,4.241,1189,4.241,1190,4.241,1191,4.241,1192,4.241,1193,4.241,1194,4.241,1195,4.241,1196,4.241,1197,4.241,1198,4.241,1199,4.241,1200,4.241,1201,4.241,1202,4.241,1203,4.241,1204,4.241,1205,3.547,1206,4.241,1207,4.241,1208,4.241,1209,4.241,1210,4.241,1211,4.241,1212,4.241]],["title/modules.html",[551,3.363]],["body/modules.html",[25,0.028,279,0.024,280,0.028,281,0.024,493,3.736,550,2.278,551,3.736,635,3.736,1084,3.736,1213,5.129]],["title/overview.html",[1214,3.86]],["body/overview.html",[2,2.531,25,0.032,128,3.26,231,2.361,279,0.021,280,0.025,281,0.021,283,1.926,339,2.81,340,3.159,349,2.531,350,4.271,364,3.159,365,4.187,366,4.187,367,4.187,368,4.187,369,4.479,490,2.81,541,3.159,549,2.574,550,2.731,552,2.531,553,3.159,554,2.81,555,3.626,556,3.626,557,3.626,558,3.626,559,3.626,560,4.445,561,3.626,577,3.159,1214,3.626,1215,4.336]],["title/miscellaneous/typealiases.html",[1093,1.574,1216,4.145]],["body/miscellaneous/typealiases.html",[7,1.079,16,2.09,18,2.09,25,0.03,27,1.094,49,2.09,50,2.09,190,1.172,238,1.516,262,1.379,271,1.78,279,0.022,280,0.026,281,0.022,284,2.256,285,2.256,291,2.688,292,2.872,293,2.634,302,2.466,330,3.842,1093,2.47,1217,4.658,1218,6.522]],["title/miscellaneous/variables.html",[1093,1.574,1219,3.467]],["body/miscellaneous/variables.html",[1,0.971,6,1.092,7,0.347,9,0.619,10,0.521,13,1.595,16,0.564,18,0.564,19,1.072,20,1.279,21,1.087,25,0.032,27,1.131,29,1.092,30,0.728,32,2.012,33,3.039,43,1.457,44,0.996,45,1.092,46,3.276,48,0.564,49,1.506,53,1.595,54,1.793,55,1.793,57,1.793,58,1.595,59,1.793,62,1.793,64,1.595,67,1.612,68,2.281,69,0.971,70,2.915,71,0.971,72,2.281,73,1.305,74,2.281,75,0.875,76,0.875,77,2.915,78,0.971,79,1.793,80,0.875,81,1.793,82,1.793,83,0.971,84,1.793,85,1.635,86,1.092,88,1.192,89,1.192,90,1.192,91,1.192,92,1.192,93,1.192,101,1.755,102,0.795,103,0.789,112,1.005,120,1.444,126,1.867,135,1.793,140,1.514,142,1.793,143,0.612,146,1.756,147,1.092,148,0.612,149,0.612,150,0.971,151,1.092,152,0.672,153,1.092,162,1.793,163,1.827,183,0.569,186,1.457,187,2.786,190,0.619,192,2.028,196,2.028,201,1.793,218,1.092,222,2.51,231,1.777,233,2.281,234,1.092,236,1.595,237,0.971,238,0.855,239,1.092,240,1.092,241,1.793,242,1.162,243,1.793,244,1.092,245,1.092,246,1.793,247,1.793,248,1.092,249,2.281,250,1.436,251,1.092,252,1.092,253,1.092,254,1.092,255,1.092,256,1.092,257,1.092,258,1.092,259,1.092,260,2.028,261,1.66,262,1.404,263,1.092,264,1.092,265,2.652,266,0.612,267,1.092,268,1.092,269,1.793,270,1.793,271,0.481,272,1.092,273,1.092,274,1.092,275,1.092,276,1.092,277,1.092,278,1.092,279,0.007,280,0.012,281,0.007,287,1.391,296,2.161,297,0.377,300,0.481,301,0.319,302,0.666,303,2.379,304,1.279,305,1.005,316,0.855,328,1.254,329,4.423,330,0.971,331,2.652,332,1.092,333,2.115,334,1.254,335,1.66,336,1.786,337,2.769,338,2.769,339,0.971,340,1.092,341,1.092,342,1.254,343,0.971,344,1.938,345,2.618,355,1.305,467,1.793,507,1.595,532,1.254,562,2.058,571,2.058,572,1.254,578,1.595,589,1.793,591,2.348,668,0.971,689,2.058,864,1.793,1093,0.795,1095,3.799,1098,2.058,1099,2.058,1100,1.254,1102,1.254,1103,1.254,1104,1.254,1127,0.875,1128,0.875,1219,1.254,1220,5.18,1221,3.623,1222,4.543,1223,2.461,1224,2.461,1225,3.13,1226,3.13,1227,2.461,1228,3.13,1229,2.461,1230,2.461,1231,1.499,1232,1.499,1233,1.499,1234,3.623,1235,3.13,1236,2.281,1237,1.499,1238,2.618,1239,3.623,1240,2.461,1241,1.499,1242,1.499,1243,1.499,1244,1.499,1245,1.499,1246,3.13,1247,1.499,1248,1.499,1249,1.499,1250,1.499,1251,1.499,1252,1.499,1253,1.499,1254,1.499,1255,2.461,1256,2.461,1257,1.499,1258,1.499,1259,1.499,1260,1.499,1261,3.13,1262,1.499,1263,2.058,1264,1.499,1265,1.499,1266,1.499,1267,1.499,1268,1.499,1269,1.499,1270,1.499,1271,1.499,1272,1.499,1273,1.499,1274,1.499,1275,1.499,1276,1.499,1277,1.499,1278,1.499,1279,1.499,1280,1.499,1281,1.499,1282,1.499,1283,1.499,1284,1.499,1285,1.499]],["title/additional-documentation/configuration.html",[892,1.031,916,1.031,954,1.733]],["body/additional-documentation/configuration.html",[20,1.786,25,0.032,28,1.452,32,1.402,38,0.459,88,2.117,89,2.117,90,2.117,91,2.117,92,2.117,93,2.117,101,2.117,103,1.402,112,2.182,140,1.575,183,0.707,238,1.194,261,2.318,279,0.021,280,0.025,281,0.021,297,1.1,301,0.93,316,1.855,331,3.367,333,2.552,335,2.832,336,2.172,337,3.118,338,3.118,344,2.117,371,1.402,372,1.294,506,2.318,583,2.117,646,2.318,665,1.786,666,3.185,667,3.185,668,2.833,954,2.552,1120,3.656,1121,3.892,1122,3.185,1123,3.185,1124,3.185,1127,2.552,1128,2.552,1129,3.656]],["title/additional-documentation/ngmodel.html",[892,1.031,897,1.924,916,1.031]],["body/additional-documentation/ngmodel.html",[0,1.352,25,0.031,40,0.727,190,1.448,250,3.358,279,0.023,280,0.027,281,0.023,415,3.606,429,4.14,643,3.208,897,3.208,1052,4.14,1286,4.14,1287,4.95,1288,4.95,1289,4.14]],["title/additional-documentation/history.html",[676,1.924,892,1.031,916,1.031]],["body/additional-documentation/history.html",[25,0.031,38,0.587,40,0.82,279,0.022,280,0.027,281,0.022,301,1.002,372,1.394,523,4.07,635,4.07,665,1.924,669,3.431,676,4.076,677,4.34,796,4.672,1290,3.939,1291,4.71,1292,3.939,1293,4.672,1294,4.672,1295,4.71,1296,4.07,1297,3.939]],["title/additional-documentation/shortcuts.html",[669,2.163,892,1.031,916,1.031]],["body/additional-documentation/shortcuts.html",[25,0.032,38,0.654,39,3.096,40,0.874,41,2.754,112,2.327,183,0.754,279,0.02,280,0.025,281,0.02,301,1.117,332,3.096,335,2.253,336,1.6,371,1.683,372,1.554,483,3.096,649,3.096,665,2.145,677,4.536,806,3.554,1236,3.096,1290,4.39,1292,4.39,1296,4.453,1298,4.249,1299,4.249,1300,4.249,1301,4.249,1302,3.554,1303,4.249,1304,4.249,1305,5.25,1306,4.249,1307,4.249,1308,4.249,1309,4.249,1310,5.697,1311,4.249,1312,4.249,1313,4.249]],["title/additional-documentation/html.html",[542,1.574,892,1.031,916,1.031]],["body/additional-documentation/html.html",[25,0.032,38,0.642,40,0.809,47,1.276,67,1.61,102,2.438,167,3.35,183,0.729,279,0.022,280,0.026,281,0.022,371,1.766,372,1.63,434,4.606,542,3.24,1289,3.845,1314,4.598,1315,4.598,1316,4.598,1317,4.598,1318,4.598,1319,4.598,1320,4.598,1321,4.598,1322,4.598,1323,4.598,1324,4.598,1325,4.598,1326,4.598,1327,4.598]],["title/additional-documentation/menu-plugin.html",[286,0.767,316,0.9,892,0.9,916,0.9]],["body/additional-documentation/menu-plugin.html",[9,1.317,19,1.049,20,1.447,25,0.032,27,0.833,28,0.892,30,1.049,32,1.499,38,0.584,40,0.52,43,1.499,44,1.083,50,1.334,53,2.296,58,2.296,67,1.653,73,1.878,76,2.068,88,1.716,89,1.716,90,1.716,91,1.716,92,1.716,93,1.716,101,1.716,102,1.878,103,1.136,112,1.91,116,2.581,117,2.581,118,2.581,126,1.677,137,1.447,140,1.428,152,1.428,159,2.581,183,0.692,186,1.136,187,3.029,188,3.405,190,0.892,196,2.296,220,2.581,221,2.581,227,2.068,228,2.068,229,2.581,230,2.581,231,1.574,235,0.631,238,0.967,261,1.878,271,1.136,279,0.017,280,0.022,281,0.017,286,1.383,293,2.076,301,0.754,316,2.062,331,3.053,333,2.068,335,2.478,336,1.969,337,2.728,338,2.728,344,1.716,371,1.499,372,1.383,447,2.963,506,1.878,542,1.878,543,2.963,583,1.716,634,2.581,646,2.478,654,3.389,665,1.447,903,3.604,1121,2.581,1122,2.581,1123,2.581,1124,2.581,1127,2.068,1128,2.068,1328,3.543,1329,3.543,1330,3.543,1331,3.543,1332,3.543,1333,3.543,1334,4.674,1335,2.963,1336,3.543,1337,2.963,1338,3.543,1339,3.543,1340,3.543,1341,3.543,1342,3.543,1343,3.543,1344,3.543]],["title/additional-documentation/schema.html",[183,0.393,892,1.031,916,1.031]],["body/additional-documentation/schema.html",[9,1.011,25,0.032,30,1.189,32,1.78,38,0.583,40,0.59,47,0.931,67,1.516,85,1.641,111,2.603,120,1.097,126,1.625,137,2.071,146,1.395,183,0.825,235,0.716,260,2.603,279,0.019,280,0.024,281,0.019,288,2.071,316,1.395,371,1.625,372,1.5,403,1.784,507,2.603,534,4.239,583,1.945,591,2.603,645,2.926,646,2.13,654,2.603,663,3.36,665,1.641,673,2.926,954,2.958,1013,3.36,1187,3.36,1236,3.693,1238,4.644,1337,3.36,1345,3.36,1346,3.36,1347,3.36,1348,3.36,1349,5.069,1350,5.069,1351,5.069,1352,5.069,1353,5.832,1354,4.017,1355,4.017,1356,4.017,1357,4.017,1358,4.017,1359,4.017,1360,4.017,1361,4.017,1362,4.017,1363,4.017,1364,4.017]],["title/additional-documentation/inline-code-editor.html",[336,0.865,372,0.68,506,1.218,892,0.798,916,0.798]],["body/additional-documentation/inline-code-editor.html",[0,0.676,9,1.086,10,0.86,19,1.408,25,0.032,27,0.441,30,0.733,33,1.199,38,0.602,40,0.778,41,1.605,42,1.903,44,0.843,47,0.574,67,1.615,85,1.487,100,3.083,111,1.605,120,1.384,126,1.699,128,2.288,137,1.012,152,0.994,176,1.804,183,0.482,190,0.916,228,1.445,231,2.497,242,1.625,262,1.277,271,0.794,279,0.012,280,0.017,281,0.012,288,2.071,297,0.623,298,2.722,304,1.012,305,1.487,318,2.652,336,1.37,371,0.794,372,1.408,417,2.071,425,2.071,467,1.804,492,2.071,506,1.313,523,2.652,550,1.1,601,1.804,645,1.804,646,1.313,649,1.804,665,1.012,670,2.071,676,1.605,795,2.071,807,2.071,864,1.804,903,3.285,930,2.071,1012,3.044,1205,2.071,1293,2.071,1294,2.071,1296,3.466,1297,2.071,1302,2.071,1335,2.071,1345,2.071,1346,2.071,1347,2.071,1348,2.071,1365,2.477,1366,2.477,1367,2.477,1368,3.64,1369,2.477,1370,2.477,1371,3.64,1372,2.477,1373,4.701,1374,4.316,1375,2.477,1376,4.758,1377,2.477,1378,2.477,1379,2.477,1380,2.477,1381,2.477,1382,2.477,1383,2.477,1384,2.477,1385,2.477,1386,2.477,1387,2.477,1388,2.477,1389,4.316,1390,4.758,1391,2.477,1392,2.477,1393,2.477,1394,2.477,1395,2.477,1396,2.477,1397,2.477,1398,3.64,1399,2.477,1400,2.477,1401,2.477,1402,2.477,1403,2.477,1404,2.477,1405,2.477,1406,2.477,1407,2.477,1408,2.477,1409,2.477,1410,2.477,1411,5.069,1412,2.477,1413,2.477,1414,2.477,1415,2.477,1416,2.477,1417,2.477,1418,4.316,1419,2.477,1420,2.477,1421,2.477,1422,2.477,1423,2.477,1424,2.477,1425,2.477,1426,2.477,1427,2.477,1428,4.316,1429,2.477,1430,4.316,1431,2.477,1432,2.477,1433,2.477,1434,2.477,1435,2.477,1436,2.477,1437,2.477,1438,3.64,1439,2.477,1440,2.477,1441,2.477,1442,2.477,1443,2.477,1444,2.477,1445,2.477,1446,2.477,1447,2.477,1448,2.477,1449,3.64,1450,2.477,1451,2.071,1452,3.64,1453,3.64,1454,2.477,1455,2.477,1456,4.758,1457,3.64,1458,2.477,1459,2.477,1460,2.477,1461,2.477,1462,3.64,1463,2.477,1464,2.477,1465,2.477,1466,2.477,1467,2.477]],["title/additional-documentation/input-rules.html",[643,1.679,648,1.888,892,0.9,916,0.9]],["body/additional-documentation/input-rules.html",[4,0.765,25,0.032,27,0.977,35,2.529,38,0.508,40,0.619,46,4.124,47,0.704,67,0.83,112,2.133,120,1.549,126,1.819,137,1.241,140,1.15,183,0.691,222,2.822,235,1.011,242,1.758,271,1.819,279,0.014,280,0.02,281,0.014,286,1.247,301,0.646,336,1.82,343,1.968,344,2.04,371,0.974,372,1.247,403,1.349,415,2.213,507,3.133,528,2.541,549,1.471,550,1.349,627,2.541,630,2.541,643,3.844,646,1.611,648,4.134,665,1.241,1127,1.773,1128,2.459,1373,4.367,1451,2.541,1468,3.038,1469,3.038,1470,3.038,1471,3.038,1472,3.038,1473,3.038,1474,3.038,1475,3.038,1476,3.038,1477,4.835,1478,4.212,1479,4.212,1480,3.038,1481,4.212,1482,3.038,1483,6.16,1484,5.484,1485,5.484,1486,5.484,1487,5.484,1488,3.038,1489,3.038,1490,4.212,1491,3.038,1492,3.038,1493,3.038,1494,4.835,1495,3.038,1496,4.212,1497,3.038,1498,3.038,1499,3.038,1500,3.038,1501,3.038,1502,3.038,1503,3.038,1504,4.212,1505,3.038,1506,3.038,1507,3.038,1508,3.038,1509,3.038,1510,3.038,1511,3.038,1512,3.038,1513,3.038,1514,3.038,1515,3.038,1516,4.212,1517,3.038,1518,3.038,1519,3.038,1520,3.038,1521,3.038,1522,3.038,1523,3.038,1524,4.212,1525,3.038,1526,3.038,1527,3.038,1528,3.038,1529,3.038,1530,3.038]],["title/additional-documentation/reactive-forms.html",[622,1.888,623,1.888,892,0.9,916,0.9]],["body/additional-documentation/reactive-forms.html",[0,1.428,25,0.032,38,0.669,85,2.137,235,0.932,279,0.02,280,0.025,281,0.02,349,3.053,352,3.533,370,3.533,371,1.354,372,1.25,373,3.533,375,3.533,398,2.773,399,3.389,443,3.533,549,2.046,550,2.323,553,3.077,554,2.737,567,3.81,586,3.077,601,3.077,622,3.077,623,3.077,647,3.533,1081,3.533,1083,3.533,1084,3.077,1116,3.533,1117,3.533,1119,4.374,1263,3.533,1286,5.104,1531,5.23,1532,5.23,1533,5.23,1534,4.224,1535,5.23,1536,4.224,1537,4.224,1538,4.224,1539,4.224,1540,4.224,1541,4.224,1542,4.224,1543,4.224]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["0",{"_index":467,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["0.10.3",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":520,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2",{"_index":475,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.25rem",{"_index":510,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2rem",{"_index":464,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3rem",{"_index":466,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3s",{"_index":488,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5",{"_index":496,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5rem",{"_index":527,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.7rem",{"_index":537,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["00adda2",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["0310191",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["09b69b5",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["0a915f5",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["0b7dd99",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["0f94d1e",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":521,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1",{"_index":231,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["1.5rem",{"_index":508,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1.85rem",{"_index":449,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["10",{"_index":524,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["10.0.5",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":525,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1078c69",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["1248db7",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["1737369",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["182152a",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["1a73e8",{"_index":462,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1c316cb",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["1ed938e",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":479,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1rem",{"_index":538,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["2",{"_index":339,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":864,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["2017",{"_index":928,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":617,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["23adb5e",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["24b92e0",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["26a1a6d",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["2748cc3",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["274dcc7",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["27ccd72",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["2a13ca0",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["2afb2ec",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["2d7d38e",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["2ed79b8",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":457,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["3",{"_index":340,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["30b513c",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["35fbb57",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["36133e1",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["367474f",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["3978843",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["3ddc3b0",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["3px",{"_index":539,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4",{"_index":341,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["4390502",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["443c994",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["453d807",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["45752bc",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["47d5ba4",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["47f34ad",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["4bff8e5",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["4eef077",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["4f4967a",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["4fddfac",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":453,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4rem",{"_index":502,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["5",{"_index":342,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["57e4056",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["5beee77",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["5f176e1",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":343,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["6.5.5",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["6012283",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["613ec52",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["63e401b",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":518,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["65",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":519,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["68",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["683bbee",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["6c757d",{"_index":533,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["6e13142",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":522,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["7",{"_index":1215,"title":{},"body":{"overview.html":{}}}],["72",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["731f2fc",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["78",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["79",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["7a40862",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["7be2fd6",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["84104c2",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["84946ed",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["864a5be",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["8695873",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["87bb04e",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["89389ab",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["8aa0ffd",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["8b2bb27",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["8e3e65b",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["90f88a5",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["94374c4",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["97398ee",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["9c89d2a",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["9f0e19d",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["__dropdownmenu",{"_index":513,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__item",{"_index":526,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__text",{"_index":505,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["a26f192",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["a9262c2",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["a983fd4",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["ab0216b",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1181,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":514,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["acc.concat(array.isarray(val",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accidental",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1206,"title":{},"body":{"license.html":{}}}],["actions",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":73,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["active_dropdown_item_classname",{"_index":81,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["active_menu_item_classname",{"_index":72,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["activeclass",{"_index":148,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["activeel",{"_index":164,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel.length",{"_index":166,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel[0",{"_index":168,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["actual_component",{"_index":548,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["add",{"_index":634,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{}}}],["added",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":916,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{}}}],["af66d69",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1217,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":482,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["aligned",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["alpha.4",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["alpha.5",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["alpha.6",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["alpha.7",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["alpha.8",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["alpha.9",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["anchor",{"_index":1012,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["and/or",{"_index":1172,"title":{},"body":{"license.html":{}}}],["angular",{"_index":713,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["angular/common",{"_index":1081,"title":{},"body":{"dependencies.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/compiler",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":398,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"dependencies.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/forms",{"_index":399,"title":{},"body":{"components/NgxEditorComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/platform",{"_index":1083,"title":{},"body":{"dependencies.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/router",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":647,"title":{},"body":{"changelog.html":{},"additional-documentation/reactive-forms.html":{}}}],["app.component",{"_index":1534,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["app.component.html",{"_index":1537,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["app.component.scss",{"_index":1538,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["appcomponent",{"_index":1286,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/reactive-forms.html":{}}}],["applications",{"_index":1078,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1117,"title":{},"body":{"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["area",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1210,"title":{},"body":{"license.html":{}}}],["around",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.reduce((acc",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.slice",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":285,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["arrow",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["asprosemirrorselection(doc",{"_index":1427,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["associated",{"_index":1159,"title":{},"body":{"license.html":{}}}],["asterisk",{"_index":1501,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attaching",{"_index":1469,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attribute",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":441,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["attrs",{"_index":146,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["attrs)(state",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1199,"title":{},"body":{"license.html":{}}}],["auto",{"_index":775,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["autogenerated",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":930,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["awesome",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":1308,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["b174a14",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["b280769",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["b2ddf54",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["b707409",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["b915d68",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["ba350a83",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["ba86da6",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":468,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["backticks",{"_index":1507,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bae2216",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["basekeymap",{"_index":1307,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["basic",{"_index":1521,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["basicmarks",{"_index":1350,"title":{},"body":{"additional-documentation/schema.html":{}}}],["basicnodes",{"_index":1349,"title":{},"body":{"additional-documentation/schema.html":{}}}],["bbe3daa",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["bede7a1",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["below",{"_index":1329,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["beta.0",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1409,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["bg",{"_index":459,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bind",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["binding",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["bindings",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["black",{"_index":470,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["block",{"_index":507,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["blockquote",{"_index":344,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["blockquoterule(nodetype",{"_index":1488,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blocks",{"_index":1523,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blur",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["bold",{"_index":331,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["boolean",{"_index":305,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["bootstrap",{"_index":554,"title":{},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/reactive-forms.html":{}}}],["border",{"_index":451,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["both",{"_index":419,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bottom",{"_index":478,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["box",{"_index":472,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["breaking",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1213,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1084,"title":{},"body":{"dependencies.html":{},"modules.html":{},"additional-documentation/reactive-forms.html":{}}}],["browsermodule",{"_index":1532,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["browsers",{"_index":1132,"title":{},"body":{"index.html":{}}}],["bug",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["buildinputrules(schema",{"_index":1524,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bullet",{"_index":1128,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["bullet_list",{"_index":338,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["bulletlist",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bulletlistrule(nodetype",{"_index":1502,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["button",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1148,"title":{},"body":{"license.html":{}}}],["c6a2151",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["c87c5e4",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["c9555b4",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["calc(#{$menubar",{"_index":515,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["called",{"_index":160,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["canexecute",{"_index":188,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["catch",{"_index":426,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ccc",{"_index":500,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["cdfd4bc",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["ce00b5f",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["cebc696",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":484,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["centre",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":1438,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.from",{"_index":1442,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.text",{"_index":1444,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.to",{"_index":1443,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["changelog",{"_index":599,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":601,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/reactive-forms.html":{}}}],["characters",{"_index":1511,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["charge",{"_index":1154,"title":{},"body":{"license.html":{}}}],["check",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":1134,"title":{},"body":{"index.html":{}}}],["ci",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1202,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"index.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/reactive-forms.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"overview.html":{}}}],["classnames",{"_index":143,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["cleanup",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":229,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["clicked",{"_index":156,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["clip",{"_index":471,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["closedropdown",{"_index":121,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["closes",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["cluster_ngxeditormodule",{"_index":556,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_declarations",{"_index":557,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_exports",{"_index":559,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_ngxeditorcomponent_providers",{"_index":558,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cm",{"_index":1383,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cmd",{"_index":1448,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["code",{"_index":336,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["code_block",{"_index":1335,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["code_mirror",{"_index":1364,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblock",{"_index":1352,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblockrule(nodetype",{"_index":1508,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["codeblockview(node",{"_index":1467,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror",{"_index":903,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["codemirror's",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["codemirror(null",{"_index":1393,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror.normalizekeymap",{"_index":1450,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror/mode/javascript/javascript",{"_index":1369,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorkeymap",{"_index":1446,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorview",{"_index":1381,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["color",{"_index":454,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["combinedupdates",{"_index":275,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["combinedupdates.foreach((update",{"_index":278,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":50,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["command(editorview.state",{"_index":1340,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(state",{"_index":1342,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(this.editorview.state",{"_index":189,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["commands",{"_index":41,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["commitizen",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":1531,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["compatibility",{"_index":1130,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["compiler",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":740,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":349,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/reactive-forms.html":{}}}],["component_template",{"_index":546,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["components",{"_index":351,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["computechange(oldval",{"_index":1370,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["computechange(this.node.textcontent",{"_index":1439,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["conditions",{"_index":1180,"title":{},"body":{"license.html":{}}}],["config",{"_index":403,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["configuration",{"_index":954,"title":{"additional-documentation/configuration.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/schema.html":{}}}],["configure",{"_index":1295,"title":{},"body":{"additional-documentation/history.html":{}}}],["configured",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["configuring",{"_index":1328,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["connection",{"_index":1211,"title":{},"body":{"license.html":{}}}],["console.error('unable",{"_index":428,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["console.log(\"value",{"_index":1543,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["console.log(html);generating",{"_index":1323,"title":{},"body":{"additional-documentation/html.html":{}}}],["console.warn('unkown",{"_index":259,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":67,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{}}}],["constructor(@optional",{"_index":588,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["constructor(config",{"_index":579,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["constructor(dropdowngroup",{"_index":15,"title":{},"body":{"classes/DropDownView.html":{}}}],["constructor(editorview",{"_index":309,"title":{},"body":{"classes/MenuBarView.html":{}}}],["constructor(menuitem",{"_index":179,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["constructor(ngxeditorservice",{"_index":381,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["constructor(node",{"_index":1385,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["content",{"_index":163,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contentjson",{"_index":411,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["contentnode",{"_index":1317,"title":{},"body":{"additional-documentation/html.html":{}}}],["contract",{"_index":1207,"title":{},"body":{"license.html":{}}}],["controlvalueaccessor",{"_index":358,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["conventional",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["copies",{"_index":1174,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1157,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1147,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["corresponds",{"_index":1513,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["create",{"_index":111,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["createeditor",{"_index":377,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["creates",{"_index":1510,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["creating",{"_index":1520,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["css",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["ctrl",{"_index":1449,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cursor",{"_index":480,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["custom",{"_index":654,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["customization",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["cz",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d+)\\.\\s",{"_index":1493,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["d17c1dd",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["d4001c4",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["d4ccc79",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["d99dff2",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["da7d0c7",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["dabac4c",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1203,"title":{},"body":{"license.html":{}}}],["darken($dropdown",{"_index":531,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dash",{"_index":1499,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["data",{"_index":1361,"title":{},"body":{"additional-documentation/schema.html":{}}}],["ddd",{"_index":455,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dead",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1161,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1212,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":553,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/reactive-forms.html":{}}}],["decoration",{"_index":289,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorations",{"_index":299,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorators",{"_index":392,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["default_icon_height",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_icon_width",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_labels",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_options",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_placeholder",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_toolbar",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":589,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["defines",{"_index":1468,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["demo",{"_index":1070,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":552,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":575,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["devdependencies",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["df192b",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1462,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["direct",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":544,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["directives",{"_index":547,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["disable",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":76,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["disabled_classname",{"_index":74,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["disabledclass",{"_index":149,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatch",{"_index":303,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatchtransaction",{"_index":439,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["display",{"_index":476,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["distribute",{"_index":1170,"title":{},"body":{"license.html":{}}}],["div",{"_index":201,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.classlist.add(classname",{"_index":204,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.classname",{"_index":234,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.innerhtml",{"_index":210,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.setattribute(obj[0",{"_index":207,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["doc",{"_index":415,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["docs",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":429,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{}}}],["document.createelement('div",{"_index":102,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["documentation",{"_index":613,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation/menu",{"_index":1125,"title":{},"body":{"index.html":{}}}],["documentation/schema.html",{"_index":1124,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["documented",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["documentfragment",{"_index":1321,"title":{},"body":{"additional-documentation/html.html":{}}}],["dom",{"_index":9,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["dom.addeventlistener('click",{"_index":157,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.addeventlistener('mousedown",{"_index":1339,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.add('ngxeditor__menuitem",{"_index":1334,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor",{"_index":1344,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor__menuitem",{"_index":1343,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(activeclass",{"_index":198,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.classlist.toggle(disabledclass",{"_index":199,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.getattribute('data",{"_index":1358,"title":{},"body":{"additional-documentation/schema.html":{}}}],["dom.innerhtml",{"_index":1333,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.textcontent",{"_index":1357,"title":{},"body":{"additional-documentation/schema.html":{}}}],["domparser",{"_index":1324,"title":{},"body":{"additional-documentation/html.html":{}}}],["domparser.fromschema(schema).parse(el).tojson",{"_index":1327,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer",{"_index":1316,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer.fromschema(schema).serializefragment(contentnode.content",{"_index":1322,"title":{},"body":{"additional-documentation/html.html":{}}}],["don't",{"_index":227,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/menu-plugin.html":{}}}],["dot",{"_index":1491,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["down",{"_index":1454,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["downgrade",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":101,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["dropdown.addeventlistener('click",{"_index":132,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdownmenu",{"_index":175,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdowntext",{"_index":110,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropdwon_item_classname",{"_index":105,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropwdown_open_classname",{"_index":127,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(selected_dropdown_item_classname",{"_index":170,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(dropwdown_open_classname",{"_index":130,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(selected_dropdown_item_classname",{"_index":172,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.contains(e.target",{"_index":119,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown_items",{"_index":84,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.has(dropdowngroup",{"_index":252,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.set('heading",{"_index":87,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownfields",{"_index":17,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowngroup",{"_index":29,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":113,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.appendchild(dom",{"_index":173,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.classlist.add(`${dropdwon_item_classname}__dropdownmenu",{"_index":114,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.contains(target",{"_index":125,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.getelementsbyclassname(active_dropdown_item_classname",{"_index":165,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext",{"_index":106,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.classlist.add(`${dropdwon_item_classname}__text",{"_index":107,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.textcontent",{"_index":108,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownview",{"_index":1,"title":{"classes/DropDownView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview(dropdowngroup",{"_index":254,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview.render",{"_index":256,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownviewrender",{"_index":37,"title":{"interfaces/DropdownViewRender.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["dropdwon_item_classname",{"_index":77,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname}__item",{"_index":144,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropupdate",{"_index":161,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropwdown_open_classname",{"_index":79,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":116,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.buttons",{"_index":230,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.preventdefault",{"_index":118,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.target",{"_index":124,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["e074c7a",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["e8f0fe",{"_index":461,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ease",{"_index":489,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["edge",{"_index":1136,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["editable",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":372,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["editor's",{"_index":807,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editor.component",{"_index":569,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.component.html",{"_index":376,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.scss",{"_index":374,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts",{"_index":356,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":395,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":383,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":390,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":386,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:51",{"_index":388,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:91",{"_index":384,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.module.ts",{"_index":562,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["editor.module.ts:16",{"_index":565,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.service",{"_index":401,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["editor.service.ts",{"_index":578,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:17",{"_index":593,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:22",{"_index":592,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:23",{"_index":594,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:31",{"_index":580,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["editor/additional",{"_index":1123,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["editor/tree/master/demo",{"_index":1348,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorcontent",{"_index":1540,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["editorinitialized",{"_index":404,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorstate",{"_index":43,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["editorstate.create",{"_index":438,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorusage",{"_index":1115,"title":{},"body":{"index.html":{}}}],["editorview",{"_index":19,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorview(this.ngxeditor.nativeelement",{"_index":437,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorview.dispatch",{"_index":1341,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["editror",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["ee1555b",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["eed8aaa",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":167,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/html.html":{}}}],["el.innerhtml",{"_index":1325,"title":{},"body":{"additional-documentation/html.html":{}}}],["el.textcontent",{"_index":169,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["element",{"_index":543,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["elementref",{"_index":391,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ellipsis",{"_index":1482,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["em",{"_index":334,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["emdash",{"_index":1481,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["emit",{"_index":418,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["emitter",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":689,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":796,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["enable/disbale",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["encapsulation",{"_index":362,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["enhancements",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":1302,"title":{},"body":{"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["entirely",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":427,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["error",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":919,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":498,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["eventually",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["evergreen",{"_index":1131,"title":{},"body":{"index.html":{}}}],["example",{"_index":646,"title":{},"body":{"changelog.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["examples",{"_index":649,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["execute",{"_index":159,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["exitcode",{"_index":1366,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["exitcode(view.state",{"_index":1459,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["experimental",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":235,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["exporting",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":555,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["express",{"_index":1190,"title":{},"body":{"license.html":{}}}],["extrakeys",{"_index":1396,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["f12754b",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["f17d0ef",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["f1f1f1",{"_index":460,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["f49e477",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["f62d945",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":100,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["family",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["fbf9d1d",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["fcdc39b",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["fd3ee1a",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["fdb1b30",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{}}}],["files",{"_index":1160,"title":{},"body":{"license.html":{}}}],["filesystem",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":494,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["findnodetype",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findnodetype(type",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firefox",{"_index":1138,"title":{},"body":{"index.html":{}}}],["firing",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1336,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["fitness",{"_index":1195,"title":{},"body":{"license.html":{}}}],["fix",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":1407,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["flatdeep",{"_index":62,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(updates",{"_index":276,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(val",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":477,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["fn",{"_index":387,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["focus",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["followed",{"_index":1490,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["following",{"_index":1179,"title":{},"body":{"license.html":{}}}],["font",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":1539,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["formcontrol",{"_index":1536,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["formcontrol(null",{"_index":1541,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["formgroup",{"_index":1535,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["forms",{"_index":623,"title":{"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{},"additional-documentation/reactive-forms.html":{}}}],["formsmodule",{"_index":1119,"title":{},"body":{"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["forroot",{"_index":563,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forroot(config",{"_index":564,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forwardref",{"_index":368,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["forwardselection",{"_index":1422,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["free",{"_index":1153,"title":{},"body":{"license.html":{}}}],["from.depth",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.marks",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.node(i).type",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":271,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["functions",{"_index":1094,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1177,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1315,"title":{},"body":{"additional-documentation/html.html":{}}}],["generated",{"_index":1141,"title":{},"body":{"index.html":{}}}],["getattrs",{"_index":1356,"title":{},"body":{"additional-documentation/schema.html":{}}}],["getdom",{"_index":200,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["geticonsvg",{"_index":60,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/functions.html":{}}}],["geticonsvg(menuitem.icon",{"_index":267,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["geticonsvg(name",{"_index":1101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmenu(toolbar",{"_index":317,"title":{},"body":{"classes/MenuBarView.html":{}}}],["getpos",{"_index":298,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["gets",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["getseperatordom",{"_index":233,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":597,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getwrapperdom",{"_index":12,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["github",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":1484,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["google",{"_index":1133,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1152,"title":{},"body":{"license.html":{}}}],["grippie",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":260,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["group.foreach((toolbaritem",{"_index":245,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["group.length",{"_index":248,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["h1",{"_index":88,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h2",{"_index":89,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h3",{"_index":90,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h4",{"_index":91,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h5",{"_index":92,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h6",{"_index":93,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["handle",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["handlebars",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["handletransactions(tr",{"_index":430,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["handling",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["head",{"_index":1430,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["heading",{"_index":140,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["headingrule(nodetype",{"_index":1515,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["headings",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":448,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["helpers",{"_index":56,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["here",{"_index":668,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{}}}],["hereby",{"_index":1151,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["history",{"_index":676,"title":{"additional-documentation/history.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["hold",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1200,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["hover",{"_index":458,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["html",{"_index":542,"title":{"additional-documentation/html.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["html5",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["htmlelement",{"_index":30,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["htmlmixed",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["htmlstring",{"_index":1326,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://developer.mozilla.org/en",{"_index":1319,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://github.com/prosemirror/prosemirror",{"_index":1475,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://github.com/sibiraj",{"_index":1346,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/docs/ref/#commands",{"_index":1306,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#history",{"_index":1291,"title":{},"body":{"additional-documentation/history.html":{}}}],["https://prosemirror.net/docs/ref/#inputrules",{"_index":1474,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://prosemirror.net/docs/ref/#keymap",{"_index":1292,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#schema",{"_index":1298,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/examples/codemirror",{"_index":1365,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/examples/footnote",{"_index":1129,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["https://prosemirror.net/examples/schema",{"_index":1337,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["https://sibiraj",{"_index":1143,"title":{},"body":{"index.html":{}}}],["https://sibiraj.dev/ngx",{"_index":1122,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["husky",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["i18nkey",{"_index":329,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":265,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":261,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["identifiers",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":357,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["implied",{"_index":1191,"title":{},"body":{"license.html":{}}}],["import",{"_index":38,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["imported",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["imports",{"_index":1116,"title":{},"body":{"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["imports/variables",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["improve",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["in6k",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1184,"title":{},"body":{"license.html":{}}}],["including",{"_index":1164,"title":{},"body":{"license.html":{}}}],["incomingchanges",{"_index":1382,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["incompatibility",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":595,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["infinity",{"_index":277,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["inherit",{"_index":530,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["initialize",{"_index":1402,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["initialized",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":576,"title":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["injectables",{"_index":577,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"overview.html":{}}}],["injectiontoken",{"_index":568,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["injectiontoken('ngxeditorconfig",{"_index":572,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":506,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["inner",{"_index":1410,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["innerhtml",{"_index":266,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":643,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["inputrule",{"_index":1483,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputrules",{"_index":1477,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputs",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["insert/edit",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["inserted",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1108,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1107,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1391,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["instead",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":282,"title":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["interfaces",{"_index":283,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"overview.html":{}}}],["internal",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["internet",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["intialization",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["introduced",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["invoked",{"_index":1330,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["isactive",{"_index":187,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isdropdownopen",{"_index":99,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["islastmenugroup",{"_index":243,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islastmenuitem",{"_index":247,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem",{"_index":55,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem(type",{"_index":216,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["ismarkactive",{"_index":54,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ismarkactive(state",{"_index":194,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["isnodeactive",{"_index":53,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isnodeactive(state",{"_index":196,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["issues",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["italic",{"_index":333,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["italics",{"_index":335,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{}}}],["item",{"_index":456,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["items",{"_index":483,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["itemtype",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itself",{"_index":1404,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ivy",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":434,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/html.html":{}}}],["jsondoc",{"_index":1287,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["justify",{"_index":485,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["karma",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":296,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["keymap",{"_index":677,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["keymap(basekeymap",{"_index":1313,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["keyof",{"_index":294,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["kind",{"_index":1189,"title":{},"body":{"license.html":{}}}],["labels",{"_index":103,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["labels[menuitem.i18nkey",{"_index":268,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["labels[menuitem.key",{"_index":138,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["labels[this.dropdowngroup",{"_index":109,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["language",{"_index":1353,"title":{},"body":{"additional-documentation/schema.html":{}}}],["later",{"_index":1387,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["latest",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":228,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["legend",{"_index":541,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["level",{"_index":222,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["liability",{"_index":1204,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1201,"title":{},"body":{"license.html":{}}}],["license",{"_index":1145,"title":{"license.html":{}},"body":{"license.html":{}}}],["lift(state",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem",{"_index":1300,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["liftlistitem(itemtype)(state",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem(schema.nodes.list_item",{"_index":1304,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["lighten",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1165,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1192,"title":{},"body":{"license.html":{}}}],["linenumbers",{"_index":1395,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["link",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":112,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["list_item",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listgroup",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listitem",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lists",{"_index":630,"title":{},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["literal",{"_index":330,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":1408,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["mac/.test(navigator.platform",{"_index":1447,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["made",{"_index":1413,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["managers",{"_index":1110,"title":{},"body":{"index.html":{}}}],["manually",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":86,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":491,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["mark",{"_index":192,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["marks",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/schema.html":{}}}],["marktype",{"_index":45,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1494,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1",{"_index":1496,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1].length",{"_index":1519,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["matching",{"_index":280,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["maximum",{"_index":1509,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maxlengthvalidator",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["maxlevel",{"_index":1516,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maybeescape(unit",{"_index":1461,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["menu",{"_index":316,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["menu_item_classname",{"_index":70,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menubar",{"_index":447,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["menubarview",{"_index":306,"title":{"classes/MenuBarView.html":{}},"body":{"classes/MenuBarView.html":{}}}],["menudom",{"_index":237,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(dom",{"_index":269,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(rendered.dom",{"_index":258,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(seperatordom",{"_index":274,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.classname",{"_index":321,"title":{},"body":{"classes/MenuBarView.html":{}}}],["menuindex",{"_index":246,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":135,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem.attrs",{"_index":197,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.attrs.level",{"_index":141,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.key",{"_index":139,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.type",{"_index":191,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemmeta",{"_index":65,"title":{"interfaces/MenuItemMeta.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta",{"_index":64,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemsmeta[dropdownitem",{"_index":136,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta[toolbaritem",{"_index":263,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview",{"_index":150,"title":{"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview(menuitem",{"_index":151,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview.render",{"_index":153,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemviewrender",{"_index":51,"title":{"interfaces/MenuItemViewRender.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["menuitemviewspec",{"_index":48,"title":{"interfaces/MenuItemViewSpec.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menulabels",{"_index":302,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menuoptions",{"_index":21,"title":{"interfaces/MenuOptions.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menuplugin",{"_index":1096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menuplugin(options",{"_index":1103,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1194,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1168,"title":{},"body":{"license.html":{}}}],["meta",{"_index":66,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["metadata",{"_index":361,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{}}}],["microsoft",{"_index":1135,"title":{},"body":{"index.html":{}}}],["migrate",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":501,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["minheight",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["minwidth",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["mirror",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1093,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatches",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1146,"title":{},"body":{"license.html":{}}}],["mod",{"_index":1296,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["mode",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":47,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/html.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["modify",{"_index":1167,"title":{},"body":{"license.html":{}}}],["module",{"_index":549,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["modules",{"_index":551,"title":{"modules.html":{}},"body":{"modules/NgxEditorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":566,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["more",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["mount",{"_index":1332,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["mousedownhandler",{"_index":115,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["mouseevent",{"_index":117,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["move",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["mozilla",{"_index":1137,"title":{},"body":{"index.html":{}}}],["multi",{"_index":369,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{}}}],["nature",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":670,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["nested",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":85,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/reactive-forms.html":{}}}],["newend",{"_index":1376,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval",{"_index":1371,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.charcodeat(newend",{"_index":1379,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.length",{"_index":1377,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.slice(start",{"_index":1380,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ng",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["ng_value_accessor",{"_index":366,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngmodel",{"_index":897,"title":{"additional-documentation/ngmodel.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ngmodel.html":{}}}],["ngmodule",{"_index":567,"title":{},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngondestroy",{"_index":445,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngoninit",{"_index":443,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngx",{"_index":371,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngx_editor_config_token",{"_index":571,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor",{"_index":75,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__content",{"_index":442,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditor__dropdown",{"_index":78,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__menubar",{"_index":322,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{}}}],["ngxeditor__menuitem",{"_index":71,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__placeholder",{"_index":532,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__seperator",{"_index":69,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorcomponent",{"_index":350,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngxeditorconfig",{"_index":300,"title":{"interfaces/NgxEditorConfig.html":{}},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditormodule",{"_index":550,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngxeditormodule.forroot",{"_index":665,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngxeditorservice",{"_index":382,"title":{"injectables/NgxEditorService.html":{}},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["ngxeditorservice.config",{"_index":406,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditorserviceconfig",{"_index":400,"title":{"injectables/NgxEditorServiceConfig.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["node",{"_index":120,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["node.attrs.language",{"_index":1362,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.attrs.order",{"_index":1498,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["node.attrs.text",{"_index":1363,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.childcount",{"_index":1497,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["nodes",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["nodespec",{"_index":1351,"title":{},"body":{"additional-documentation/schema.html":{}}}],["nodetype",{"_index":46,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["nodeview",{"_index":290,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["nodeviews",{"_index":297,"title":{"interfaces/NodeViews.html":{}},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/inline-code-editor.html":{}}}],["none",{"_index":499,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["noninfringement",{"_index":1198,"title":{},"body":{"license.html":{}}}],["notable",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["notes",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":1182,"title":{},"body":{"license.html":{}}}],["now",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":529,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["npm",{"_index":1112,"title":{},"body":{"index.html":{}}}],["null",{"_index":190,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["number",{"_index":242,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["obj[1",{"_index":208,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object",{"_index":250,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{}}}],["object.assign",{"_index":591,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["object.entries(attrs).length",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries(this.spec.attrs).foreach(obj",{"_index":206,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object.keys(toolbaritem).foreach((dropdowngroup",{"_index":251,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1156,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1428,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldend",{"_index":1374,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["older",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["oldval",{"_index":1372,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.charcodeat(oldend",{"_index":1378,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.length",{"_index":1375,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["once",{"_index":155,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["onchange",{"_index":402,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["onchange(doc",{"_index":1288,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["ondestroy",{"_index":360,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["one",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["oninit",{"_index":359,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["opacity",{"_index":495,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["open",{"_index":80,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opendropdown",{"_index":122,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opendropdown(e",{"_index":133,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opera",{"_index":1139,"title":{},"body":{"index.html":{}}}],["option",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options",{"_index":20,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options.labels",{"_index":264,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["options.toolbar",{"_index":239,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1495,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["ordered",{"_index":1127,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["ordered_list",{"_index":337,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["orderedlist",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderedlistrule(nodetype",{"_index":1492,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["otherwise",{"_index":1209,"title":{},"body":{"license.html":{}}}],["out",{"_index":490,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":1398,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["outline",{"_index":540,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["overflow",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1214,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":536,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["package",{"_index":701,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packager",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":463,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["page",{"_index":892,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{}}}],["paragraph",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["parsedoc(contentjson",{"_index":410,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["parsedom",{"_index":1355,"title":{},"body":{"additional-documentation/schema.html":{}}}],["parser",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1196,"title":{},"body":{"license.html":{}}}],["peer",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["peerdependencies",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["peerdependency",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1150,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1175,"title":{},"body":{"license.html":{}}}],["person",{"_index":1155,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1176,"title":{},"body":{"license.html":{}}}],["placeholder",{"_index":583,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["placeholder_classname",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placeholderplugin",{"_index":1097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholderplugin(text",{"_index":1105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placholder('type",{"_index":666,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["plain",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":286,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plugin.html",{"_index":1126,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":301,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plush",{"_index":1500,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["pointer",{"_index":497,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["popover",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1186,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1463,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["pos.line",{"_index":1466,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["position",{"_index":503,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["pre",{"_index":534,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/schema.html":{}}}],["prefix",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["prepublishonly",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["prerequisites",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":94,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{}}}],["project",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["propagate",{"_index":1416,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["propagated",{"_index":1414,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properly",{"_index":1401,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["property",{"_index":663,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["prosemirror",{"_index":40,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["prosemirror/plugins/menu",{"_index":582,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirror/plugins/placeholder",{"_index":584,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirrornode",{"_index":288,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["provide",{"_index":365,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["provided",{"_index":1187,"title":{},"body":{"license.html":{},"additional-documentation/schema.html":{}}}],["providedin",{"_index":585,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["providemyserviceoptions",{"_index":570,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{}}}],["providemyserviceoptions(config",{"_index":590,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":364,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["public",{"_index":587,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["publish",{"_index":1169,"title":{},"body":{"license.html":{}}}],["publishes",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1197,"title":{},"body":{"license.html":{}}}],["query",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["quote",{"_index":345,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["quotes",{"_index":1522,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["radius",{"_index":452,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rc.0",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["rc0",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":1470,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["reactive",{"_index":622,"title":{"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{},"additional-documentation/reactive-forms.html":{}}}],["reactiveformsmodule",{"_index":1533,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["readme",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["recompile",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["redo",{"_index":1294,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["redo(view.state",{"_index":1457,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["redundant",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["ref",{"_index":1345,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["refactored",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1290,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["reflects",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["regexp('^(#{1",{"_index":1518,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["registeronchange",{"_index":378,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registeronchange(fn",{"_index":385,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registerontouched",{"_index":379,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["relative",{"_index":504,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["release",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":154,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["removed",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":13,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendered",{"_index":255,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu",{"_index":236,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu(this.options",{"_index":323,"title":{},"body":{"classes/MenuBarView.html":{}}}],["replaced",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["representation",{"_index":1399,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["reset",{"_index":561,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["resizer",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["resolvedpos",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restore",{"_index":171,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["restriction",{"_index":1163,"title":{},"body":{"license.html":{}}}],["result",{"_index":279,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["results",{"_index":281,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["return",{"_index":126,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["returns",{"_index":35,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/input-rules.html":{}}}],["rewritten",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":474,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rgba(60",{"_index":517,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["right",{"_index":492,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["rights",{"_index":1166,"title":{},"body":{"license.html":{}}}],["root",{"_index":586,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"additional-documentation/reactive-forms.html":{}}}],["rule",{"_index":1485,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules",{"_index":648,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["rules.push(blockquoterule(schema.nodes.blockquote",{"_index":1526,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(bulletlistrule(schema.nodes.bullet_list",{"_index":1528,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(codeblockrule(schema.nodes.code_block",{"_index":1529,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(headingrule(schema.nodes.heading",{"_index":1530,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(orderedlistrule(schema.nodes.ordered_list",{"_index":1527,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rxjs",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1504,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["s.github.io/ngx",{"_index":1144,"title":{},"body":{"index.html":{}}}],["s/ngx",{"_index":1347,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["same",{"_index":420,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["satisfying",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1114,"title":{},"body":{"index.html":{}}}],["scheama",{"_index":1120,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["schedule",{"_index":1403,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schema",{"_index":183,"title":{"additional-documentation/schema.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["schema.marks[menuitem.key",{"_index":193,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodefromjson(contentjson",{"_index":412,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["schema.nodefromjson(this.jsondoc",{"_index":1318,"title":{},"body":{"additional-documentation/html.html":{}}}],["schema.nodes.blockquote",{"_index":224,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.bullet_list",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.code_block",{"_index":1338,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["schema.nodes.heading",{"_index":219,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.list_item",{"_index":218,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["schema.nodes.ordered_list",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.paragraph",{"_index":221,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["schema.nodes[menuitem.key",{"_index":195,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes[this.menuitem.key",{"_index":215,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.text(change.text",{"_index":1445,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schemabasic.marks",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemabasic.nodes",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.bulletlist",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.listitem",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.orderedlist",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1121,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["selected",{"_index":83,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_dropdown_item_classname",{"_index":82,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":1368,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selection.eq(state.selection",{"_index":1425,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selector",{"_index":370,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["self",{"_index":481,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["sell",{"_index":1173,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["seperator_classname",{"_index":68,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["seperatordom",{"_index":273,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":627,"title":{},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["setblocktype(toggletype)(state",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setblocktype(type",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setselection(anchor",{"_index":1433,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["settimeout",{"_index":1405,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["setting",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["setup",{"_index":1476,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["setupcommandlisteners",{"_index":212,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["shadow",{"_index":516,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["shall",{"_index":1183,"title":{},"body":{"license.html":{}}}],["shift",{"_index":1297,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["shortcuts",{"_index":669,"title":{"additional-documentation/shortcuts.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["show",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["sibiraj",{"_index":1149,"title":{},"body":{"license.html":{}}}],["signs",{"_index":1514,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["simple",{"_index":1106,"title":{},"body":{"index.html":{}}}],["sinklistitem",{"_index":1301,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["sinklistitem(schema.nodes.list_item",{"_index":1305,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["size",{"_index":450,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["smartquotes",{"_index":1480,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["smartquotes.concat(ellipsis",{"_index":1525,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["software",{"_index":1158,"title":{},"body":{"license.html":{}}}],["solid",{"_index":473,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["something",{"_index":667,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/input-rules.html":{}}}],["space",{"_index":528,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/input-rules.html":{}}}],["spacing",{"_index":465,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["spec",{"_index":142,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["spellcheck",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["splitlistitem",{"_index":1299,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["splitlistitem(schema.nodes.list_item",{"_index":1303,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["src/.../flatdeep.ts",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1095,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../islistitem.ts",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ismarkactive.ts",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isnodeactive.ts",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.ts",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meta.ts",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngx",{"_index":1099,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../placeholder.ts",{"_index":1098,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../schema.ts",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../toggleblocktype.ts",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglelist.ts",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglewrap.ts",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1218,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/ngx",{"_index":355,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/toggleblocktype.ts",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/togglelist.ts",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/togglewrap.ts",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/islistitem.ts",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/ismarkactive.ts",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/isnodeactive.ts",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/index.ts",{"_index":1102,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts",{"_index":6,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:169",{"_index":36,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:184",{"_index":346,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:192",{"_index":348,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:225",{"_index":347,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:46",{"_index":31,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:48",{"_index":23,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:62",{"_index":34,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts",{"_index":307,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:10",{"_index":313,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:12",{"_index":311,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:14",{"_index":310,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:25",{"_index":314,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:35",{"_index":315,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:9",{"_index":312,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/meta.ts",{"_index":328,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/placeholder.ts",{"_index":1104,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/schema.ts",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/types.ts",{"_index":284,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/types.ts:23",{"_index":596,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["src/lib/utils/flatdeep.ts",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/utils/icons/index.ts",{"_index":1100,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ssuperczynski",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["stackblitz",{"_index":1140,"title":{},"body":{"index.html":{}}}],["start",{"_index":1373,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["started",{"_index":598,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":1505,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["state",{"_index":44,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["state.doc.content.size",{"_index":424,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.eq(doc",{"_index":421,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.rangehasmark(from",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.doc.tojson",{"_index":435,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.selection",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.tr",{"_index":422,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["static",{"_index":394,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["store",{"_index":1386,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["string",{"_index":262,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["strong",{"_index":332,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{}}}],["style",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":353,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":373,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["subject",{"_index":1178,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1171,"title":{},"body":{"license.html":{}}}],["submit",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["subscription",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["substantial",{"_index":1185,"title":{},"body":{"license.html":{}}}],["such",{"_index":1111,"title":{},"body":{"index.html":{}}}],["support",{"_index":635,"title":{},"body":{"changelog.html":{},"modules.html":{},"additional-documentation/history.html":{}}}],["supported",{"_index":944,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["svg",{"_index":493,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"modules.html":{}}}],["switching",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["tab",{"_index":806,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["tables",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["tabs",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":1013,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["tags",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":123,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["tcr",{"_index":291,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":352,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["templateurl",{"_index":375,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["text",{"_index":137,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["text/javascript",{"_index":1354,"title":{},"body":{"additional-documentation/schema.html":{}}}],["text/plain",{"_index":1359,"title":{},"body":{"additional-documentation/schema.html":{}}}],["textarea",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["textblock",{"_index":1487,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule",{"_index":1479,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule(new",{"_index":1517,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textcontent",{"_index":145,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["textselection",{"_index":1367,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["textselection.create(doc",{"_index":1432,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["thanks",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["this.asprosemirrorselection(state.doc",{"_index":1424,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm",{"_index":1392,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.focus",{"_index":1434,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getcursor",{"_index":1464,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getvalue",{"_index":1440,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getwrapperelement",{"_index":1400,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.hasfocus",{"_index":1423,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('anchor",{"_index":1429,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('head",{"_index":1431,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('beforechange",{"_index":1415,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('changes",{"_index":1419,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('cursoractivity",{"_index":1417,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('focus",{"_index":1421,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.posfromindex(head",{"_index":1436,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.refresh",{"_index":1406,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.setselection(this.cm.posfromindex(anchor",{"_index":1435,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.somethingselected",{"_index":1465,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.codemirrorkeymap",{"_index":1397,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.config",{"_index":405,"title":{},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["this.createeditor",{"_index":444,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.dom",{"_index":176,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.dom.addeventlistener('mousedown",{"_index":226,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields",{"_index":96,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields.foreach(dropdownitem",{"_index":134,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdowngroup",{"_index":95,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorinitialized",{"_index":407,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.editorview",{"_index":97,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.dispatch",{"_index":232,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.state",{"_index":184,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.form.valuechanges.subscribe((val",{"_index":1542,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["this.forwardselection",{"_index":1418,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getdom",{"_index":182,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.getpos",{"_index":1389,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getwrapperdom",{"_index":177,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.handletransactions.bind(this",{"_index":440,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.incomingchanges",{"_index":1390,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.jsondoc",{"_index":1289,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/html.html":{}}}],["this.maybeescape('char",{"_index":1453,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.maybeescape('line",{"_index":1452,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.menuitem",{"_index":180,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.attrs.level",{"_index":223,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.type",{"_index":213,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.node",{"_index":1388,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.node.textcontent",{"_index":1394,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.onchange",{"_index":409,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.onchange(json",{"_index":436,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.options",{"_index":98,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}}}],["this.options.labels",{"_index":104,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.parsedoc(value",{"_index":416,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.render",{"_index":319,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.setupcommandlisteners",{"_index":185,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec",{"_index":181,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.attrs",{"_index":205,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames",{"_index":202,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames.foreach(classname",{"_index":203,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.innerhtml",{"_index":209,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.textcontent",{"_index":211,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.update",{"_index":320,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatecontent(value",{"_index":408,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.updatemenuitems",{"_index":324,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatemenuitems(this.view.state",{"_index":327,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updates",{"_index":178,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updates.push(dropupdate",{"_index":174,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updating",{"_index":1411,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.valuechanged",{"_index":1420,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view",{"_index":318,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.destroy",{"_index":446,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.dispatch(state.tr.setselection(selection",{"_index":1426,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.dispatch(tr",{"_index":425,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.dom",{"_index":326,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.dom.parentnode.insertbefore(menudom",{"_index":325,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.state",{"_index":417,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.state.applytransaction(tr",{"_index":431,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.state.tr.replacewith",{"_index":1441,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.updatestate(state",{"_index":432,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["three",{"_index":1506,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["title",{"_index":147,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["todom(node",{"_index":1360,"title":{},"body":{"additional-documentation/schema.html":{}}}],["toggle",{"_index":1310,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["toggleblocktype",{"_index":58,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["toggleblocktype(type",{"_index":220,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["togglelist",{"_index":57,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglelist(type",{"_index":217,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["togglemark",{"_index":39,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.code",{"_index":1312,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.em",{"_index":1311,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.strong",{"_index":1309,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks[this.menuitem.key",{"_index":214,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toggletype",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglewrap",{"_index":59,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglewrap(type",{"_index":225,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toolbar",{"_index":238,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbar.foreach((group",{"_index":240,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbar.length",{"_index":244,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbarcustommenuitem",{"_index":293,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbardropdown",{"_index":292,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["toolbardropdown[toolbardropdowngroupkeys",{"_index":295,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["toolbardropdowngroupkeys",{"_index":16,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbardropdowngroupvalues",{"_index":18,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbarindex",{"_index":241,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem",{"_index":49,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem(editorview",{"_index":272,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem[dropdowngroup",{"_index":253,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":511,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tort",{"_index":1208,"title":{},"body":{"license.html":{}}}],["tr",{"_index":304,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["tr.docchanged",{"_index":433,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tr.replacewith(0",{"_index":423,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["track",{"_index":1412,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["transaction",{"_index":287,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["transcation",{"_index":1331,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["transform",{"_index":1471,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["transition",{"_index":487,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["translate",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":512,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["travis",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":354,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["true",{"_index":128,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{}}}],["try",{"_index":414,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tslib",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":1486,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["tweaks",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["twice",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["type.isinset(state.storedmarks",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1216,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1472,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["typeof",{"_index":249,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":52,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{}}}],["typo",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["udpate",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["unclear",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":1052,"title":{},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{}}}],["undo",{"_index":1293,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["undo(view.state",{"_index":1455,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["unique",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["units",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["unlink",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["unwanted",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1451,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["upcoming",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":152,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["update(state",{"_index":162,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updatecontent(value",{"_index":413,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["updated",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["updatemenuitems",{"_index":308,"title":{},"body":{"classes/MenuBarView.html":{}}}],["updates",{"_index":10,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["updates.push(rendered.updates",{"_index":257,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updates.push(update",{"_index":270,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":1384,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["upgrade",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["urls",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["us/docs/web/api/documentfragment",{"_index":1320,"title":{},"body":{"additional-documentation/html.html":{}}}],["usage",{"_index":645,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["use",{"_index":708,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":795,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["useexisting",{"_index":367,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["usefactory",{"_index":574,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["user",{"_index":1473,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["usevalue",{"_index":573,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["using",{"_index":673,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/schema.html":{}}}],["utils",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["utils/flatdeep",{"_index":63,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["utils/icons",{"_index":61,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["v1.0.0",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["v1.1.1",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["v1.1.2",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["v1.1.5",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["v1.5.3",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["v1.5.4",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["v1.5.5",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["v1.6.5",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["v4.4.4",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["v5.34.0",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/reactive-forms.html":{}}}],["validation",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["valuechanged",{"_index":1437,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["values",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["var",{"_index":545,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["variables",{"_index":1219,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":509,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["via",{"_index":1109,"title":{},"body":{"index.html":{}}}],["video",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":42,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["view.dispatch",{"_index":1456,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view.focus",{"_index":1460,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view/edit",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":396,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewchild('ngxeditor",{"_index":393,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewed",{"_index":1142,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":397,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewencapsulation.none",{"_index":363,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["void",{"_index":186,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["volodymyro",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["vulnerabilities",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["vulnerability",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1193,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1188,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1205,"title":{},"body":{"license.html":{},"additional-documentation/inline-code-editor.html":{}}}],["white",{"_index":469,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["whose",{"_index":1512,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["width",{"_index":486,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["wiki",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["window.addeventlistener('mousedown",{"_index":129,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["window.removeeventlistener('mousedown",{"_index":131,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["without",{"_index":1162,"title":{},"body":{"license.html":{}}}],["work",{"_index":1118,"title":{},"body":{"index.html":{}}}],["working",{"_index":1314,"title":{},"body":{"additional-documentation/html.html":{}}}],["wrap",{"_index":535,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wrapin(type)(state",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapinlist(type)(state",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapper",{"_index":158,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["wrappinginputrule",{"_index":1478,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s",{"_index":1503,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s*>\\s",{"_index":1489,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["writevalue",{"_index":380,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["writevalue(value",{"_index":389,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wysiwyg",{"_index":1077,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["x1f37b",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["x1f389",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["xml",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["y",{"_index":1458,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["yarn",{"_index":1113,"title":{},"body":{"index.html":{}}}],["yes",{"_index":581,"title":{},"body":{"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":523,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["zero",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":560,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DropDownView.html":{"url":"classes/DropDownView.html","title":"class - DropDownView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropDownView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWrapperDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dropdownGroup: ToolbarDropdownGroupKeys, dropdownFields: ToolbarDropdownGroupValues, editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dropdownGroup\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupKeys\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropdownFields\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupValues\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:48\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWrapperDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetWrapperDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DropdownViewRender\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command,\n  DropdownViewRender,\n  MenuItemViewRender\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem } from '../../helpers';\nimport { toggleList, toggleBlockType, toggleWrap } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render(): DropdownViewRender {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render(): MenuItemViewRender {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners(): { command: Command } {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n\n      if (type === schema.nodes.blockquote) {\n        command = toggleWrap(type);\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState): void {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropdownViewRender.html":{"url":"interfaces/DropdownViewRender.html","title":"interface - DropdownViewRender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropdownViewRender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dom\n                                \n                                \n                                        updates\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dom\n                                    \n                                \n                                \n                                    \n                                        dom:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updates\n                                    \n                                \n                                \n                                    \n                                        updates:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBarView.html":{"url":"classes/MenuBarView.html","title":"class - MenuBarView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBarView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/MenuBarView.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                options\n                            \n                            \n                                updateMenuItems\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMenuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditorView\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nimport { MenuOptions } from '../../../types';\n\nimport { renderMenu } from './menu';\n\nclass MenuBarView {\n  options: MenuOptions;\n  view: EditorView;\n\n  dom: HTMLElement;\n\n  updateMenuItems: (state: EditorState) => void;\n\n  constructor(editorView: EditorView, options: MenuOptions) {\n    // const menu = getMenu(toolbar);\n    this.view = editorView;\n    this.options = options;\n\n    this.render();\n    this.update();\n  }\n\n  render(): void {\n    const menuDom = document.createElement('div');\n    menuDom.className = 'NgxEditor__MenuBar';\n\n    const { update } = renderMenu(this.options, this.view, menuDom);\n    this.updateMenuItems = update;\n\n    this.view.dom.parentNode.insertBefore(menuDom, this.view.dom);\n  }\n\n  update(): void {\n    this.updateMenuItems(this.view.state);\n  }\n}\n\nexport default MenuBarView;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemMeta.html":{"url":"interfaces/MenuItemMeta.html","title":"interface - MenuItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                        i18nKey\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        key\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nKey\n                                    \n                                \n                                \n                                    \n                                        i18nKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"mark\" | \"node\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mark\" | \"node\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItemMeta {\n  key: string;\n  i18nKey: string;\n  icon?: string;\n  type: 'mark' | 'node';\n  attrs?: {\n    level?: number\n  };\n}\n\nconst menuItemsMeta: { [key: string]: MenuItemMeta } = {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  },\n  blockquote: {\n    key: 'blockquote',\n    i18nKey: 'blockquote',\n    icon: 'quote',\n    type: 'node'\n  }\n};\n\nexport default menuItemsMeta;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItemView.html":{"url":"classes/MenuItemView.html","title":"class - MenuItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:184\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuItem\n                                                  \n                                                        \n                                                                        MenuItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        MenuItemViewSpec\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:184\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:225\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MenuItemViewRender\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command,\n  DropdownViewRender,\n  MenuItemViewRender\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem } from '../../helpers';\nimport { toggleList, toggleBlockType, toggleWrap } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render(): DropdownViewRender {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render(): MenuItemViewRender {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners(): { command: Command } {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n\n      if (type === schema.nodes.blockquote) {\n        command = toggleWrap(type);\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState): void {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemViewRender.html":{"url":"interfaces/MenuItemViewRender.html","title":"interface - MenuItemViewRender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemViewRender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dom\n                                \n                                \n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dom\n                                    \n                                \n                                \n                                    \n                                        dom:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemViewSpec.html":{"url":"interfaces/MenuItemViewSpec.html","title":"interface - MenuItemViewSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemViewSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeClass\n                                \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                            Optional\n                                        classNames\n                                \n                                \n                                        disabledClass\n                                \n                                \n                                            Optional\n                                        innerHTML\n                                \n                                \n                                            Optional\n                                        textContent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeClass\n                                    \n                                \n                                \n                                    \n                                        activeClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledClass\n                                    \n                                \n                                \n                                    \n                                        disabledClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        innerHTML\n                                    \n                                \n                                \n                                    \n                                        innerHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textContent\n                                    \n                                \n                                \n                                    \n                                        textContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuOptions.html":{"url":"interfaces/MenuOptions.html","title":"interface - MenuOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                                \n                                            Optional\n                                        toolbar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:         MenuLabels\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuLabels\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolbar\n                                    \n                                \n                                \n                                    \n                                        toolbar:         Toolbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Toolbar\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorComponent.html":{"url":"components/NgxEditorComponent.html","title":"component - NgxEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ngx-editor\n            \n\n            \n                styleUrls\n                ngx-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ngxEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEditor\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxEditorService: NgxEditorService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxEditorService\n                                                  \n                                                        \n                                                                        NgxEditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: object | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            object | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditor', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, ViewEncapsulation, OnInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\n\nimport { NgxEditorService, NgxEditorServiceConfig } from './ngx-editor.service';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: 'ngx-editor.component.html',\n  styleUrls: ['ngx-editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  @ViewChild('ngxEditor', { static: true }) ngxEditor: ElementRef;\n\n  private view: EditorView;\n  private onChange: (value: object) => void;\n\n  private config: NgxEditorServiceConfig;\n\n  private editorInitialized = false;\n\n  constructor(ngxEditorService: NgxEditorService) {\n    this.config = ngxEditorService.config;\n  }\n\n  writeValue(value: object | null): void {\n    if (!this.editorInitialized) {\n      return;\n    }\n\n    this.updateContent(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(): void { }\n\n  private parseDoc(contentJson: object): ProsemirrorNode {\n    if (!contentJson) {\n      return null;\n    }\n\n    const { schema } = this.config;\n    return schema.nodeFromJSON(contentJson);\n  }\n\n  private updateContent(value: object): void {\n    try {\n      const doc = this.parseDoc(value);\n      const state = this.view.state;\n\n      // don't emit if both content is same\n      if (doc !== null && state.doc.eq(doc)) {\n        return;\n      }\n\n      const tr = state.tr;\n      tr.replaceWith(0, state.doc.content.size, doc);\n      this.view.dispatch(tr);\n    } catch (err) {\n      console.error('Unable to update document.', err);\n    }\n  }\n\n  private handleTransactions(tr: Transaction): void {\n    const { state } = this.view.state.applyTransaction(tr);\n\n    this.view.updateState(state);\n\n    if (tr.docChanged && this.onChange) {\n      const json = state.doc.toJSON();\n      this.onChange(json);\n    }\n  }\n\n  createEditor(): void {\n    const { schema, plugins, nodeViews } = this.config;\n\n    this.view = new EditorView(this.ngxEditor.nativeElement, {\n      state: EditorState.create({\n        schema,\n        plugins\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes: {\n        class: 'NgxEditor__Content'\n      },\n    });\n\n    this.editorInitialized = true;\n  }\n\n  ngOnInit(): void {\n    this.createEditor();\n  }\n\n  ngOnDestroy(): void {\n    this.view.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ngx-editor.component.scss\n                \n                $menubar-height: 1.85rem;\n$icon-size: 1.85rem;\n\n$border-radius: 4px;\n\n$menubar-border-color: #ddd;\n\n$menu-item-border-radius: 2px;\n$menu-item-hover-bg-color: #f1f1f1;\n$menu-item-active-bg-color: #e8f0fe;\n$menu-item-active-color: #1a73e8;\n\n$dropdown-menu-hover-bg-color: #f1f1f1;\n$dropdown-item-active-bg-color: #f1f1f1;\n\n$menubar-padding: 0.2rem;\n$menu-item-spacing: 0.3rem;\n$menubar-text-padding: 0 $menu-item-spacing;\n\n.NgxEditor {\n  background: white;\n  color: black;\n  background-clip: padding-box;\n  border-radius: $border-radius;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n}\n\n.NgxEditor__MenuBar {\n  display: flex;\n  padding: $menubar-padding;\n  border-bottom: 1px solid $menubar-border-color;\n  cursor: default;\n  height: $menubar-height;\n}\n\n.NgxEditor__MenuItem {\n  $self: &;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: $menu-item-hover-bg-color;\n  }\n\n  &#{ $self }--Icon {\n    height: $icon-size;\n    width: $icon-size;\n    transition: 0.3s ease-in-out;\n    margin-right: 2px;\n  }\n\n  &#{ $self }--Text {\n    padding: $menubar-text-padding;\n  }\n\n  &#{ $self }--Active {\n    background-color: $menu-item-active-bg-color;\n    color: $menu-item-active-color;\n\n    svg {\n      fill: $menu-item-active-color;\n    }\n  }\n}\n\n.NgxEditor--Disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.NgxEditor__Seperator {\n  border-left: 1px solid #ccc;\n  margin: 0 $menu-item-spacing;\n}\n\n.NgxEditor__Dropdown {\n  $self: &;\n  min-width: 4rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: $dropdown-menu-hover-bg-color;\n  }\n\n  #{ $self }__Text {\n    display: flex;\n    align-items: center;\n    padding: $menubar-text-padding;\n\n    &::after {\n      display: inline-block;\n      content: \"\";\n      margin-left: 1.5rem;\n      vertical-align: 0.25rem;\n      border-top: 0.25rem solid;\n      border-right: 0.25rem solid transparent;\n      border-bottom: 0;\n      border-left: 0.25rem solid transparent;\n    }\n  }\n\n  #{ $self }__DropdownMenu {\n    position: absolute;\n    left: 0;\n    top: calc(#{$menubar-height} + 2px);\n    box-shadow: rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    border-radius: $border-radius;\n    background-color: white;\n    display: none;\n    z-index: 10;\n    width: 100%;\n  }\n\n  #{ $self }__Item {\n    padding: 0.5rem;\n    white-space: nowrap;\n    color: inherit;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 2%);\n    }\n  }\n\n  &#{ $self }--Selected,\n  &#{ $self }--Open {\n    background-color: $menu-item-active-bg-color;\n\n    #{ $self }__Text {\n      color: $menu-item-active-color;\n    }\n  }\n\n  #{ $self }--Active {\n    background-color: $dropdown-item-active-bg-color;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 4%);\n    }\n  }\n\n  &#{ $self }--Open {\n    #{ $self }__DropdownMenu {\n      display: block;\n    }\n  }\n}\n\n.NgxEditor__Placeholder {\n  color: #6c757d;\n  opacity: 1;\n}\n\n.NgxEditor__Content {\n  padding: 0.5rem;\n  white-space: pre-wrap;\n\n  p {\n    margin: 0;\n    margin-bottom: 0.7rem;\n  }\n\n  blockquote {\n    padding-left: 1rem;\n    border-left: 3px solid #ddd;\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n\n// prosemirror\n.ProseMirror {\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxEditorComponent', 'selector': 'ngx-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorConfig.html":{"url":"interfaces/NgxEditorConfig.html","title":"interface - NgxEditorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nodeViews\n                                \n                                \n                                            Optional\n                                        plugins\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodeViews\n                                    \n                                \n                                \n                                    \n                                        nodeViews:         NodeViews\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeViews\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorModule.html":{"url":"modules/NgxEditorModule.html","title":"module - NgxEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxEditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgxEditorComponent } from './ngx-editor.component';\n\nimport { NgxEditorServiceConfig, provideMyServiceOptions } from './ngx-editor.service';\nimport { NgxEditorConfig } from './types';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\n\n@NgModule({\n  declarations: [NgxEditorComponent],\n  exports: [NgxEditorComponent],\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorService.html":{"url":"injectables/NgxEditorService.html","title":"injectable - NgxEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgxEditorServiceConfig)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorServiceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorServiceConfig.html":{"url":"injectables/NgxEditorServiceConfig.html","title":"injectable - NgxEditorServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nodeViews\n                            \n                            \n                                    Public\n                                plugins\n                            \n                            \n                                    Public\n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeViews\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Plugin[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    menu(),\n    placeholder()\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Schema\n\n                        \n                    \n                    \n                        \n                            Default value : schema\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeViews.html":{"url":"interfaces/NodeViews.html","title":"interface - NodeViews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeViews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    NodeView\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/types.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\nAll notable changes to this project will be documented in this file.\n\nTags\n\nFeatures\nBug Fixes\nPerformance Improvements\nDependency Updates\nBreaking Changes\nEnhancements\nDocumentation\nInternal\n\n\nv5.0.0-alpha.9 (2020-06-13)\nBug Fixes\n\nfix issues with reactive-forms (bede7a1)\n\nv5.0.0-alpha.8 (2020-06-08)\nBug Fixes\n\nset active state correctly for nested lists (453d807)\nfix vulnerabilities (9c89d2a)\n\nFeatures\n\nadd blockquote support (a26f192)\n\nv5.0.0-alpha.7 (2020-06-01)\nEnhancements\n\nremove dependencies prosemirror-utils and prosemirror-tables (6e13142)\n\nBug Fixes\n\nhandle null value correctly in input (84104c2)\nfix schema usage in example app (6e13142)\n\nDocumentation\n\nadd input-rules examples (ce00b5f)\n\nv5.0.0-alpha.6 (2020-05-31)\nFeatures\n\nadd support for custom menu items in menu plugin (1737369)\nsupport custom prosemirror schema (1737369)\nsupport prosemirror nodeviews config (1737369)\n\nBreaking Changes\n\nrenamed few css identifiers (c9555b4)\n\nv5.0.0-alpha.5 (2020-05-08)\nFeatures\n\nadd support for prosemirror plugins (fcdc39b)\n\nBreaking Changes\n\nplaceholder and config property is replaced with plugins\n\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [menu(), placholder('Type something here...')]\n});\nshortcuts needs to be configured manually using plugins\nremoved peerDependencies prosemirror-history and prosemirror-keymap\n\nv5.0.0-alpha.4 (2020-05-05)\nFeatures\n\nadd support for headings (2d7d38e)\n\nv5.0.0-alpha.3 (2020-05-04)\nFeatures\n\nadd support for list (274dcc7)\n\nBreaking Changes\n\nprosemirror peerDependencies are no longer needed (274dcc7)\n\nv5.0.0-alpha.2 (2020-04-30)\nBug Fixes\n\nfix issues with custom config (613ec52)\nremove empty DOM wrapper around the editor (5f176e1)\n\nv5.0.0-alpha.1 (2020-04-23)\nBreaking Changes\n\nfix issues with ivy compiler (30b513c)\n\nEnhancements\n\nremove unwanted dependencies (94374c4)\n\nv5.0.0-alpha (2020-04-22)\nThe package is entirely rewritten with prosemirror as default editor. Most of the options are removed and will be added eventually in upcoming releases.\nFeatures\n\nuse prosemirror as default editor (f17d0ef)\n\nBreaking Changes\n\nremove app prefix from the component (bbe3daa)\nupgrade to angular 9 (b280769)\n\nInternal\n\nmigrate from travis-ci to github actions (2afb2ec)\nupdate devDependencies (fd3ee1a)\n\nv4.1.0 (2018-10-21)\nDependency Updates\n\nupdate husky to v1.1.2\n\nInternal\n\ncode cleanup\n\nv4.1.0-beta.0 (2018-10-12)\nFeatures\n\nnew MaxLengthvalidator for validation in reactive forms\n\nDependency Updates\n\nupdate ng-packagr to v4.3.0\n\nv4.0.0 (2018-10-04)\n&#x1F389; Support Angular 6.\nDependency Changes\n\nupdate angular to v6 and its dependencies\nupdate compodoc\nupdate ng-packagr\nremove commitizen, cz-conventional-changelog\n\nInternal\n\nadd prePublishOnly script to prevent accidental publishes\n\nDocumentation\n\nrecompile docs with compodoc v1.1.5\n\nv3.3.0 (2018-05-04)\nNo new changes were introduced.\nFollow releases from v3.3.0-rc0 to v3.3.0-rc.14 for release notes &#x1F37B;\nv3.3.0-rc.14 (2018-05-02)\nDocumentation\n\nupdate unclear prerequisites in README (1c316cb), closes #92\n\nEnhancements\n\nupdate ngx-bootstrap (eed8aaa)\n\nInternal\n\nupdate compodoc (47f34ad)\nupdate bootstrap (ee1555b)\nupdate ng-packagr (b174a14)\n\nBreaking Changes\n\nremove code-editor support (24b92e0)\n\nv3.3.0-rc.13 (2018-03-14)\nFeatures\n\nauto-focus while switching to code-editor mode (1ed938e), closes #79\nshow placeholder in code editor (bae2216)\noption to insert video link/ youtube urls (e074c7a), closes #72\noption to set font family (1248db7), closes #72\n\nInternal\n\nremove dead code which used to enable or disable toolbar (00adda2)\n\nDEPENDENCY UPDATE\n\nupdate dependencies in package-lock file to latest satisfying version (f62d945)\n\nv3.3.0-rc.12 (2018-03-11)\nFeatures\n\nsupport TAB key to focus the editor's text-area (8e3e65b), closes #79\n\nBug Fixes\n\ndon't return from writeValue (36133e1), closes #78\n\nPerformance\n\nremove unused imports/variables (182152a)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.3 (0f94d1e)\nupdate compodoc to v1.0.9 (a9262c2)\n\nv3.3.0-rc.11 (2018-03-06)\nBug Fixes\n\nuse codemirror's htmlMixed mode instead of xml mode (fbf9d1d)\n\nInternal\n\nremove redundant karma-cli (df192b)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.2 (87bb04e)\nupdate compodoc to v1.0.8 (47d5ba4)\nupdate ng-packagr to v2.2.0 (ba86da6)\n\nv3.3.0-rc.10 (2018-02-27)\nBug Fixes\n\ndon't override default styles (5beee77), closes #68\n\nv3.3.0-rc.9 (2018-02-26)\nFeatures\n\nstyle - highlight active tabs in popover (0b7dd99)\noption to set font color and background color (a983fd4), closes #65\noption to set font-size (f49e477), closes #31\n\nBug Fixes\n\nstyle - center align popover arrow (2a13ca0)\n\nInternal\n\nudpate devDependencies (4fddfac)\n\nv3.3.0-rc.8 (2018-02-22)\nBug Fixes\n\nfix: links inserted twice (97398ee), closes #61\n\nv3.3.0-rc.7 (2018-02-21)\nEnhancements\n\nremove bootstrap from peerDependency (8aa0ffd)\n\nv3.3.0-rc.6 (2018-02-20)\nBug Fixes\n\nfix a typo in toolbar (367474f)\n\nEnhancements\n\nadded new peer dependencies (683bbee)\nupdated docs (57e4056)\n\nv3.3.0-rc.5 (2018-02-19)\nFeatures\n\noption to open URL in new tab (d4001c4)\noption to upload images from local filesystem (09b69b5), closes #34\n\nInternal\n\ndocumentation compiled with compodoc v1.0.7\n\nv3.3.0-rc.4 (2018-02-08)\nInternal\n\nupdate ng-packager to v2.0.0\n\nv3.3.0-rc.3 (2018-02-05)\nBug Fixes\n\nremove border for toolbar if hidden (4eef077), closes #43\nplaceholder gets duplicated if a page has more than one editor (cdfd4bc), closes #44\nngModel binding does not reflects in editor's textarea (4f4967a), closes #45\n\nChanges\n\nupdate peerDependency codemirror to v5.34.0 (6012283)\n\nInternal\n\nupdate devDependencies (6012283)\n\nv3.3.0-rc.2 (2018-01-19)\nBug Fixes\n\nfix: add missing xml parser for code-mirror (1078c69)\n\nv3.3.0-rc.1 (2018-01-19)\nBug Fixes\n\nfix error in exporting codemirror (9f0e19d), closes #40\n\nInternal\n\nupdate ng-packagr to v2.0.0-rc.11 (9f0e19d)\n\nDocumentation\n\nupdate additional docs (9f0e19d)\nremoved wiki\n\nv3.3.0-rc.0 (2018-01-19)\nFeatures\n\nadded event-emitter to emit blur and focus events (2ed79b8)\nadded option to view/edit plain HTML code (2ed79b8), closes #26\n\nInternal\n\nupdate angular-cli to v1.6.5 (2ed79b8)\nupdate devDependencies (2ed79b8)\n\nDocumentation\n\ndocs autogenerated using compodoc\n\n\n\nv3.2.1 (2017-12-19)\nBug Fixes\n\nadd button types to toolbar to avoid firing submit while using in reactive forms (d4ccc79)\n\nEnhancements\n\nlighten placeholder color (27ccd72)\n\nv3.2.0 (2017-12-14)\nFeatures\n\nenable or disable toolbar (0a915f5)\n\nBug Fixes\n\nfix: horizontal overflow in editor (0a915f5)\nminor style tweaks (4390502)\n\nv3.1.2 (2017-12-05)\nBug Fixes\n\nremove methods that are not supported by Internet Explorer (7be2fd6)\nfix grippie svg not centre aligned in Internet Explorer (c87c5e4)\nfix inputs not replacing configuration (dabac4c)\n\nInternal\n\nupdate to @angular/cli v1.5.5\n\n\n\nv3.1.1 (2017-11-28)\nInternal\n\nmove dependencies to peerDependencies (0310191)\n\nv3.1.0 (2017-11-25)\nFeatures\n\nReactive forms support for the editor (ba350a83)\n\nBreaking Changes\n\nuse ngModel instead of html for HTML bindings (ba350a83)\n\nv3.0.2 (2017-11-24)\nBug Fixes\n\ncheck html has been initialized (#17) (ab0216b). Thanks to @ssuperczynski\n\nv3.0.1 (2017-11-23)\nInternal\n\nupdate to @angular/cli v1.5.4\n\nBug Fixes\n\nfix: default configuration not set onInit (443c994)\n\n\n\nv3.0.0 (2017-11-23)\nBug Fixes\n\nfix HTML Model not updated after subscription on Observable (84946ed), closes #9\n\nInternal\n\nngx-editor has been refactored. Thanks to @volodymyro-in6k (#11)\nupdate angular to v1.5.3 fixes a vulnerability warning due to older version of handlebars (b707409)\nupdate ng-packagr to v1.6.0\n\n\n\nv2.0.1 (2017-11-07)\nInternal\n\nupdate ng-packagr to v1.5.0 (35fbb57)\n\nv2.0.0 (2017-11-02)\nPerformance\n\nupdate angular to v5.0.0 (f12754b)\nupdate bootstrap to v4.0.0-beta.2 (23adb5e)\n\nv1.2.1 (2017-10-25)\nBug Fixes\n\ndowngrade dependency to avoid incompatibility (45752bc)\nupdate insert image query text (2748cc3)\n\nv1.2.0 (2017-10-23)\nFeatures\n\noption to insert/edit link (63e401b)\noption to edit link (89389ab)\nunlink anchor tag (90f88a5)\nenable toolbar only when editor is focused (b915d68)\n\nInternal\n\nupdate ng-packagr (cebc696)\nfix dependency mismatches with angular (26a1a6d)\n\nEnhancements\n\nCSS Tweaks\n\nBug Fixes\n\nenable/disbale toolbar on focusing the editor (8b2bb27)\n\nv1.1.1 (2017-10-09)\nPerformance\n\nuse unique CSS classes (3ddc3b0)\n\nv1.1.0 (2017-10-09)\nFeatures\n\nset width and minWidth to editor (731f2fc)\nnew resizer added (864a5be)\n\nEnhancements\n\nremove units for zero value (3978843)\n\nv1.0.0 (2017-10-06)\nPerformance\n\nimprove value handling for attributes that hold boolean values (8695873)\nbetter handling of default values (7a40862)\n\nFeatures\n\nset height and minHeight for editror (fdb1b30)\ntoolbar customization (c6a2151)\n\nDOCS\n\nget latest release direct from github (b2ddf54)\nadd wiki (da7d0c7)\n\nv1.0.0-beta.3 (2017-10-03)\nBug Fixes\n\nundefined intialization in editor (d17c1dd)\n\nInternal\n\nupdate angular to v4.4.4 (d99dff2)\nupdate ng-packagr to v1.2.1 (d99dff2)\n\nv1.0.0-beta.2 (2017-10-02)\nFeatures\n\nenable (or) disable HTML5 translate An Experimental Option\nenable (or) disable editable nature of editor (4bff8e5)\n\nEnhancements\n\nremove unused fullscreen function (af66d69)\nspellCheck attribute renamed to spellcheck (af66d69)\nremove instructions from docs (af66d69)\n\nBug Fixes\n\nfix spellcheck attribute binding to editable area (af66d69)\n\nv1.0.0-beta.1 (2017-10-01)\nFeatures\n\nbind HTML content with editor\n\nv1.0.0-alpha.3 (2017-10-01)\nChanges\n\nupdate README\nupdate demo\n\nv1.0.0-alpha.2 (2017-09-28)\nTweaks\n\nremove font-awesome loaded by the module. Now font-awesome should be imported separately.\n\nv1.0.0-alpha.1 (2017-09-27)\nBug Fixes\n\nfixes setting default values for the editor\n\nv1.0.0-alpha (2017-09-27)\nWYSIWYG Editor for Angular Applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.0.5\n        \n            @angular/common : ~10.0.5\n        \n            @angular/compiler : ~10.0.5\n        \n            @angular/core : ~10.0.5\n        \n            @angular/forms : ~10.0.5\n        \n            @angular/platform-browser : ~10.0.5\n        \n            @angular/platform-browser-dynamic : ~10.0.5\n        \n            @angular/router : ~10.0.5\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getIconSvg   (src/.../index.ts)\n                        \n                        \n                            menuPlugin   (src/.../index.ts)\n                        \n                        \n                            placeholderPlugin   (src/.../placeholder.ts)\n                        \n                        \n                            provideMyServiceOptions   (src/.../ngx-editor.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/utils/icons/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getIconSvg\n                        \n                        \n                    \n                \n            \n            \n                \ngetIconSvg(name, width, height)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            menuPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nmenuPlugin(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Plugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/placeholder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            placeholderPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nplaceholderPlugin(text)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Plugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/ngx-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideMyServiceOptions\n                        \n                        \n                    \n                \n            \n            \n                \nprovideMyServiceOptions(config?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxEditor\n\n  \n   \n  \n\nA Simple WYSIWYG Editor for Angular Applications.\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nGetting Started\nInstallation\nInstall via Package managers such as npm or yarn\nnpm install ngx-editor --save\n# or\nyarn add ngx-editorUsage\nImport ngx-editor module\nimport { NgxEditorModule } from 'ngx-editor';\n\n@NgModule({\n  imports: [NgxEditorModule],\n})\n\nexport class AppModule {}Then in HTML\nFor ngModel to work, You must import FormsModule from @angular/forms\nOptional Configuration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n        [codemirror] // custom menu, see https://sibiraj.dev/ngx-editor/additional-documentation/menu-plugin.html\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, see https://prosemirror.net/examples/footnote/\n});Compatibility\nAll Evergreen-Browsers are supported\n\nGoogle Chrome\nMicrosoft Edge\nMozilla Firefox\nOpera\n\nDemo\nDemo at stackblitz ngx-editor\nDocumentation\nDocumentation is auto-generated using compodoc, and can be viewed here: https://sibiraj-s.github.io/ngx-editor/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017-2020 Sibiraj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (src/.../types.ts)\n                        \n                        \n                            MenuLabels   (src/.../types.ts)\n                        \n                        \n                            TCR   (src/.../types.ts)\n                        \n                        \n                            Toolbar   (src/.../types.ts)\n                        \n                        \n                            ToolbarCustomMenuItem   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdown   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupKeys   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupValues   (src/.../types.ts)\n                        \n                        \n                            ToolbarItem   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Command\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MenuLabels\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TCR\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Toolbar\n                \n            \n            \n                \n                        Array | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarCustomMenuItem\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdown\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupKeys\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarItem\n                \n            \n            \n                \n                        string | ToolbarDropdown | ToolbarCustomMenuItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            ACTIVE_MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            bulletList   (src/.../schema.ts)\n                        \n                        \n                            DEFAULT_ICON_HEIGHT   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_ICON_WIDTH   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_LABELS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_PLACEHOLDER   (src/.../placeholder.ts)\n                        \n                        \n                            DEFAULT_TOOLBAR   (src/.../index.ts)\n                        \n                        \n                            defaultConfig   (src/.../ngx-editor.service.ts)\n                        \n                        \n                            DISABLED_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPDOWN_ITEMS   (src/.../menu.ts)\n                        \n                        \n                            DROPDWON_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPWDOWN_OPEN_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            findNodeType   (src/.../isNodeActive.ts)\n                        \n                        \n                            flatDeep   (src/.../flatDeep.ts)\n                        \n                        \n                            getSeperatorDom   (src/.../menu.ts)\n                        \n                        \n                            icons   (src/.../index.ts)\n                        \n                        \n                            isListItem   (src/.../isListItem.ts)\n                        \n                        \n                            isMarkActive   (src/.../isMarkActive.ts)\n                        \n                        \n                            isNodeActive   (src/.../isNodeActive.ts)\n                        \n                        \n                            listGroup   (src/.../schema.ts)\n                        \n                        \n                            listItem   (src/.../schema.ts)\n                        \n                        \n                            marks   (src/.../schema.ts)\n                        \n                        \n                            menu   (src/.../index.ts)\n                        \n                        \n                            MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            menuItemsMeta   (src/.../meta.ts)\n                        \n                        \n                            NGX_EDITOR_CONFIG_TOKEN   (src/.../ngx-editor.module.ts)\n                        \n                        \n                            nodes   (src/.../schema.ts)\n                        \n                        \n                            orderedList   (src/.../schema.ts)\n                        \n                        \n                            PLACEHOLDER_CLASSNAME   (src/.../placeholder.ts)\n                        \n                        \n                            renderMenu   (src/.../menu.ts)\n                        \n                        \n                            schema   (src/.../schema.ts)\n                        \n                        \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            SEPERATOR_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            toggleBlockType   (src/.../toggleBlockType.ts)\n                        \n                        \n                            toggleList   (src/.../toggleList.ts)\n                        \n                        \n                            toggleWrap   (src/.../toggleWrap.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/prosemirror/plugins/menu/menu.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${MENU_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLED_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor--Disabled'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEMS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDWON_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Dropdown'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPWDOWN_OPEN_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Open`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSeperatorDom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__MenuItem'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState): void {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Selected`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPERATOR_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Seperator'\n                        \n                    \n\n\n            \n        \n\n    src/lib/schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bulletList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.bulletList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'block'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.listItem, { content: 'paragraph block*' })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            marks\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : schemaBasic.marks\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign(\n  {},\n  schemaBasic.nodes,\n  {\n    list_item: listItem,\n    ordered_list: orderedList,\n    bullet_list: bulletList\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.orderedList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  marks,\n  nodes\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/icons/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold,\n  italic,\n  code,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  quote\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LABELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuLabels\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: 'Bold',\n  italics: 'Italics',\n  code: 'Code',\n  ordered_list: 'Ordered List',\n  bullet_list: 'Bullet List',\n  heading: 'Heading',\n  blockquote: 'Quote'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  toolbar: DEFAULT_TOOLBAR,\n  labels: DEFAULT_LABELS\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TOOLBAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Toolbar\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['bold', 'italic'],\n  ['code', 'blockquote'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }]\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions = DEFAULT_OPTIONS) => {\n  return menuPlugin(options);\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/placeholder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PLACEHOLDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Type Here...'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLACEHOLDER_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Placeholder'\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  plugins: [],\n  nodeViews: {},\n  schema\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isNodeActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            findNodeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, $from: ResolvedPos): NodeType | null => {\n  for (let i = $from.depth; i > 0; i--) {\n    if ($from.node(i).type === type) {\n      return $from.node(i).type;\n    }\n  }\n\n  return null;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNodeActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: NodeType, attrs = {}): boolean => {\n  const { $from, to } = state.selection;\n\n  const node: NodeType = findNodeType(type, $from);\n\n  if (!Object.entries(attrs).length || !node) {\n    return !!node;\n  }\n\n  return to \n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/flatDeep.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            flatDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (arr: any[], d = 1): any[] => {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isListItem.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isListItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isMarkActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isMarkActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: MarkType): boolean => {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            menuItemsMeta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  },\n  blockquote: {\n    key: 'blockquote',\n    i18nKey: 'blockquote',\n    icon: 'quote',\n    type: 'node'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITOR_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgxEditorConfig')\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleBlockType.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlockType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, toggleType: NodeType, attrs = {}) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggleType)(state, dispatch);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleList.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, itemType: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return liftListItem(itemType)(state, dispatch);\n    }\n\n    return wrapInList(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleWrap.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleWrap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration.html":{"url":"additional-documentation/configuration.html","title":"additional-page - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic'], // inline icons\n        ['code', 'blockquote'],\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, for example see https://prosemirror.net/examples/footnote/\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ngmodel.html":{"url":"additional-documentation/ngmodel.html","title":"additional-page - NgModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nNgModel\nInput can be a prosemirror document object or undefined or null\nclass AppComponent {\n  jsonDoc = null;\n\n  onChange(doc: object) {\n    this.jsonDoc = doc;\n  }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/history.html":{"url":"additional-documentation/history.html","title":"additional-page - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nEnable history support in the editor\nReference\n\nhttps://prosemirror.net/docs/ref/#history\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { undo, redo, history } from 'prosemirror-history';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    history(), // enable history support\n    keymap({\n      // configure shortcuts\n      'Mod-z': undo,\n      'Shift-Mod-z': redo\n    })\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/shortcuts.html":{"url":"additional-documentation/shortcuts.html","title":"additional-page - Shortcuts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nExamples\nList Items\nReference\n\nhttps://prosemirror.net/docs/ref/#keymap\nhttps://prosemirror.net/docs/ref/#schema-list\n\nimport { schema } from 'ngx-editor';\nimport { splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      Enter: splitListItem(schema.nodes.list_item),\n      'Mod-[': liftListItem(schema.nodes.list_item),\n      'Mod-]': sinkListItem(schema.nodes.list_item),\n      Tab: sinkListItem(schema.nodes.list_item)\n    })\n  ]\n});Marks\nReference\n\nhttps://prosemirror.net/docs/ref/#commands\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { schema } from 'ngx-editor';\nimport { keymap } from 'prosemirror-keymap';\nimport { toggleMark, baseKeymap } from 'prosemirror-commands';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      'Mod-b': toggleMark(schema.marks.strong), // toggle strong\n      'Mod-i': toggleMark(schema.marks.em), // toggle italics\n      'Mod-`': toggleMark(schema.marks.code) // toggle code\n    }),\n    keymap(baseKeymap)\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/html.html":{"url":"additional-documentation/html.html","title":"additional-page - HTML","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nWorking with HTML\nGenerate HTML from JSON\nimport { DOMSerializer } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst contentNode = schema.nodeFromJSON(this.jsonDoc);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst html: DocumentFragment = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);\nconsole.log(html);Generating JSON from HTML\nimport { DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst el = document.createElement('div');\nel.innerHTML = htmlString;\n\nthis.jsonDoc = DOMParser.fromSchema(schema).parse(el).toJSON();\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/menu-plugin.html":{"url":"additional-documentation/menu-plugin.html","title":"additional-page - Menu Plugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nMenu Plugin\nConfiguring the plugin\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic'], // inline icons\n        ['code', 'blockquote'],\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }], // dropdown\n        [codemirror] // custom menu, example below\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    })\n  ]\n});Custom Menu\nCustom menu should return an update function (invoked for every transcation) and dom html-element (to mount in the menubar).\nExample:\nimport { EditorState } from 'prosemirror-state';\nimport { isNodeActive, toggleBlockType, ToolbarCustomMenuItem } from 'ngx-editor';\n\nimport schema from '../../schema';\n\nconst codeMirror: ToolbarCustomMenuItem = (editorView) => {\n  const dom: HTMLElement = document.createElement('div');\n  dom.innerHTML = 'CodeMirror';\n\n  dom.classList.add('NgxEditor__MenuItem');\n  dom.classList.add('NgxEditor__MenuItem--Text');\n\n  // you must add `code_block` to schema first\n  // see https://prosemirror.net/examples/schema/\n  // https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  const type = schema.nodes.code_block;\n\n  const command = toggleBlockType(type, schema.nodes.paragraph);\n\n  dom.addEventListener('mousedown', (e: MouseEvent) => {\n    e.preventDefault();\n\n    // don't execute if not left click\n    if (e.buttons !== 1) {\n      return;\n    }\n\n    command(editorView.state, editorView.dispatch);\n  });\n\n  const update = (state: EditorState): void => {\n    const isActive = isNodeActive(state, type);\n\n    const canExecute = command(state, null);\n\n    dom.classList.toggle(`NgxEditor__MenuItem--Active`, isActive);\n    dom.classList.toggle(`NgxEditor--Disabled`, !canExecute);\n  };\n\n  return {\n    dom,\n    update\n  };\n};\n\nexport default codeMirror;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/schema.html":{"url":"additional-documentation/schema.html","title":"additional-page - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nThe Configuration can be provided using config property\nRef: https://prosemirror.net/examples/schema/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo\nUsage\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema\n});Create custom schema\nimport { nodes as basicNodes, marks as basicMarks } from 'ngx-editor';\nimport { Schema, Node as ProsemirrorNode, NodeSpec } from 'prosemirror-model';\n\nconst codeBlock: NodeSpec = {\n  group: 'block',\n  attrs: {\n    text: { default: '' },\n    language: { default: 'text/javascript' }\n  },\n  parseDOM: [\n    {\n      tag: 'pre',\n      getAttrs: (dom: HTMLElement) => {\n        return {\n          text: dom.textContent,\n          language: dom.getAttribute('data-language') || 'text/plain'\n        };\n      }\n    }\n  ],\n  toDOM(node: ProsemirrorNode) {\n    return ['pre', { 'data-language': node.attrs.language }, node.attrs.text];\n  }\n};\n\nconst nodes = Object.assign({}, basicNodes, {\n  code_mirror: codeBlock\n});\n\nconst schema = new Schema({\n  nodes,\n  marks: basicMarks\n});\n\nexport default schema;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/inline-code-editor.html":{"url":"additional-documentation/inline-code-editor.html","title":"additional-page - Inline Code Editor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInline code editor\nRef: https://prosemirror.net/examples/codemirror/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo for examples\nimport { exitCode } from 'prosemirror-commands';\nimport { undo, redo } from 'prosemirror-history';\nimport { TextSelection, Selection } from 'prosemirror-state';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\n\nimport schema from '../schema';\n\nfunction computeChange(oldVal: string, newVal: string) {\n  if (oldVal === newVal) {\n    return null;\n  }\n  let start = 0;\n  let oldEnd = oldVal.length;\n  let newEnd = newVal.length;\n  while (start  start && newEnd > start && oldVal.charCodeAt(oldEnd - 1) === newVal.charCodeAt(newEnd - 1)) {\n    oldEnd--;\n    newEnd--;\n  }\n  return { from: start, to: oldEnd, text: newVal.slice(start, newEnd) };\n}\n\ntype GetPos = () => number;\n\nclass CodeMirrorView {\n  node: ProsemirrorNode;\n  getPos: GetPos;\n  incomingChanges: boolean;\n\n  cm: CodeMirror;\n\n  view: EditorView;\n  dom: HTMLElement;\n  updating: boolean;\n\n  constructor(node: ProsemirrorNode, view: EditorView, getPos: GetPos) {\n    // Store for later\n    this.node = node;\n    this.view = view;\n    this.getPos = getPos;\n    this.incomingChanges = false;\n\n    // Create a CodeMirror instance\n    this.cm = new CodeMirror(null, {\n      value: this.node.textContent,\n      lineNumbers: true,\n      extraKeys: this.codeMirrorKeymap()\n    });\n\n    // The editor's outer node is our DOM representation\n    this.dom = this.cm.getWrapperElement();\n    // CodeMirror needs to be in the DOM to properly initialize, so\n    // schedule it to update itself\n    setTimeout(() => this.cm.refresh(), 20);\n\n    // This flag is used to avoid an update loop between the outer and\n    // inner editor\n    this.updating = false;\n    // Track whether changes are have been made but not yet propagated\n    this.cm.on('beforeChange', () => (this.incomingChanges = true));\n    // Propagate updates from the code editor to ProseMirror\n    this.cm.on('cursorActivity', () => {\n      if (!this.updating && !this.incomingChanges) {\n        this.forwardSelection();\n      }\n    });\n\n    this.cm.on('changes', () => {\n      if (!this.updating) {\n        this.valueChanged();\n        this.forwardSelection();\n      }\n      this.incomingChanges = false;\n    });\n\n    this.cm.on('focus', () => this.forwardSelection());\n  }\n\n  forwardSelection() {\n    if (!this.cm.hasFocus()) {\n      return;\n    }\n\n    const state = this.view.state;\n    const selection = this.asProseMirrorSelection(state.doc);\n\n    if (!selection.eq(state.selection)) {\n      this.view.dispatch(state.tr.setSelection(selection));\n    }\n  }\n\n  asProseMirrorSelection(doc: ProsemirrorNode) {\n    const offset = this.getPos() + 1;\n    const anchor = this.cm.indexFromPos(this.cm.getCursor('anchor')) + offset;\n    const head = this.cm.indexFromPos(this.cm.getCursor('head')) + offset;\n    return TextSelection.create(doc, anchor, head);\n  }\n\n  setSelection(anchor: number, head: number) {\n    this.cm.focus();\n    this.updating = true;\n    this.cm.setSelection(this.cm.posFromIndex(anchor), this.cm.posFromIndex(head));\n    this.updating = false;\n  }\n\n  valueChanged() {\n    const change = computeChange(this.node.textContent, this.cm.getValue());\n    if (change) {\n      const start = this.getPos() + 1;\n      const tr = this.view.state.tr.replaceWith(\n        start + change.from,\n        start + change.to,\n        change.text ? schema.text(change.text) : null\n      );\n      this.view.dispatch(tr);\n    }\n  }\n  codeMirrorKeymap() {\n    const view = this.view;\n    const mod = /Mac/.test(navigator.platform) ? 'Cmd' : 'Ctrl';\n    return CodeMirror.normalizeKeyMap({\n      Up: () => this.maybeEscape('line', -1),\n      Left: () => this.maybeEscape('char', -1),\n      Down: () => this.maybeEscape('line', 1),\n      Right: () => this.maybeEscape('char', 1),\n      [`${mod}-Z`]: () => undo(view.state, view.dispatch),\n      [`Shift-${mod}-Z`]: () => redo(view.state, view.dispatch),\n      [`${mod}-Y`]: () => redo(view.state, view.dispatch),\n      'Ctrl-Enter': () => {\n        if (exitCode(view.state, view.dispatch)) {\n          view.focus();\n        }\n      }\n    });\n  }\n\n  maybeEscape(unit: string, dir: number) {\n    const pos = this.cm.getCursor();\n    if (\n      this.cm.somethingSelected() ||\n      pos.line !== (dir Usage\nimport { NgxEditorModule } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  nodeViews: {\n    code_block: (node: ProsemirrorNode, view: EditorView, getPos: () => number) => {\n      return new CodeBlockView(node, view, getPos);\n    }\n  }\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/input-rules.html":{"url":"additional-documentation/input-rules.html","title":"additional-page - Input Rules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInput rules\nThis module defines a plugin for attaching input rules to an editor, which can react to or transform text typed by the user.\nDoc: https://prosemirror.net/docs/ref/#inputrules\nSource: https://github.com/ProseMirror/prosemirror-example-setup/\nRules\nimport {\n  inputRules,\n  wrappingInputRule,\n  textblockTypeInputRule,\n  smartQuotes,\n  emDash,\n  ellipsis,\n  InputRule,\n} from 'prosemirror-inputrules';\nimport { NodeType, Schema } from 'prosemirror-model';\n\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nexport function blockQuoteRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nexport function orderedListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(\n    /^(\\d+)\\.\\s$/,\n    nodeType,\n    (match) => ({ order: +match[1] }),\n    (match, node) => node.childCount + node.attrs.order === +match[1],\n  );\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nexport function bulletListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nexport function codeBlockRule(nodeType: NodeType): InputRule {\n  return textblockTypeInputRule(/^```$/, nodeType);\n}\n\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nexport function headingRule(nodeType: NodeType, maxLevel: number): InputRule {\n  return textblockTypeInputRule(new RegExp('^(#{1,' + maxLevel + '})\\\\s$'), nodeType, (match) => ({\n    level: match[1].length,\n  }));\n}\n\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nexport function buildInputRules(schema: Schema) {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n\n  rules.push(blockQuoteRule(schema.nodes.blockquote));\n  rules.push(orderedListRule(schema.nodes.ordered_list));\n  rules.push(bulletListRule(schema.nodes.bullet_list));\n  rules.push(codeBlockRule(schema.nodes.code_block));\n  rules.push(headingRule(schema.nodes.heading, 6));\n\n  return inputRules({ rules });\n}Config\nimport { NgxEditorModule, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [buildInputRules(schema)],\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/reactive-forms.html":{"url":"additional-documentation/reactive-forms.html","title":"additional-page - Reactive Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nReactive Forms\nModule\nimport { CommonModule } from \"@angular/common\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { NgxEditorModule } from \"ngx-editor\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [CommonModule, BrowserModule, FormsModule, ReactiveFormsModule, NgxEditorModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}AppComponent\nimport { Component } from \"@angular/core\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n  styleUrls: [\"app.component.scss\"]\n})\n\nexport class AppComponent {\n  form = new FormGroup({\n    editorContent: new FormControl(null)\n  });\n\n  ngOnInit() {\n    this.form.valueChanges.subscribe((val) => {\n      console.log(\"Value Changes:\", val);\n    });\n  }\n}Template\n\n  \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
