var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/DropDownView.html",[0,0.865,1,2.305]],["body/classes/DropDownView.html",[0,0.934,1,2.162,2,0.866,3,0.395,4,0.365,5,0.365,6,1.179,7,0.337,8,0.748,9,1.499,10,1.755,11,1.29,12,3.194,13,2.796,14,1.408,15,1.608,16,2.038,17,3.514,18,2.038,19,1.576,20,1.982,21,1.881,22,1.755,23,2.614,24,0.73,25,0.03,26,0.623,27,0.928,28,0.395,29,3.071,30,1.573,31,1.608,32,0.807,33,1.631,34,1.608,35,1.187,36,1.608,37,1.631,38,0.505,39,1.179,40,0.511,41,0.866,42,0.426,43,1.623,44,0.797,45,1.917,46,1.711,47,0.365,48,1.902,49,2.038,50,2.291,51,1.29,52,0.794,53,1.052,54,1.052,55,1.179,56,0.593,57,1.179,58,1.179,59,1.052,60,1.179,61,1.349,62,1.179,63,1.349,64,1.179,65,1.349,66,1.052,67,2.162,68,1.349,69,1.616,70,1.917,71,1.052,72,2.791,73,1.052,74,1.917,75,1.408,76,2.423,77,0.95,78,0.95,79,2.791,80,1.052,81,1.179,82,1.546,83,1.917,84,1.179,85,1.711,86,1.179,87,1.475,88,1.179,89,1.349,90,0.794,91,0.794,92,0.794,93,0.794,94,0.794,95,0.794,96,3.615,97,1.349,98,1.349,99,2.773,100,1.179,101,3.194,102,1.953,103,2.515,104,2.067,105,1.014,106,1.349,107,1.349,108,1.349,109,1.349,110,2.773,111,2.194,112,1.349,113,1.052,114,0.674,115,1.349,116,1.349,117,2.773,118,2.74,119,2.74,120,2.49,121,1.349,122,1.281,123,3.194,124,1.349,125,1.349,126,1.349,127,1.349,128,1.458,129,1.349,130,0.794,131,1.349,132,1.349,133,1.349,134,1.349,135,1.349,136,1.349,137,3.291,138,1.349,139,1.595,140,1.349,141,1.349,142,0.87,143,1.349,144,3.468,145,1.29,146,1.349,147,0.866,148,1.096,149,1.917,150,1.631,151,1.631,152,2.162,153,1.917,154,1.46,155,1.917,156,1.052,157,1.349,158,1.349,159,1.349,160,1.179,161,2.423,162,1.349,163,1.349,164,2.423,165,0.866,166,1.349,167,1.349,168,1.349,169,1.052,170,1.349,171,1.349,172,1.349,173,1.349,174,1.349,175,1.349,176,1.349,177,1.349,178,2.423,179,1.349,180,1.349,181,1.349,182,2.194,183,2.194,184,1.349,185,0.443,186,2.194,187,1.349,188,1.504,189,2.25,190,1.917,191,2.194,192,0.496,193,2.194,194,1.546,195,1.349,196,1.179,197,1.349,198,1.052,199,1.349,200,1.349,201,1.349,202,1.349,203,2.791,204,1.349,205,1.349,206,1.349,207,1.349,208,1.349,209,1.349,210,1.349,211,2.194,212,2.194,213,2.194,214,1.349,215,2.194,216,1.349,217,1.349,218,1.349,219,1.349,220,1.179,221,1.349,222,1.179,223,1.179,224,0.95,225,1.349,226,1.349,227,1.349,228,1.349,229,0.95,230,0.73,231,1.179,232,1.179,233,1.385,234,1.349,235,1.917,236,1.179,237,0.261,238,1.052,239,1.052,240,0.535,241,1.179,242,1.179,243,1.917,244,1.096,245,1.917,246,1.179,247,1.179,248,1.917,249,1.917,250,1.179,251,2.423,252,0.95,253,1.179,254,1.179,255,1.179,256,1.179,257,1.179,258,1.179,259,1.179,260,1.179,261,1.179,262,1.052,263,0.866,264,0.496,265,1.179,266,1.179,267,0.95,268,0.794,269,1.179,270,1.179,271,1.917,272,1.917,273,0.496,274,1.179,275,1.179,276,1.179,277,1.179,278,1.179,279,1.179,280,1.179,281,0.007,282,0.012,283,0.007]],["title/interfaces/DropdownViewRender.html",[37,1.739,284,0.865]],["body/interfaces/DropdownViewRender.html",[3,0.911,4,0.842,5,0.842,7,0.777,8,1.387,9,1.744,10,2.4,16,1.685,18,1.685,19,1.432,21,1.555,25,0.03,27,1.147,30,1.834,37,2.393,38,0.521,40,0.725,42,0.984,43,2.22,44,1.131,47,0.842,48,1.685,49,1.685,50,1.555,51,1.831,105,1.439,142,1.235,145,1.831,147,1.999,148,1.555,150,1.831,151,1.831,154,1.496,185,0.768,188,2.056,192,1.145,237,1.056,240,1.797,264,1.997,268,1.831,281,0.016,282,0.021,283,0.016,284,1.406,285,1.555,286,2.194,287,3.385,288,2.611,289,2.866,290,3.192,291,2.611,292,2.428,293,2.428,294,2.202,295,2.611,296,1.999,297,1.685,298,1.685]],["title/classes/FloatingOptionsView.html",[0,0.865,299,2.956]],["body/classes/FloatingOptionsView.html",[0,0.622,2,1.365,3,0.622,4,0.575,5,0.575,7,0.531,8,1.064,9,0.725,11,1.836,13,2.199,14,1.365,19,1.647,22,2.452,24,2.349,25,0.03,26,2.005,27,0.958,28,1.27,30,1.148,32,0.782,35,2.538,38,0.499,40,0.592,41,1.365,42,1.434,44,0.923,47,0.575,54,1.658,56,0.844,57,2.728,69,1.564,87,1.709,102,1.498,104,1.836,118,2.884,119,2.884,120,1.658,128,1.547,130,1.251,154,1.499,156,1.658,165,1.365,169,2.884,185,0.34,188,2.23,189,2.199,194,3.058,196,1.858,230,1.69,233,1.062,237,0.411,273,1.148,281,0.011,282,0.016,283,0.011,294,1.151,296,1.365,297,1.151,298,1.151,299,3.699,300,2.127,301,4.407,302,4.856,303,3.72,304,4.856,305,4.856,306,3.72,307,3.72,308,3.72,309,2.534,310,3.72,311,5.407,312,2.534,313,2.127,314,3.122,315,2.534,316,2.534,317,3.72,318,2.534,319,3.72,320,2.534,321,3.72,322,2.534,323,1.709,324,2.534,325,1.858,326,2.127,327,2.534,328,2.534,329,3.72,330,2.534,331,2.127,332,2.534,333,2.127,334,2.534,335,3.72,336,2.434,337,2.534,338,2.534,339,3.72,340,2.534,341,2.534,342,1.858,343,2.534,344,2.534,345,4.407,346,2.534,347,2.534,348,2.534,349,2.534,350,2.534,351,2.534,352,3.72,353,2.534,354,2.534,355,2.127,356,2.534,357,2.534,358,2.534,359,2.534,360,2.534,361,2.534,362,2.534,363,2.534,364,2.534,365,2.127,366,2.884,367,1.658,368,4.407,369,3.72,370,2.534,371,3.72,372,2.534,373,2.534,374,2.534,375,2.127,376,2.534,377,2.534,378,2.534,379,2.127,380,3.699,381,2.534,382,2.534,383,2.534,384,3.72,385,2.534,386,3.72,387,2.534,388,2.534,389,2.534,390,2.127,391,2.534,392,2.534,393,1.658,394,2.534,395,2.534,396,3.122,397,2.534,398,2.534,399,2.534,400,2.534,401,2.534,402,2.534,403,2.534]],["title/classes/MenuBarView.html",[0,0.865,404,2.956]],["body/classes/MenuBarView.html",[0,0.934,2,2.048,3,0.934,4,0.863,5,0.863,7,0.797,8,1.41,9,1.564,11,2.431,13,3.417,14,2.048,19,1.678,20,2.617,21,2.571,22,2.617,24,1.727,25,0.03,26,1.474,27,1.061,28,0.934,30,1.52,32,1.174,35,2.237,38,0.557,40,0.661,42,1.533,43,1.91,44,1.032,52,1.877,69,1.341,100,2.789,104,1.877,154,1.893,188,2.15,237,0.617,238,2.488,239,3.223,273,1.174,281,0.017,282,0.022,283,0.017,404,4.586,405,3.803,406,5.464,407,4.926,408,4.926,409,3.803,410,3.803,411,3.803,412,3.803,413,3.803,414,1.769,415,3.803,416,3.613,417,3.803,418,3.803,419,3.803,420,3.192,421,3.803,422,3.803,423,3.803,424,3.803,425,3.803]],["title/interfaces/MenuItemMeta.html",[67,2.305,284,0.865]],["body/interfaces/MenuItemMeta.html",[3,0.82,4,0.758,5,0.758,7,0.7,8,1.294,25,0.03,27,1.183,28,1.348,32,1.031,66,2.958,67,3.353,69,0.82,90,1.649,91,1.649,92,1.649,93,1.649,94,1.649,95,1.649,122,2.484,142,2.133,148,2.642,194,3.496,224,3.575,233,1.4,237,0.733,244,1.4,264,1.945,267,3.726,281,0.015,282,0.02,283,0.015,284,0.82,285,1.4,294,2.984,426,2.803,427,5.493,428,2.958,429,3.029,430,2.45,431,2.672,432,2.803,433,1.799,434,2.129,435,3.246,436,3.246,437,1.975,438,2.45,439,2.186,440,2.803,441,2.186,442,2.529,443,2.803]],["title/classes/MenuItemView.html",[0,0.865,152,2.305]],["body/classes/MenuItemView.html",[0,0.94,1,1.726,2,0.876,3,0.399,4,0.369,5,0.369,6,1.193,7,0.341,8,0.755,9,1.504,10,1.396,11,1.302,12,1.365,13,2.809,14,1.421,16,1.74,17,2.794,18,1.74,19,1.58,20,1.766,21,1.606,22,1.606,24,0.739,25,0.03,26,0.63,27,0.906,28,0.399,29,2.81,30,1.579,32,0.502,33,1.302,35,1.198,37,1.302,38,0.507,39,1.193,40,0.514,41,0.876,42,0.431,43,1.633,44,0.803,45,1.935,46,1.726,47,0.369,48,2.158,49,2.049,50,2.299,51,1.643,52,0.803,53,1.064,54,1.064,55,1.193,56,0.599,57,1.193,58,1.193,59,1.064,60,1.193,61,1.365,62,1.193,63,1.365,64,1.193,65,1.365,66,1.064,67,2.756,68,1.365,69,1.618,70,1.935,71,1.064,72,2.81,73,1.064,74,1.935,75,1.421,76,2.442,77,0.961,78,0.961,79,2.81,80,1.064,81,1.193,82,1.56,83,1.935,84,1.193,85,1.726,86,1.193,87,1.485,88,1.193,89,1.365,90,0.803,91,0.803,92,0.803,93,0.803,94,0.803,95,0.803,96,3.63,97,1.365,98,1.365,99,2.794,100,1.193,101,3.215,102,1.968,103,2.525,104,2.079,105,1.023,106,1.365,107,1.365,108,1.365,109,1.365,110,2.794,111,2.214,112,1.365,113,1.064,114,0.682,115,1.365,116,1.365,117,2.794,118,2.756,119,2.756,120,2.507,121,1.365,122,1.291,123,3.215,124,1.365,125,1.365,126,1.365,127,1.365,128,1.464,129,1.365,130,0.803,131,1.365,132,1.365,133,1.365,134,1.365,135,1.365,136,1.365,137,3.485,138,1.365,139,1.606,140,1.365,141,1.365,142,0.878,143,1.365,144,3.752,145,1.302,146,1.365,147,0.876,148,1.106,149,1.935,150,1.643,151,1.643,152,2.507,153,1.935,154,1.467,155,1.935,156,1.064,157,1.365,158,1.365,159,1.365,160,1.193,161,2.442,162,1.365,163,1.365,164,2.442,165,0.876,166,1.365,167,1.365,168,1.365,169,1.064,170,1.365,171,1.365,172,1.365,173,1.365,174,1.365,175,1.365,176,1.365,177,1.365,178,2.442,179,1.365,180,1.365,181,2.214,182,2.214,183,2.214,184,1.365,185,0.447,186,2.214,187,1.365,188,1.512,189,2.265,190,1.935,191,2.214,192,0.502,193,2.214,194,1.56,195,1.365,196,1.193,197,1.365,198,1.064,199,1.365,200,1.365,201,1.365,202,3.215,203,2.81,204,1.365,205,1.365,206,1.365,207,1.365,208,1.365,209,1.365,210,1.365,211,2.214,212,2.214,213,2.214,214,1.365,215,2.214,216,1.365,217,1.365,218,1.365,219,1.365,220,1.193,221,1.365,222,1.193,223,1.193,224,0.961,225,1.365,226,1.365,227,1.365,228,1.365,229,0.961,230,0.739,231,1.193,232,1.193,233,1.396,234,1.365,235,1.935,236,1.193,237,0.264,238,1.064,239,1.064,240,0.541,241,1.193,242,1.193,243,1.935,244,1.106,245,1.935,246,1.193,247,1.193,248,1.935,249,1.935,250,1.193,251,2.442,252,0.961,253,1.193,254,1.193,255,1.193,256,1.193,257,1.193,258,1.193,259,1.193,260,1.193,261,1.193,262,1.064,263,0.876,264,0.502,265,1.193,266,1.193,267,0.961,268,0.803,269,1.193,270,1.193,271,1.935,272,1.935,273,0.502,274,1.193,275,1.193,276,1.193,277,1.193,278,1.193,279,1.193,280,1.193,281,0.007,282,0.012,283,0.007,444,2.638,445,1.626,446,1.626]],["title/interfaces/MenuItemViewRender.html",[51,1.739,284,0.865]],["body/interfaces/MenuItemViewRender.html",[3,0.911,4,0.842,5,0.842,7,0.777,8,1.387,9,1.744,10,1.555,16,1.685,18,1.685,19,1.432,21,1.555,25,0.03,27,1.147,30,1.834,37,1.831,38,0.521,40,0.725,42,0.984,43,2.22,44,1.131,47,0.842,48,1.685,49,1.685,50,1.555,51,2.393,105,1.439,142,1.235,145,1.831,147,1.999,148,1.555,150,1.831,151,1.831,154,1.834,185,0.768,188,2.056,192,1.145,237,1.056,240,1.797,264,1.997,268,1.831,273,1.496,281,0.016,282,0.021,283,0.016,284,1.406,285,1.555,286,2.194,287,2.866,288,2.611,289,2.866,290,3.192,291,2.611,292,2.428,293,2.428,294,2.202,295,2.611,296,1.999,297,1.685,298,1.685]],["title/interfaces/MenuItemViewSpec.html",[48,1.6,284,0.865]],["body/interfaces/MenuItemViewSpec.html",[3,0.855,4,0.79,5,0.79,7,0.729,8,1.33,9,1.497,10,1.459,16,1.581,18,1.581,19,1.388,21,1.459,25,0.03,27,1.169,28,1.524,30,1.615,37,1.718,38,0.504,40,0.702,42,0.923,43,2.165,44,1.096,47,0.79,48,2.111,49,1.581,50,1.459,51,1.718,105,1.35,142,1.159,145,2.756,147,3.008,148,2.341,150,2.756,151,2.756,154,1.435,185,0.749,188,2.005,192,1.074,237,1.046,240,1.742,264,2.059,268,2.756,281,0.015,282,0.02,283,0.015,284,1.371,285,1.459,286,2.058,287,2.748,288,2.504,289,2.748,290,3.094,291,2.504,292,2.278,293,2.278,294,2.111,295,2.504,296,1.875,297,1.581,298,1.581,428,3.041]],["title/interfaces/MenuOptions.html",[21,1.477,284,0.865]],["body/interfaces/MenuOptions.html",[3,0.891,4,0.824,5,0.824,7,0.76,8,1.367,9,1.528,10,1.521,16,1.648,18,1.648,19,1.416,21,2.003,25,0.03,27,1.15,28,1.487,30,1.649,37,1.791,38,0.515,40,0.717,42,0.962,43,2.201,44,1.119,47,0.824,48,1.648,49,1.648,50,1.521,51,1.791,105,2.201,142,1.208,145,1.791,147,1.954,148,1.521,150,1.791,151,1.791,154,1.475,185,0.851,188,2.038,192,1.12,237,1.053,240,2.086,264,1.99,268,1.791,281,0.016,282,0.021,283,0.016,284,1.393,285,1.521,286,2.145,287,2.825,288,2.573,289,2.825,290,3.158,291,2.573,292,2.374,293,2.374,294,2.17,295,3.057,296,1.954,297,1.648,298,1.648]],["title/components/NgxEditorComponent.html",[447,2.082,448,2.305]],["body/components/NgxEditorComponent.html",[0,0.623,3,0.381,4,0.352,5,0.352,7,0.675,8,0.726,9,0.444,11,1.253,14,0.835,19,0.673,22,1.849,24,1.464,25,0.03,26,1.593,27,0.66,28,0.791,32,0.479,33,1.253,35,1.692,38,0.425,40,0.551,41,0.835,42,0.673,43,0.601,44,0.78,47,0.352,50,0.65,56,1.142,69,1.143,71,1.015,73,1.015,75,2.965,77,2.429,78,0.917,80,1.015,82,1.501,85,1.015,87,0.601,96,3.416,102,0.917,103,1.838,122,0.601,128,1.066,130,2.028,139,1.849,154,0.479,165,2.006,185,0.432,188,1.977,192,1.268,229,0.917,230,2.457,233,0.65,237,0.252,252,2.608,267,2.429,281,0.007,282,0.011,283,0.007,288,1.367,297,0.704,313,4.864,331,1.301,336,3.047,365,3.126,367,2.109,393,2.688,414,2.035,416,1.137,420,1.301,437,0.917,439,1.015,442,0.765,447,1.905,448,2.887,449,2.538,450,1.301,451,1.301,452,1.551,453,2.508,454,1.551,455,2.538,456,3.223,457,2.705,458,3.223,459,1.551,460,2.538,461,2.538,462,1.862,463,1.862,464,2.363,465,1.862,466,2.363,467,1.862,468,2.705,469,0.995,470,2.13,471,3.223,472,2.13,473,2.538,474,3.725,475,2.538,476,3.725,477,2.13,478,2.538,479,2.688,480,1.551,481,1.551,482,2.538,483,1.551,484,2.538,485,1.551,486,2.538,487,1.551,488,3.223,489,1.551,490,2.538,491,2.13,492,1.551,493,1.551,494,1.551,495,0.835,496,1.015,497,1.501,498,1.501,499,1.301,500,1.551,501,0.704,502,1.551,503,2.363,504,1.551,505,2.538,506,1.551,507,2.538,508,1.551,509,1.551,510,1.551,511,1.551,512,1.551,513,1.551,514,1.301,515,1.301,516,1.551,517,1.551,518,1.551,519,1.551,520,1.551,521,1.551,522,1.301,523,1.551,524,2.538,525,1.551,526,1.301,527,1.551,528,1.551,529,1.551,530,1.551,531,1.301,532,1.551,533,1.551,534,0.783,535,0.911,536,1.551,537,1.551,538,1.551,539,1.551,540,1.301,541,2.538,542,1.301,543,1.551,544,1.551,545,1.551,546,4.222,547,3.236,548,2.538,549,2.705,550,5.119,551,4.86,552,2.538,553,5.288,554,2.538,555,4.86,556,5.031,557,5.301,558,3.223,559,1.551,560,1.551,561,5.506,562,1.551,563,3.223,564,3.223,565,3.968,566,4.449,567,4.412,568,1.551,569,1.551,570,1.862,571,5.031,572,1.551,573,1.551,574,2.538,575,5.176,576,4.412,577,3.223,578,1.551,579,5.666,580,3.126,581,2.363,582,2.437,583,1.551,584,3.236,585,1.551,586,1.551,587,1.551,588,1.015,589,5.301,590,1.137,591,1.551,592,2.538,593,1.551,594,1.551,595,1.301,596,1.551,597,1.551,598,1.551,599,2.538,600,1.367,601,2.109,602,1.551,603,1.551,604,3.725,605,3.725,606,2.13,607,3.223,608,2.538,609,3.223,610,1.551,611,1.551,612,1.551,613,1.551,614,1.551,615,1.551,616,1.551,617,2.538,618,1.862,619,1.301,620,1.551,621,1.551,622,3.223,623,2.13,624,1.551,625,1.551,626,2.538,627,1.301,628,1.551,629,1.301,630,1.551,631,1.551,632,1.551,633,1.551,634,1.551,635,1.015,636,2.538,637,1.301,638,1.551,639,2.538,640,2.538,641,2.538,642,1.551,643,1.551,644,1.551,645,2.13,646,1.301,647,1.301,648,1.137,649,1.551,650,1.551,651,1.137,652,1.367,653,2.13,654,1.551,655,3.725,656,1.551,657,1.551,658,1.551]],["title/interfaces/NgxEditorConfig.html",[284,0.865,659,1.6]],["body/interfaces/NgxEditorConfig.html",[3,1.064,4,0.984,5,0.984,7,0.908,8,1.531,19,1.419,25,0.03,26,1.68,27,1.029,28,1.557,38,0.56,40,0.779,42,1.419,44,0.908,47,0.984,122,2.075,185,0.872,237,0.868,244,1.817,264,1.337,281,0.019,282,0.024,283,0.019,284,1.314,285,1.817,323,2.35,497,3.163,534,1.871,535,2.332,648,3.924,659,2.43,660,3.637,661,4.491,662,3.178,663,3.637]],["title/modules/NgxEditorModule.html",[664,1.739,665,1.6]],["body/modules/NgxEditorModule.html",[0,0.917,3,0.917,4,0.848,5,0.848,11,1.844,22,1.566,24,1.697,25,0.03,26,1.449,27,0.662,28,0.917,35,1.697,38,0.553,52,1.844,56,1.105,69,0.917,87,1.449,128,1.069,130,2.939,237,0.606,281,0.016,282,0.021,283,0.016,448,4.374,453,2.623,462,3.572,463,4.367,464,3.974,465,3.974,466,3.974,467,4.367,491,4.087,495,2.012,498,2.879,499,3.136,501,2.212,588,2.445,651,2.74,659,2.608,664,1.844,665,2.864,666,2.74,667,2.209,668,3.974,669,2.445,670,4.547,671,3.136,672,3.136,673,3.136,674,3.136,675,4.087,676,3.136,677,3.136,678,3.736,679,4.87,680,3.736,681,5.418,682,3.974,683,3.736,684,3.736,685,4.087,686,4.547,687,3.136,688,3.736,689,3.736,690,3.736]],["title/injectables/NgxEditorService.html",[479,2.305,691,2.305]],["body/injectables/NgxEditorService.html",[0,1.242,3,0.973,4,0.9,5,0.9,7,0.831,8,1.448,14,2.135,22,2.121,24,1.801,25,0.03,26,1.537,27,0.897,28,1.242,38,0.598,40,0.679,44,0.831,47,0.9,52,1.957,56,0.9,69,0.973,128,1.134,185,0.846,237,0.904,273,1.224,281,0.017,282,0.022,283,0.017,323,1.962,414,1.817,453,3.002,479,3.311,495,2.135,498,3.667,501,2.863,503,2.908,534,1.562,535,2.108,659,2.667,691,3.647,692,2.908,693,2.594,694,3.965,695,5.06,696,3.327,697,2.498,698,2.344,699,4.247,700,3.711,701,4.677,702,3.327,703,3.711,704,2.908,705,2.594]],["title/injectables/NgxEditorServiceConfig.html",[498,2.082,691,2.305]],["body/injectables/NgxEditorServiceConfig.html",[0,1.209,3,0.934,4,0.863,5,0.863,7,0.797,8,1.41,22,2.291,25,0.03,27,0.968,28,0.934,32,1.686,33,2.697,38,0.591,40,0.661,44,0.797,47,0.863,52,1.877,56,0.863,69,0.934,128,1.088,185,0.872,237,0.886,273,1.174,281,0.017,282,0.022,283,0.017,323,2.119,414,1.962,453,3.113,479,2.488,495,2.048,498,3.417,501,2.625,503,2.789,534,1.784,535,2.242,659,2.625,691,3.575,692,2.789,693,2.488,697,2.697,698,2.248,699,4.134,700,3.613,701,5.368,702,3.192,703,3.613,704,2.789,705,2.488,706,3.803,707,3.803,708,3.803]],["title/interfaces/NodeViews.html",[284,0.865,535,1.265]],["body/interfaces/NodeViews.html",[3,1.118,4,1.034,5,1.034,19,1.463,22,1.909,25,0.03,26,2.139,38,0.572,40,0.796,42,1.463,44,0.954,47,1.034,122,2.139,185,0.796,237,0.895,244,1.909,264,1.702,281,0.02,282,0.024,283,0.02,284,1.354,285,1.909,323,2.139,497,3.261,534,1.406,535,2.214,648,4.045,659,2.069,660,3.823,661,4.98,662,3.34,663,3.823,709,4.555,710,4.555]],["title/interfaces/TooltipPosition.html",[284,0.865,711,2.583]],["body/interfaces/TooltipPosition.html",[3,0.999,4,0.924,5,0.924,7,0.853,8,1.472,19,1.364,25,0.03,27,0.912,30,1.256,38,0.392,40,0.546,42,1.496,44,0.853,69,1.575,128,1.165,230,2.914,237,0.66,244,2.618,281,0.018,282,0.023,283,0.018,284,0.999,285,1.706,325,2.985,336,4,366,3.691,393,2.663,437,2.406,438,2.985,570,3.773,582,2.663,711,4.138,712,3.416,713,3.416,714,3.416,715,3.416,716,2.663,717,3.416,718,4.318,719,3.416,720,3.416,721,3.416,722,2.663,723,3.416,724,3.416,725,3.416,726,3.416,727,3.416,728,3.416,729,3.416,730,3.416,731,3.416,732,3.416,733,2.985,734,3.416,735,3.416,736,3.416,737,3.416,738,3.416,739,3.416]],["title/changelog.html",[740,1.966,741,1.966,742,2.521]],["body/changelog.html",[2,0.716,5,0.507,9,0.38,10,1.582,11,0.656,20,0.557,25,0.017,32,1.262,33,1.425,38,0.128,40,0.658,44,0.278,47,0.302,52,0.656,56,0.655,75,1.203,82,0.785,87,1.463,114,0.557,128,0.38,139,0.936,154,1.94,156,3.612,160,0.974,165,0.716,185,0.3,192,0.41,229,1.32,240,1.518,273,0.41,281,0.006,282,0.01,283,0.006,294,0.603,298,0.603,323,0.515,342,2.118,355,1.115,375,1.115,414,1.215,434,1.685,441,0.869,442,0.656,447,0.785,451,1.115,457,1.115,469,1.762,477,1.115,501,1.312,515,1.115,534,1.045,535,0.477,540,1.115,547,0.974,549,1.115,550,1.115,553,2.424,566,1.115,580,1.115,581,0.974,582,0.869,584,0.974,590,0.974,595,1.115,619,4.33,635,0.869,645,1.115,646,1.115,652,2.202,664,0.656,667,2.416,669,2.215,697,1.863,722,2.215,733,0.974,742,1.874,743,1.329,744,3.861,745,1.329,746,1.329,747,1.329,748,5.763,749,5.973,750,6.038,751,3.774,752,1.329,753,4.745,754,4.561,755,4.902,756,3.187,757,5.763,758,5.039,759,1.329,760,4.114,761,3.774,762,1.329,763,5.521,764,2.888,765,2.482,766,2.482,767,1.329,768,1.329,769,2.888,770,3.647,771,2.233,772,1.329,773,1.115,774,1.329,775,1.329,776,1.329,777,3.595,778,3.696,779,1.329,780,1.329,781,4.088,782,1.329,783,1.329,784,2.233,785,1.329,786,1.461,787,1.329,788,0.974,789,0.716,790,1.874,791,0.974,792,0.974,793,1.329,794,1.329,795,4.745,796,2.233,797,1.89,798,2.888,799,2.233,800,1.329,801,2.888,802,1.329,803,1.329,804,1.329,805,1.329,806,1.115,807,1.329,808,0.557,809,0.974,810,0.974,811,0.869,812,0.974,813,1.115,814,1.329,815,1.329,816,2.118,817,2.888,818,2.888,819,0.869,820,0.974,821,1.329,822,1.329,823,1.329,824,2.233,825,4.088,826,2.233,827,1.329,828,1.329,829,2.233,830,1.329,831,1.329,832,1.115,833,1.329,834,1.329,835,2.233,836,3.385,837,1.329,838,1.329,839,1.329,840,1.329,841,1.329,842,2.233,843,2.233,844,1.637,845,1.329,846,1.329,847,3.774,848,1.329,849,1.329,850,2.233,851,1.329,852,1.329,853,1.329,854,1.329,855,4.229,856,2.233,857,1.329,858,1.329,859,1.329,860,1.329,861,2.233,862,1.329,863,1.329,864,3.385,865,1.329,866,2.233,867,5.711,868,2.233,869,1.329,870,1.329,871,1.329,872,1.329,873,3.385,874,1.329,875,1.329,876,4.902,877,4.745,878,1.329,879,2.233,880,1.329,881,1.329,882,3.647,883,1.329,884,1.329,885,1.329,886,1.329,887,1.329,888,1.329,889,1.329,890,1.329,891,1.329,892,4.088,893,1.329,894,5.653,895,1.329,896,1.329,897,1.329,898,2.233,899,2.233,900,1.329,901,1.329,902,5.039,903,1.329,904,1.329,905,2.233,906,1.329,907,5.59,908,1.329,909,1.329,910,1.329,911,1.329,912,1.329,913,1.329,914,1.329,915,3.385,916,2.233,917,1.115,918,2.888,919,1.329,920,2.888,921,1.329,922,2.233,923,1.329,924,4.902,925,2.233,926,1.329,927,1.329,928,1.329,929,1.329,930,2.233,931,3.774,932,1.329,933,1.329,934,1.329,935,1.115,936,3.167,937,3.385,938,1.329,939,1.329,940,2.233,941,1.329,942,2.233,943,1.329,944,1.329,945,4.745,946,1.874,947,1.874,948,2.233,949,1.329,950,1.329,951,1.329,952,2.233,953,1.329,954,1.329,955,3.385,956,1.329,957,1.329,958,1.329,959,1.329,960,2.233,961,1.329,962,1.329,963,2.233,964,2.233,965,1.329,966,1.329,967,1.329,968,1.329,969,1.329,970,1.329,971,1.329,972,1.329,973,1.329,974,1.329,975,1.329,976,2.888,977,1.329,978,1.329,979,1.329,980,1.329,981,2.233,982,2.888,983,1.329,984,1.329,985,2.233,986,1.329,987,1.329,988,1.329,989,1.329,990,1.329,991,1.329,992,1.329,993,1.329,994,1.329,995,1.329,996,1.329,997,1.329,998,1.329,999,1.329,1000,1.329,1001,2.233,1002,1.329,1003,1.329,1004,1.329,1005,1.329,1006,1.329,1007,1.329,1008,2.233,1009,1.329,1010,1.329,1011,3.774,1012,1.329,1013,1.329,1014,1.329,1015,1.329,1016,1.329,1017,1.329,1018,1.329,1019,1.329,1020,1.329,1021,1.329,1022,1.329,1023,1.329,1024,2.888,1025,1.329,1026,1.329,1027,1.329,1028,1.329,1029,1.329,1030,0.477,1031,1.329,1032,1.329,1033,1.329,1034,1.461,1035,2.233,1036,1.329,1037,1.329,1038,1.329,1039,1.329,1040,1.461,1041,1.329,1042,2.233,1043,1.329,1044,1.329,1045,1.329,1046,1.329,1047,1.329,1048,1.329,1049,1.329,1050,1.329,1051,2.888,1052,1.329,1053,0.477,1054,2.233,1055,1.329,1056,1.115,1057,1.329,1058,1.329,1059,3.385,1060,1.329,1061,1.329,1062,1.329,1063,1.329,1064,1.329,1065,4.915,1066,1.329,1067,1.874,1068,1.329,1069,1.329,1070,1.329,1071,1.329,1072,1.329,1073,1.329,1074,2.233,1075,1.329,1076,1.329,1077,2.888,1078,1.329,1079,1.329,1080,1.115,1081,2.233,1082,2.233,1083,1.329,1084,1.329,1085,1.329,1086,1.329,1087,1.329,1088,1.329,1089,1.329,1090,1.32,1091,1.329,1092,2.233,1093,1.329,1094,1.329,1095,2.233,1096,1.329,1097,1.329,1098,1.329,1099,2.233,1100,2.233,1101,1.329,1102,1.329,1103,1.329,1104,1.329,1105,1.329,1106,1.329,1107,1.329,1108,2.233,1109,1.329,1110,1.329,1111,1.329,1112,1.329,1113,1.329,1114,1.329,1115,1.329,1116,1.329,1117,1.329,1118,1.329,1119,1.329,1120,1.329,1121,1.329,1122,1.329,1123,1.329,1124,1.329,1125,1.329,1126,1.329,1127,1.329,1128,1.329,1129,1.329,1130,1.329,1131,1.329,1132,1.329,1133,2.233,1134,1.329,1135,2.233,1136,1.329,1137,1.329,1138,1.329,1139,1.329,1140,1.329,1141,1.329,1142,1.329,1143,1.329,1144,1.329,1145,1.329,1146,1.329,1147,1.115,1148,1.115,1149,1.329,1150,1.329,1151,1.329,1152,1.329,1153,1.329,1154,1.329,1155,1.329,1156,1.329,1157,1.329,1158,1.329,1159,3.774,1160,1.329,1161,1.329,1162,1.329,1163,1.329,1164,1.329,1165,1.329,1166,1.329,1167,1.329,1168,1.329,1169,1.329,1170,4.561,1171,1.329,1172,2.233,1173,1.329,1174,2.888,1175,1.329,1176,1.329,1177,1.329,1178,1.329,1179,1.329,1180,1.329,1181,1.329,1182,1.329,1183,1.329,1184,1.329,1185,1.329,1186,1.329,1187,1.115,1188,1.329,1189,1.329,1190,1.329,1191,2.233,1192,1.329,1193,1.329,1194,1.329,1195,2.233,1196,1.329,1197,1.329,1198,1.329,1199,3.385,1200,2.888,1201,2.233,1202,1.329,1203,1.329,1204,1.329,1205,1.115,1206,2.233,1207,1.329,1208,1.329,1209,1.329,1210,1.329,1211,1.329,1212,1.115,1213,1.115]],["title/dependencies.html",[667,2.485,844,2.203]],["body/dependencies.html",[25,0.03,281,0.021,282,0.025,283,0.021,495,2.614,496,3.176,667,2.87,1214,4.854,1215,6.627,1216,4.074,1217,4.854,1218,4.809,1219,4.202,1220,4.854,1221,4.854,1222,4.854,1223,4.854,1224,4.854,1225,4.854,1226,4.854,1227,4.854]],["title/miscellaneous/functions.html",[1228,1.618,1229,3.527]],["body/miscellaneous/functions.html",[7,0.946,20,1.893,24,2.793,25,0.029,26,2.443,28,1.51,35,2.862,62,4.025,139,1.893,264,1.394,281,0.02,282,0.024,283,0.02,300,3.79,323,2.292,396,4.961,453,2.433,501,2.051,547,4.025,584,4.025,659,2.051,685,4.606,693,3.591,696,3.79,704,3.312,1228,2.433,1229,3.79,1230,4.606,1231,4.516,1232,5.488,1233,5.488,1234,3.79,1235,3.79,1236,3.79,1237,4.516,1238,3.79,1239,3.79,1240,3.79,1241,4.516]],["title/index.html",[7,0.629,740,1.966,741,1.966]],["body/index.html",[0,0.916,20,1.564,25,0.03,28,1.408,32,1.151,38,0.553,42,0.989,56,1.431,77,2.205,90,1.841,91,1.841,92,1.841,93,1.841,94,1.841,95,1.841,103,1.841,105,1.446,114,2.039,142,1.802,185,0.653,237,0.605,240,1.241,263,2.009,281,0.016,282,0.021,283,0.016,414,1.944,429,3.2,431,2.205,433,2.62,434,2.099,435,2.876,436,2.876,469,1.918,496,2.441,534,1.151,535,1.339,600,2.009,652,2.009,664,1.841,665,2.209,682,2.735,697,1.841,740,2.441,741,2.441,756,4.208,777,2.735,797,2.441,808,1.564,809,2.735,810,2.735,811,3.542,816,2.735,844,2.735,855,3.13,882,3.13,917,3.13,1034,2.441,1040,2.441,1080,3.13,1090,2.205,1205,4.083,1212,3.13,1213,3.13,1242,3.73,1243,3.73,1244,3.73,1245,3.73,1246,3.73,1247,4.865,1248,3.73,1249,3.73,1250,3.73,1251,4.865,1252,4.865,1253,3.73,1254,3.73,1255,3.13,1256,3.13,1257,3.73,1258,3.13,1259,3.13,1260,3.97,1261,3.568,1262,3.568,1263,2.735,1264,3.73,1265,3.73,1266,2.205,1267,2.205,1268,3.13,1269,3.73,1270,3.73,1271,3.73,1272,3.73,1273,3.73,1274,3.73,1275,3.73,1276,3.73,1277,3.73,1278,3.73,1279,3.73,1280,3.73,1281,3.73,1282,3.73,1283,3.73]],["title/license.html",[740,1.966,741,1.966,1284,2.521]],["body/license.html",[25,0.023,281,0.019,282,0.023,283,0.019,333,3.615,588,2.818,722,3.488,756,3.159,760,3.615,1056,3.615,1065,3.615,1284,3.615,1285,4.307,1286,5.789,1287,4.307,1288,4.307,1289,5.331,1290,4.307,1291,4.307,1292,4.307,1293,4.307,1294,4.307,1295,4.307,1296,5.331,1297,6.539,1298,4.307,1299,4.307,1300,4.307,1301,5.789,1302,4.307,1303,5.331,1304,4.307,1305,4.307,1306,4.307,1307,4.307,1308,4.307,1309,4.307,1310,4.307,1311,4.307,1312,4.307,1313,5.331,1314,4.307,1315,4.307,1316,4.307,1317,4.307,1318,4.307,1319,4.307,1320,4.307,1321,5.331,1322,5.331,1323,4.307,1324,4.307,1325,4.307,1326,3.615,1327,4.307,1328,4.307,1329,4.307,1330,4.307,1331,4.307,1332,4.307,1333,4.307,1334,4.307,1335,4.307,1336,4.307,1337,4.307,1338,4.307,1339,4.307,1340,4.307,1341,4.307,1342,4.307,1343,4.307,1344,3.615,1345,4.307,1346,4.307,1347,4.307,1348,4.307,1349,4.307,1350,4.307]],["title/modules.html",[666,3.436]],["body/modules.html",[25,0.026,281,0.023,282,0.026,283,0.023,590,3.829,665,2.371,666,3.829,778,3.829,1219,3.829,1351,5.221]],["title/overview.html",[1352,3.932]],["body/overview.html",[2,2.373,25,0.03,130,3.088,233,2.266,281,0.019,282,0.024,283,0.019,285,1.847,437,2.604,439,2.882,447,2.604,448,4.391,462,3.231,463,4.288,464,4.288,465,4.288,466,4.288,467,4.589,588,2.882,651,3.231,664,2.668,665,2.842,667,2.604,668,3.231,669,2.882,670,3.697,671,3.697,672,3.697,673,3.697,674,3.697,675,4.536,676,3.697,692,3.231,1352,3.697,1353,4.405]],["title/miscellaneous/typealiases.html",[1228,1.618,1354,4.203]],["body/miscellaneous/typealiases.html",[7,0.992,16,2.565,18,2.565,25,0.028,27,1.107,49,2.565,50,2.367,192,1.462,240,1.88,264,1.462,273,1.743,281,0.021,282,0.025,283,0.021,286,2.8,287,2.8,289,3.338,290,3.567,291,3.25,295,3.041,428,3.948,1228,2.551,1355,4.736,1356,6.64]],["title/miscellaneous/variables.html",[1228,1.618,1357,3.527]],["body/miscellaneous/variables.html",[1,0.909,6,1.019,7,0.291,9,0.663,10,0.583,13,1.371,16,0.631,18,0.631,19,1.026,20,1.251,21,1.251,25,0.03,27,1.135,29,1.019,30,0.921,32,1.96,33,3.135,42,0.615,43,1.802,44,1.012,45,1.019,46,3.26,48,0.631,49,1.758,53,1.517,54,1.517,55,1.7,58,1.7,59,1.517,60,1.7,64,1.7,66,1.517,69,1.513,70,2.188,71,0.909,72,2.839,73,0.909,74,2.188,75,1.249,76,2.188,77,0.822,78,0.822,79,2.839,80,0.909,81,1.7,82,0.822,83,1.7,84,1.7,85,0.909,86,1.7,87,1.501,88,1.019,90,1.144,91,1.144,92,1.144,93,1.144,94,1.144,95,1.144,103,1.719,104,0.686,105,0.899,114,0.972,122,2.069,128,1.691,137,1.7,142,1.834,144,1.7,145,0.686,148,2.089,149,1.019,150,0.686,151,0.686,152,0.909,153,1.019,154,0.716,155,1.019,164,1.7,165,1.607,185,0.561,188,1.593,189,2.472,192,0.716,194,2.288,198,1.952,203,1.7,220,1.019,224,2.472,230,1.582,233,1.623,235,2.188,236,1.019,238,1.517,239,0.909,240,0.993,241,1.019,242,1.019,243,1.7,244,1.46,245,1.7,246,1.019,247,1.019,248,1.7,249,1.7,250,1.019,251,2.188,252,1.371,253,1.019,254,1.019,255,1.019,256,1.019,257,1.019,258,1.019,259,1.019,260,1.019,261,1.019,262,1.952,263,1.607,264,1.435,265,1.019,266,1.019,267,2.623,268,0.686,269,1.019,270,1.019,271,1.7,272,1.7,273,0.429,274,1.019,275,1.019,276,1.019,277,1.019,278,1.019,279,1.019,280,1.019,281,0.006,282,0.01,283,0.006,288,1.607,294,2.377,295,0.749,296,2.601,297,1.355,298,1.053,325,1.7,326,1.946,336,0.909,342,1.019,366,2.279,393,0.909,414,0.833,426,1.166,427,4.392,428,0.909,429,2.623,430,1.019,431,2.059,432,1.166,433,1.607,434,1.802,435,2.748,436,2.748,437,1.371,438,1.7,439,0.909,440,1.166,441,0.909,442,1.911,443,2.504,453,1.249,534,0.429,535,0.499,565,1.7,570,1.7,582,0.909,601,1.517,627,1.166,635,1.517,659,0.631,677,1.946,686,1.946,687,1.166,693,1.517,703,1.7,705,2.279,711,1.019,712,1.166,713,1.166,714,1.166,715,1.166,716,0.909,717,1.166,718,1.946,719,1.166,720,1.166,721,1.166,722,0.909,723,1.166,724,1.166,725,1.166,726,1.166,727,1.166,728,1.166,729,1.166,730,1.166,731,1.166,732,1.166,733,1.019,734,1.166,735,1.166,736,1.166,737,1.166,738,1.166,739,1.166,811,0.909,832,1.946,1228,0.749,1230,3.724,1234,1.946,1235,1.946,1236,1.166,1238,1.166,1239,1.166,1240,1.166,1266,0.822,1267,0.822,1357,1.166,1358,5.117,1359,3.482,1360,4.437,1361,1.39,1362,2.319,1363,2.319,1364,2.983,1365,2.983,1366,2.319,1367,2.983,1368,2.319,1369,2.319,1370,1.39,1371,1.39,1372,1.39,1373,1.39,1374,3.482,1375,2.983,1376,3.254,1377,1.39,1378,2.504,1379,3.482,1380,2.319,1381,1.39,1382,1.39,1383,1.39,1384,1.39,1385,1.39,1386,2.983,1387,1.39,1388,1.39,1389,1.39,1390,1.39,1391,1.39,1392,1.39,1393,1.39,1394,1.39,1395,2.319,1396,2.319,1397,1.39,1398,1.39,1399,1.39,1400,1.39,1401,2.983,1402,1.39,1403,1.946,1404,1.39,1405,1.39,1406,1.39,1407,1.39,1408,1.39,1409,1.39,1410,1.39,1411,1.39,1412,1.39,1413,1.39,1414,1.39,1415,1.39,1416,1.39,1417,1.39,1418,1.39,1419,1.39,1420,1.39,1421,1.39,1422,1.39,1423,1.39,1424,1.39,1425,1.39,1426,1.39,1427,1.39,1428,1.39]],["title/additional-documentation/configuration.html",[1030,1.079,1053,1.079,1090,1.776]],["body/additional-documentation/configuration.html",[20,1.843,25,0.03,28,1.434,32,1.357,38,0.52,56,1.225,90,2.17,91,2.17,92,2.17,93,2.17,94,2.17,95,2.17,103,2.17,105,1.704,114,2.263,142,1.944,185,0.724,240,1.463,263,2.368,281,0.019,282,0.024,283,0.019,414,1.938,429,3.454,431,2.599,433,2.907,434,2.265,435,3.191,436,3.191,442,2.17,469,1.357,534,1.357,535,1.578,600,2.368,697,2.17,698,2.599,789,2.368,808,1.843,809,3.224,810,3.224,811,2.876,1090,2.599,1259,3.689,1260,3.959,1261,3.224,1262,3.224,1263,3.224,1266,2.599,1267,2.599,1268,3.689]],["title/additional-documentation/ngmodel.html",[1030,1.079,1034,1.966,1053,1.079]],["body/additional-documentation/ngmodel.html",[0,1.236,25,0.029,40,0.676,192,1.807,252,3.462,281,0.022,282,0.026,283,0.022,367,3.296,526,4.227,786,3.296,1034,3.296,1187,4.227,1429,4.227,1430,5.037,1431,5.037,1432,4.227]],["title/additional-documentation/history.html",[819,1.966,1030,1.079,1053,1.079]],["body/additional-documentation/history.html",[25,0.03,38,0.548,40,0.763,281,0.021,282,0.025,283,0.021,469,1.478,534,1.478,618,4.169,778,4.169,808,2.008,812,3.512,819,4.189,820,4.446,936,4.771,1433,4.019,1434,4.789,1435,4.019,1436,4.771,1437,4.771,1438,4.789,1439,4.169,1440,4.019]],["title/additional-documentation/shortcuts.html",[812,2.203,1030,1.079,1053,1.079]],["body/additional-documentation/shortcuts.html",[25,0.03,38,0.611,39,3.165,40,0.812,41,2.325,56,1.211,114,2.429,185,0.778,281,0.019,282,0.023,283,0.019,430,3.165,433,2.325,434,1.673,469,1.647,534,1.647,581,3.165,792,3.165,808,2.237,820,4.648,946,3.622,1376,3.165,1433,4.479,1435,4.479,1439,4.562,1441,4.316,1442,4.316,1443,4.316,1444,4.316,1445,3.622,1446,4.316,1447,4.316,1448,5.337,1449,4.316,1450,4.316,1451,4.316,1452,4.316,1453,5.794,1454,4.316,1455,4.316,1456,4.316]],["title/additional-documentation/html.html",[652,1.618,1030,1.079,1053,1.079]],["body/additional-documentation/html.html",[25,0.03,38,0.6,40,0.752,47,1.272,56,1.272,69,1.473,104,2.307,169,3.058,185,0.752,281,0.021,282,0.025,283,0.021,314,3.923,469,1.729,531,4.702,652,3.35,1432,3.923,1457,4.674,1458,4.674,1459,4.674,1460,4.674,1461,4.674,1462,4.674,1463,4.674,1464,4.674,1465,4.674,1466,4.674,1467,4.674,1468,4.674,1469,4.674]],["title/additional-documentation/menu-plugin.html",[323,1.015,414,0.94,1030,0.94,1053,0.94]],["body/additional-documentation/menu-plugin.html",[9,1.521,19,0.953,20,1.506,25,0.03,27,0.841,28,0.882,30,1.109,32,1.465,38,0.545,40,0.482,43,1.84,44,0.994,50,1.506,53,2.35,56,1.077,59,2.35,69,1.512,75,1.935,78,2.124,90,1.773,91,1.773,92,1.773,93,1.773,94,1.773,95,1.773,103,1.773,104,1.773,105,1.393,114,1.99,118,2.35,119,2.35,120,2.35,128,1.521,139,1.506,142,1.769,154,1.64,161,2.635,185,0.713,188,1.29,189,2.806,190,3.481,192,1.109,198,2.35,222,2.635,223,2.635,229,2.124,230,1.632,231,2.635,232,2.635,233,1.506,237,0.583,240,1.196,263,1.935,273,1.109,281,0.016,282,0.021,283,0.016,291,2.556,323,1.84,414,2.169,429,3.142,431,2.124,433,2.556,434,2.061,435,2.806,436,2.806,442,1.773,469,1.109,534,1.109,546,3.015,600,1.935,652,1.935,653,3.015,697,1.773,698,2.124,777,2.635,789,2.556,797,3.478,808,1.506,1040,3.7,1260,2.635,1261,2.635,1262,2.635,1263,2.635,1266,2.124,1267,2.124,1470,3.592,1471,3.592,1472,3.592,1473,3.592,1474,3.592,1475,3.592,1476,4.746,1477,3.015,1478,3.592,1479,3.015,1480,3.592,1481,3.592,1482,3.592,1483,3.592,1484,3.592,1485,3.592,1486,3.592]],["title/additional-documentation/schema.html",[185,0.403,1030,1.079,1053,1.079]],["body/additional-documentation/schema.html",[9,1.156,25,0.03,30,1.247,32,1.735,38,0.57,40,0.542,47,0.917,56,1.276,69,1.38,87,1.566,113,2.643,122,1.566,128,1.465,139,2.146,148,1.693,185,0.85,237,0.655,262,2.643,281,0.018,282,0.023,283,0.018,414,1.45,469,1.58,497,3.027,501,1.835,601,2.643,629,4.297,697,1.994,698,2.388,705,2.643,788,2.962,789,2.176,797,2.643,806,3.39,808,1.693,816,2.962,1090,3.027,1148,3.39,1326,3.39,1376,3.755,1378,4.718,1479,3.39,1487,3.39,1488,3.39,1489,3.39,1490,3.39,1491,5.12,1492,5.12,1493,5.12,1494,5.12,1495,5.912,1496,4.039,1497,4.039,1498,4.039,1499,4.039,1500,4.039,1501,4.039,1502,4.039,1503,4.039,1504,4.039,1505,4.039,1506,4.039]],["title/additional-documentation/inline-code-editor.html",[434,0.9,469,0.716,600,1.25,1030,0.834,1053,0.834]],["body/additional-documentation/inline-code-editor.html",[0,0.615,9,1.253,10,1.05,19,1.28,25,0.03,27,0.444,30,0.773,33,1.236,38,0.562,40,0.723,41,1.349,42,1.476,44,0.773,47,0.568,56,0.568,69,1.476,87,1.43,102,2.855,113,1.639,122,1.996,128,1.541,130,2.161,139,1.05,154,1.138,178,1.837,185,0.495,192,1.138,230,1.137,233,2.395,244,2.158,264,1.351,273,0.773,281,0.011,282,0.016,283,0.011,297,1.137,298,1.675,366,2.413,379,3.674,380,2.102,390,2.102,416,2.705,434,1.43,469,1.49,497,3.043,514,2.102,522,2.102,535,0.899,565,1.837,600,1.349,606,2.102,618,2.705,635,1.639,662,4.189,665,1.137,716,3.738,744,1.837,788,1.837,789,1.349,792,1.837,808,1.05,813,2.102,819,1.639,935,2.102,947,2.102,1040,3.368,1067,2.102,1147,3.095,1344,2.102,1436,2.102,1437,2.102,1439,3.541,1440,2.102,1445,2.102,1477,2.102,1487,2.102,1488,2.102,1489,2.102,1490,2.102,1507,2.504,1508,2.504,1509,2.504,1510,2.504,1511,2.504,1512,3.688,1513,2.504,1514,4.377,1515,2.504,1516,4.829,1517,2.504,1518,2.504,1519,2.504,1520,2.504,1521,2.504,1522,2.504,1523,2.504,1524,2.504,1525,2.504,1526,2.504,1527,2.504,1528,2.504,1529,4.377,1530,4.829,1531,2.504,1532,2.504,1533,2.504,1534,2.504,1535,2.504,1536,2.504,1537,2.504,1538,3.688,1539,2.504,1540,2.504,1541,2.504,1542,2.504,1543,2.504,1544,2.504,1545,2.504,1546,2.504,1547,2.504,1548,2.504,1549,2.504,1550,2.504,1551,5.147,1552,2.504,1553,2.504,1554,2.504,1555,2.504,1556,2.504,1557,2.504,1558,4.377,1559,2.504,1560,2.504,1561,2.504,1562,2.504,1563,2.504,1564,2.504,1565,2.504,1566,2.504,1567,2.504,1568,4.377,1569,2.504,1570,2.504,1571,2.504,1572,2.504,1573,2.504,1574,2.504,1575,2.504,1576,2.504,1577,3.688,1578,2.504,1579,2.504,1580,2.504,1581,2.504,1582,2.504,1583,2.504,1584,2.504,1585,2.504,1586,2.504,1587,2.504,1588,3.688,1589,2.504,1590,2.102,1591,3.688,1592,3.688,1593,2.504,1594,2.504,1595,4.829,1596,3.688,1597,2.504,1598,2.504,1599,2.504,1600,3.688,1601,2.504,1602,2.504,1603,2.504,1604,2.504]],["title/additional-documentation/input-rules.html",[786,1.714,791,1.921,1030,0.94,1053,0.94]],["body/additional-documentation/input-rules.html",[4,0.698,25,0.03,27,0.987,35,2.409,38,0.473,40,0.573,46,4.238,47,0.698,56,0.698,69,0.755,114,2.223,122,2.236,128,1.651,139,1.29,142,1.422,185,0.712,224,2.902,237,0.936,244,2.336,273,1.78,281,0.014,282,0.019,283,0.014,323,1.657,367,2.013,434,1.903,441,2.013,442,2.109,469,1.319,501,1.397,534,0.949,601,3.212,623,2.582,637,2.582,647,2.582,664,1.518,665,1.397,716,3.471,770,2.582,773,2.582,786,3.947,789,1.657,791,4.23,808,1.29,1266,1.819,1267,2.526,1590,2.582,1605,3.076,1606,3.076,1607,3.076,1608,3.076,1609,3.076,1610,3.076,1611,3.076,1612,3.076,1613,4.909,1614,4.273,1615,4.273,1616,3.076,1617,4.273,1618,6.267,1619,5.573,1620,5.573,1621,5.573,1622,5.573,1623,3.076,1624,3.076,1625,4.273,1626,3.076,1627,3.076,1628,3.076,1629,4.909,1630,3.076,1631,4.273,1632,3.076,1633,3.076,1634,3.076,1635,3.076,1636,3.076,1637,3.076,1638,3.076,1639,4.273,1640,3.076,1641,3.076,1642,3.076,1643,3.076,1644,3.076,1645,3.076,1646,3.076,1647,3.076,1648,3.076,1649,3.076,1650,3.076,1651,4.273,1652,3.076,1653,3.076,1654,3.076,1655,3.076,1656,3.076,1657,3.076,1658,3.076,1659,4.273,1660,3.076,1661,3.076,1662,3.076,1663,3.076,1664,3.076,1665,3.076]],["title/additional-documentation/reactive-forms.html",[765,1.921,766,1.921,1030,0.94,1053,0.94]],["body/additional-documentation/reactive-forms.html",[0,1.305,25,0.03,38,0.625,56,0.974,87,2.062,237,0.862,281,0.019,282,0.023,283,0.019,447,3.144,450,3.601,468,3.601,469,1.324,470,3.601,472,3.601,495,2.864,496,3.479,542,3.601,664,2.118,665,2.415,668,3.146,669,2.807,682,3.9,700,3.146,744,3.146,765,3.146,766,3.146,790,3.601,1216,3.601,1218,3.601,1219,3.146,1255,3.601,1256,3.601,1258,4.463,1403,3.601,1429,5.212,1666,5.318,1667,5.318,1668,5.318,1669,4.29,1670,5.318,1671,4.29,1672,4.29,1673,4.29,1674,4.29,1675,4.29,1676,4.29,1677,4.29,1678,4.29]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["0",{"_index":565,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["0.10.3",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":615,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2",{"_index":573,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.25rem",{"_index":604,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2rem",{"_index":562,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3rem",{"_index":564,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3s",{"_index":586,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5",{"_index":593,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5rem",{"_index":622,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.7rem",{"_index":632,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["00adda2",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["0310191",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["09b69b5",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["0a915f5",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["0b7dd99",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["0f94d1e",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":616,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1",{"_index":233,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["1.5rem",{"_index":602,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1.85rem",{"_index":548,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["10",{"_index":619,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["10.0.5",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":620,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1078c69",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["1248db7",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["15rem",{"_index":644,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["17",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["1737369",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["182152a",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["1a73e8",{"_index":560,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1c316cb",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["1ed938e",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":577,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1rem",{"_index":633,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["2",{"_index":437,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"interfaces/TooltipPosition.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":635,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["2017",{"_index":1065,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":760,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["23adb5e",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["24b92e0",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["26a1a6d",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["2748cc3",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["274dcc7",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["27ccd72",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["2a13ca0",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["2afb2ec",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["2d7d38e",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["2ed79b8",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":555,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["3",{"_index":438,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["30b513c",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["35fbb57",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["36133e1",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["367474f",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["3978843",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["3ddc3b0",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["3px",{"_index":634,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4",{"_index":439,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.5px",{"_index":642,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["40",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["4390502",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["443c994",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["453d807",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["45752bc",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["47d5ba4",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["47f34ad",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["4bff8e5",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["4eef077",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["4f4967a",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["4fddfac",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":552,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4rem",{"_index":598,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["5",{"_index":440,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":639,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["57e4056",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["5beee77",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["5f176e1",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["5px",{"_index":641,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["6",{"_index":441,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["6.5.5",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["6012283",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["613ec52",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["63e401b",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":613,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["65",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":614,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["68",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["683bbee",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["6c757d",{"_index":628,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["6e13142",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":617,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["72",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["731f2fc",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["78",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["79",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["7a40862",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["7be2fd6",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1353,"title":{},"body":{"overview.html":{}}}],["84104c2",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["84946ed",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["864a5be",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["8695873",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["87bb04e",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["89389ab",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["8aa0ffd",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["8b2bb27",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["8e3e65b",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["90f88a5",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["94374c4",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["97398ee",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["9c89d2a",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["9f0e19d",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["__dropdownmenu",{"_index":608,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__item",{"_index":621,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__text",{"_index":599,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["_blank",{"_index":347,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["a26f192",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["a9262c2",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["a983fd4",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["ab0216b",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1320,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":609,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["acc.concat(array.isarray(val",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accidental",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1345,"title":{},"body":{"license.html":{}}}],["actions",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":75,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["active_dropdown_item_classname",{"_index":83,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["active_menu_item_classname",{"_index":74,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["activeclass",{"_index":150,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/variables.html":{}}}],["activeel",{"_index":166,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel.length",{"_index":168,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel[0",{"_index":170,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["actual_component",{"_index":658,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["add",{"_index":777,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{}}}],["added",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1053,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{}}}],["af66d69",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1355,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":580,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["aligned",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["alpha.4",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["alpha.5",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["alpha.6",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["alpha.7",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["alpha.8",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["alpha.9",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["anchor",{"_index":1147,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["and/or",{"_index":1311,"title":{},"body":{"license.html":{}}}],["angular",{"_index":855,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["angular/common",{"_index":1216,"title":{},"body":{"dependencies.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/compiler",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":495,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"dependencies.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/forms",{"_index":496,"title":{},"body":{"components/NgxEditorComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/platform",{"_index":1218,"title":{},"body":{"dependencies.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/router",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":790,"title":{},"body":{"changelog.html":{},"additional-documentation/reactive-forms.html":{}}}],["app.component",{"_index":1669,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["app.component.html",{"_index":1672,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["app.component.scss",{"_index":1673,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["appcomponent",{"_index":1429,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/reactive-forms.html":{}}}],["applications",{"_index":1213,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1256,"title":{},"body":{"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["area",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1348,"title":{},"body":{"license.html":{}}}],["around",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.reduce((acc",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.slice",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":287,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/typealiases.html":{}}}],["arrow",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["asprosemirrorselection(doc",{"_index":1567,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["associated",{"_index":1298,"title":{},"body":{"license.html":{}}}],["asterisk",{"_index":1636,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attaching",{"_index":1606,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attribute",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":540,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["attrs",{"_index":148,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["attrs)(state",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1338,"title":{},"body":{"license.html":{}}}],["auto",{"_index":917,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["autogenerated",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1067,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["awesome",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":1451,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["b174a14",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["b280769",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["b2ddf54",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["b707409",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["b915d68",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["ba350a83",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["ba86da6",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":566,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["backticks",{"_index":1642,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bae2216",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":723,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["basekeymap",{"_index":1450,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["basic",{"_index":1656,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["basicmarks",{"_index":1492,"title":{},"body":{"additional-documentation/schema.html":{}}}],["basicnodes",{"_index":1491,"title":{},"body":{"additional-documentation/schema.html":{}}}],["bbe3daa",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["bede7a1",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":640,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["below",{"_index":1471,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["beta.0",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1549,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["bg",{"_index":557,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bind",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["binding",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["bindings",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["black",{"_index":568,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["block",{"_index":601,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["blockquote",{"_index":442,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["blockquoterule(nodetype",{"_index":1623,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blocks",{"_index":1658,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blur",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["blur(view",{"_index":402,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["bold",{"_index":429,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["boolean",{"_index":298,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["bootstrap",{"_index":669,"title":{},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/reactive-forms.html":{}}}],["border",{"_index":550,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["both",{"_index":516,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bottom",{"_index":336,"title":{},"body":{"classes/FloatingOptionsView.html":{},"components/NgxEditorComponent.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":570,"title":{},"body":{"components/NgxEditorComponent.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["box.bottom",{"_index":738,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["box.left",{"_index":737,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1351,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1219,"title":{},"body":{"dependencies.html":{},"modules.html":{},"additional-documentation/reactive-forms.html":{}}}],["browsermodule",{"_index":1667,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["browsers",{"_index":1271,"title":{},"body":{"index.html":{}}}],["bubbleel",{"_index":301,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["bug",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["buildinputrules(schema",{"_index":1659,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bullet",{"_index":1267,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["bullet_list",{"_index":436,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["bulletlist",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bulletlistrule(nodetype",{"_index":1637,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["button",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1287,"title":{},"body":{"license.html":{}}}],["c6a2151",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["c87c5e4",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["c9555b4",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["calc(#{$menubar",{"_index":610,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["calculatebubblepos",{"_index":325,"title":{},"body":{"classes/FloatingOptionsView.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["calculatebubblepos(view",{"_index":337,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["called",{"_index":162,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["canexecute",{"_index":190,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["catch",{"_index":523,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ccc",{"_index":596,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["cdfd4bc",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["ce00b5f",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["cebc696",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":582,"title":{},"body":{"components/NgxEditorComponent.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["centre",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":1577,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.from",{"_index":1581,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.text",{"_index":1583,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.to",{"_index":1582,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["changelog",{"_index":742,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":744,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/reactive-forms.html":{}}}],["characters",{"_index":1646,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["charge",{"_index":1293,"title":{},"body":{"license.html":{}}}],["check",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":1273,"title":{},"body":{"index.html":{}}}],["ci",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1341,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"index.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/reactive-forms.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"overview.html":{}}}],["classnames",{"_index":145,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/variables.html":{}}}],["cleanup",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["clearbubblecontent",{"_index":302,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["cli",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":231,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["clicked",{"_index":158,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["clicks",{"_index":376,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["clip",{"_index":569,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["closedropdown",{"_index":123,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["closes",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["cluster_ngxeditormodule",{"_index":671,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_declarations",{"_index":672,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_exports",{"_index":674,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_ngxeditorcomponent_providers",{"_index":673,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cm",{"_index":1523,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cmd",{"_index":1587,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["code",{"_index":434,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["code_block",{"_index":1477,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["code_mirror",{"_index":1506,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblock",{"_index":1494,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblockrule(nodetype",{"_index":1643,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["codeblockview(node",{"_index":1604,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror",{"_index":1040,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["codemirror's",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["codemirror(null",{"_index":1533,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror.normalizekeymap",{"_index":1589,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror/mode/javascript/javascript",{"_index":1510,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorkeymap",{"_index":1585,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorview",{"_index":1521,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["color",{"_index":553,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["combinedupdates",{"_index":277,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["combinedupdates.foreach((update",{"_index":280,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":50,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["command(editorview.state",{"_index":1482,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(state",{"_index":1484,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(this.editorview.state",{"_index":191,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["commands",{"_index":41,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["commands.appendchild(editopt",{"_index":360,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["commands.appendchild(removeopt",{"_index":361,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["commands.classlist.add('commands",{"_index":350,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["commitizen",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":1666,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["compatibility",{"_index":1269,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["compiler",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":882,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":447,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/reactive-forms.html":{}}}],["component_template",{"_index":656,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["components",{"_index":449,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["computechange(oldval",{"_index":1511,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["computechange(this.node.textcontent",{"_index":1578,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["conditions",{"_index":1319,"title":{},"body":{"license.html":{}}}],["config",{"_index":501,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["configuration",{"_index":1090,"title":{"additional-documentation/configuration.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/schema.html":{}}}],["configure",{"_index":1438,"title":{},"body":{"additional-documentation/history.html":{}}}],["configured",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["configuring",{"_index":1470,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["connection",{"_index":1349,"title":{},"body":{"license.html":{}}}],["console.error('unable",{"_index":525,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["console.log(\"value",{"_index":1678,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["console.log(html);generating",{"_index":1465,"title":{},"body":{"additional-documentation/html.html":{}}}],["console.warn('unkown",{"_index":261,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":69,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{}}}],["constructor(@optional",{"_index":702,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["constructor(config",{"_index":694,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["constructor(dropdowngroup",{"_index":15,"title":{},"body":{"classes/DropDownView.html":{}}}],["constructor(editorview",{"_index":407,"title":{},"body":{"classes/MenuBarView.html":{}}}],["constructor(menuitem",{"_index":181,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["constructor(ngxeditorservice",{"_index":478,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["constructor(node",{"_index":1525,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["constructor(view",{"_index":307,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["content",{"_index":165,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contentjson",{"_index":509,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["contentnode",{"_index":1460,"title":{},"body":{"additional-documentation/html.html":{}}}],["contract",{"_index":1346,"title":{},"body":{"license.html":{}}}],["controlvalueaccessor",{"_index":456,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["conventional",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["coordinates",{"_index":715,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["copies",{"_index":1313,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1296,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1286,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["corresponds",{"_index":1648,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["create",{"_index":113,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["createeditor",{"_index":474,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["createlinknode",{"_index":303,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["createlinknode(item",{"_index":310,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["creates",{"_index":1645,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["creating",{"_index":1655,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["crossing",{"_index":731,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["css",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["ctrl",{"_index":1588,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cursor",{"_index":578,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["custom",{"_index":797,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["customization",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["cz",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d+)\\.\\s",{"_index":1628,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["d17c1dd",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["d4001c4",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["d4ccc79",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["d99dff2",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["da7d0c7",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["dabac4c",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1342,"title":{},"body":{"license.html":{}}}],["darken($dropdown",{"_index":626,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dash",{"_index":1634,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["data",{"_index":1503,"title":{},"body":{"additional-documentation/schema.html":{}}}],["ddd",{"_index":554,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dead",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1300,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1350,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":668,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/reactive-forms.html":{}}}],["decoration",{"_index":648,"title":{},"body":{"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorations",{"_index":663,"title":{},"body":{"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorators",{"_index":489,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["default_icon_height",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_icon_width",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_labels",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_options",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_placeholder",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_toolbar",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":703,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["defines",{"_index":1605,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["demo",{"_index":1205,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":667,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":690,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["destroy",{"_index":304,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["devdependencies",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["df192b",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1600,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["direct",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":654,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["directives",{"_index":657,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["disable",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":78,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["disabled_classname",{"_index":76,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["disabledclass",{"_index":151,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/variables.html":{}}}],["dispatch",{"_index":296,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/variables.html":{}}}],["dispatch(tr",{"_index":389,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["dispatchtransaction",{"_index":538,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["display",{"_index":575,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["distribute",{"_index":1309,"title":{},"body":{"license.html":{}}}],["div",{"_index":203,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.classlist.add(classname",{"_index":206,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.classname",{"_index":236,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.innerhtml",{"_index":212,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.setattribute(obj[0",{"_index":209,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["doc",{"_index":367,"title":{},"body":{"classes/FloatingOptionsView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["doc.resolve(pos",{"_index":383,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["docs",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":526,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{}}}],["document.createdocumentfragment",{"_index":341,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["document.createelement('a",{"_index":343,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["document.createelement('button",{"_index":352,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["document.createelement('div",{"_index":104,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["documentation",{"_index":756,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation/menu",{"_index":1264,"title":{},"body":{"index.html":{}}}],["documentation/schema.html",{"_index":1263,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["documented",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["documentfragment",{"_index":314,"title":{},"body":{"classes/FloatingOptionsView.html":{},"additional-documentation/html.html":{}}}],["dom",{"_index":9,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["dom.addeventlistener('click",{"_index":159,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.addeventlistener('mousedown",{"_index":1481,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.add('ngxeditor__menuitem",{"_index":1476,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor",{"_index":1486,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor__menuitem",{"_index":1485,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(activeclass",{"_index":200,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.classlist.toggle(disabledclass",{"_index":201,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.getattribute('data",{"_index":1500,"title":{},"body":{"additional-documentation/schema.html":{}}}],["dom.innerhtml",{"_index":1475,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.textcontent",{"_index":1499,"title":{},"body":{"additional-documentation/schema.html":{}}}],["domparser",{"_index":1466,"title":{},"body":{"additional-documentation/html.html":{}}}],["domparser.fromschema(schema).parse(el).tojson",{"_index":1469,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer",{"_index":1459,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer.fromschema(schema).serializefragment(contentnode.content",{"_index":1464,"title":{},"body":{"additional-documentation/html.html":{}}}],["don't",{"_index":229,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/menu-plugin.html":{}}}],["dot",{"_index":1626,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["down",{"_index":1593,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["downgrade",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":103,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["dropdown.addeventlistener('click",{"_index":134,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdownmenu",{"_index":177,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdowntext",{"_index":112,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropdwon_item_classname",{"_index":107,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropwdown_open_classname",{"_index":129,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(selected_dropdown_item_classname",{"_index":172,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(dropwdown_open_classname",{"_index":132,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(selected_dropdown_item_classname",{"_index":174,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.contains(e.target",{"_index":121,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown_items",{"_index":86,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.has(dropdowngroup",{"_index":254,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.set('heading",{"_index":89,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownfields",{"_index":17,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowngroup",{"_index":29,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":115,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.appendchild(dom",{"_index":175,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.classlist.add(`${dropdwon_item_classname}__dropdownmenu",{"_index":116,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.contains(target",{"_index":127,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.getelementsbyclassname(active_dropdown_item_classname",{"_index":167,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext",{"_index":108,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.classlist.add(`${dropdwon_item_classname}__text",{"_index":109,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.textcontent",{"_index":110,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownview",{"_index":1,"title":{"classes/DropDownView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview(dropdowngroup",{"_index":256,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview.render",{"_index":258,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownviewrender",{"_index":37,"title":{"interfaces/DropdownViewRender.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{}}}],["dropdwon_item_classname",{"_index":79,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname}__item",{"_index":146,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropupdate",{"_index":163,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropwdown_open_classname",{"_index":81,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":118,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.buttons",{"_index":232,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.preventdefault",{"_index":120,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.target",{"_index":126,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["e074c7a",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["e8f0fe",{"_index":559,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ease",{"_index":587,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["edge",{"_index":1275,"title":{},"body":{"index.html":{}}}],["edit",{"_index":355,"title":{},"body":{"classes/FloatingOptionsView.html":{},"changelog.html":{}}}],["editable",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["editopt",{"_index":351,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["editopt.classlist.add('command",{"_index":353,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["editopt.textcontent",{"_index":354,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["editor",{"_index":469,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["editor's",{"_index":947,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editor.component",{"_index":684,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.component.html",{"_index":473,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.scss",{"_index":471,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts",{"_index":454,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":492,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":480,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":487,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":483,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:51",{"_index":485,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:91",{"_index":481,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.module.ts",{"_index":677,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["editor.module.ts:16",{"_index":680,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.service",{"_index":499,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["editor.service.ts",{"_index":693,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:16",{"_index":707,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:21",{"_index":706,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:22",{"_index":708,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:30",{"_index":695,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["editor/additional",{"_index":1262,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["editor/commands",{"_index":61,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["editor/helpers",{"_index":57,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{}}}],["editor/plugins",{"_index":698,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["editor/tree/master/demo",{"_index":1490,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editor@4.x",{"_index":1245,"title":{},"body":{"index.html":{}}}],["editor@5.x",{"_index":1244,"title":{},"body":{"index.html":{}}}],["editorcontent",{"_index":1675,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["editorinitialized",{"_index":502,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorstate",{"_index":43,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["editorstate.create",{"_index":537,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorusage",{"_index":1254,"title":{},"body":{"index.html":{}}}],["editorview",{"_index":19,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorview(this.ngxeditor.nativeelement",{"_index":536,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorview.dispatch",{"_index":1483,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["editror",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["ee1555b",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["eed8aaa",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":169,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"additional-documentation/html.html":{}}}],["el.appendchild(commands",{"_index":363,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["el.appendchild(link",{"_index":362,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["el.innerhtml",{"_index":1467,"title":{},"body":{"additional-documentation/html.html":{}}}],["el.textcontent",{"_index":171,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["element",{"_index":653,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["elementref",{"_index":488,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ellipsis",{"_index":647,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/input-rules.html":{}}}],["em",{"_index":432,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["emdash",{"_index":1617,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["emit",{"_index":515,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["emitter",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":832,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":936,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["enable/disbale",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["encapsulation",{"_index":460,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["end",{"_index":718,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["end.left",{"_index":735,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":730,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["enhancements",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":1445,"title":{},"body":{"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["entirely",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":524,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["error",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1056,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":595,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["eventually",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["evergreen",{"_index":1270,"title":{},"body":{"index.html":{}}}],["example",{"_index":789,"title":{},"body":{"changelog.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["examples",{"_index":792,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["execute",{"_index":161,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["exitcode",{"_index":1508,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["exitcode(view.state",{"_index":1598,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["experimental",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":237,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["exporting",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":670,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["express",{"_index":1329,"title":{},"body":{"license.html":{}}}],["extrakeys",{"_index":1536,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["f12754b",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["f17d0ef",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["f1f1f1",{"_index":558,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["f49e477",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["f62d945",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":102,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["family",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["fbf9d1d",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["fcdc39b",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["fd3ee1a",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["fdb1b30",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{}}}],["files",{"_index":1299,"title":{},"body":{"license.html":{}}}],["filesystem",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":591,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["find",{"_index":727,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["findnodetype",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findnodetype(type",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firefox",{"_index":1277,"title":{},"body":{"index.html":{}}}],["firing",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1478,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["fitness",{"_index":1334,"title":{},"body":{"license.html":{}}}],["fix",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":1547,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["flatdeep",{"_index":64,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(updates",{"_index":278,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(val",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":576,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["floatingoptionsview",{"_index":299,"title":{"classes/FloatingOptionsView.html":{}},"body":{"classes/FloatingOptionsView.html":{}}}],["floatingoptionsview(editorview",{"_index":399,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["fn",{"_index":484,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["focus",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["followed",{"_index":1625,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["following",{"_index":1318,"title":{},"body":{"license.html":{}}}],["font",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":1674,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["formcontrol",{"_index":1671,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["formcontrol(null",{"_index":1676,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["formgroup",{"_index":1670,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["forms",{"_index":766,"title":{"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{},"additional-documentation/reactive-forms.html":{}}}],["formsmodule",{"_index":1258,"title":{},"body":{"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["forroot",{"_index":678,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forroot(config",{"_index":679,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forwardref",{"_index":466,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["forwardselection",{"_index":1562,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["free",{"_index":1292,"title":{},"body":{"license.html":{}}}],["from.depth",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.marks",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.node(i).type",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":273,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["functions",{"_index":1229,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1316,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1458,"title":{},"body":{"additional-documentation/html.html":{}}}],["generated",{"_index":1280,"title":{},"body":{"index.html":{}}}],["getattrs",{"_index":1498,"title":{},"body":{"additional-documentation/schema.html":{}}}],["getdom",{"_index":202,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["geticonsvg",{"_index":62,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/functions.html":{}}}],["geticonsvg(menuitem.icon",{"_index":269,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["geticonsvg(name",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmenu(toolbar",{"_index":415,"title":{},"body":{"classes/MenuBarView.html":{}}}],["getpos",{"_index":662,"title":{},"body":{"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["gets",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["getselectionmarks",{"_index":326,"title":{},"body":{"classes/FloatingOptionsView.html":{},"miscellaneous/variables.html":{}}}],["getselectionmarks(state).filter(mark",{"_index":372,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["getseperatordom",{"_index":235,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":740,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getwrapperdom",{"_index":12,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["github",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":1619,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["google",{"_index":1272,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1291,"title":{},"body":{"license.html":{}}}],["grippie",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":262,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["group.foreach((toolbaritem",{"_index":247,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["group.length",{"_index":250,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["h1",{"_index":90,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h2",{"_index":91,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h3",{"_index":92,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h4",{"_index":93,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h5",{"_index":94,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h6",{"_index":95,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["handle",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["handlebars",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["handledomevents",{"_index":401,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["handletransactions(tr",{"_index":527,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["handling",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["hasfocus",{"_index":369,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["head",{"_index":379,"title":{},"body":{"classes/FloatingOptionsView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["heading",{"_index":142,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["headingrule(nodetype",{"_index":1650,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["headings",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":547,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":811,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{}}}],["hereby",{"_index":1290,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":646,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["hide",{"_index":374,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["hidebubble",{"_index":305,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["highlight",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["history",{"_index":819,"title":{"additional-documentation/history.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["hold",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1339,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["hover",{"_index":556,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["html",{"_index":652,"title":{"additional-documentation/html.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["html5",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["htmlelement",{"_index":30,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["htmlmixed",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["htmlstring",{"_index":1468,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://developer.mozilla.org/en",{"_index":1462,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://github.com/prosemirror/prosemirror",{"_index":1611,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://github.com/sibiraj",{"_index":1488,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/docs/ref/#commands",{"_index":1449,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#history",{"_index":1434,"title":{},"body":{"additional-documentation/history.html":{}}}],["https://prosemirror.net/docs/ref/#inputrules",{"_index":1610,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://prosemirror.net/docs/ref/#keymap",{"_index":1435,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#schema",{"_index":1441,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/examples/codemirror",{"_index":1507,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/examples/footnote",{"_index":1268,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["https://prosemirror.net/examples/schema",{"_index":1479,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["https://sibiraj",{"_index":1282,"title":{},"body":{"index.html":{}}}],["https://sibiraj.dev/ngx",{"_index":1261,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["husky",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["i18nkey",{"_index":427,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":267,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":263,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["identifiers",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":455,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["implied",{"_index":1330,"title":{},"body":{"license.html":{}}}],["import",{"_index":38,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["imported",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["imports",{"_index":1255,"title":{},"body":{"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["imports/variables",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["improve",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["in6k",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1323,"title":{},"body":{"license.html":{}}}],["including",{"_index":1303,"title":{},"body":{"license.html":{}}}],["incomingchanges",{"_index":1522,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["incompatibility",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":709,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["infinity",{"_index":279,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{}}}],["inherit",{"_index":625,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["initialize",{"_index":1542,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["initialized",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":691,"title":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["injectables",{"_index":692,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"overview.html":{}}}],["injectiontoken",{"_index":683,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["injectiontoken('ngxeditorconfig",{"_index":687,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":600,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["inner",{"_index":1550,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["innerhtml",{"_index":268,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":786,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["inputrule",{"_index":1618,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputrules",{"_index":1613,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputs",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["insert/edit",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["inserted",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1247,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1246,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1531,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["instead",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":284,"title":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{}},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{}}}],["interfaces",{"_index":285,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"overview.html":{}}}],["internal",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["internet",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["intialization",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["introduced",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["invoked",{"_index":1472,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["isactive",{"_index":189,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isdropdownopen",{"_index":101,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["ish",{"_index":728,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["islastmenugroup",{"_index":245,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islastmenuitem",{"_index":249,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem",{"_index":55,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem(type",{"_index":218,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["ismarkactive",{"_index":54,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ismarkactive(state",{"_index":196,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{}}}],["isnodeactive",{"_index":53,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isnodeactive(state",{"_index":198,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["issues",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["italic",{"_index":431,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["italics",{"_index":433,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{}}}],["item",{"_index":313,"title":{},"body":{"classes/FloatingOptionsView.html":{},"components/NgxEditorComponent.html":{}}}],["item.attrs.href",{"_index":345,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["items",{"_index":581,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["itemtype",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itself",{"_index":1544,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ivy",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":531,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/html.html":{}}}],["jsondoc",{"_index":1430,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["justify",{"_index":583,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["karma",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":294,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["keymap",{"_index":820,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["keymap(basekeymap",{"_index":1456,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["keyof",{"_index":292,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{}}}],["kind",{"_index":1328,"title":{},"body":{"license.html":{}}}],["labels",{"_index":105,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["labels[menuitem.i18nkey",{"_index":270,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["labels[menuitem.key",{"_index":140,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["labels[this.dropdowngroup",{"_index":111,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["language",{"_index":1495,"title":{},"body":{"additional-documentation/schema.html":{}}}],["later",{"_index":1527,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["latest",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":230,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["legend",{"_index":651,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["level",{"_index":224,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["liability",{"_index":1343,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1340,"title":{},"body":{"license.html":{}}}],["license",{"_index":1284,"title":{"license.html":{}},"body":{"license.html":{}}}],["lift(state",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem",{"_index":1443,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["liftlistitem(itemtype)(state",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem(schema.nodes.list_item",{"_index":1447,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["lighten",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1304,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1331,"title":{},"body":{"license.html":{}}}],["linenumbers",{"_index":1535,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["lines",{"_index":732,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":342,"title":{},"body":{"classes/FloatingOptionsView.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["link.href",{"_index":344,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["link.innertext",{"_index":348,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["link.target",{"_index":346,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["link.title",{"_index":349,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["linkend",{"_index":386,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["linkitem",{"_index":381,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["linkmarks",{"_index":371,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["linkmarks.length",{"_index":377,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["linkplugin",{"_index":396,"title":{},"body":{"classes/FloatingOptionsView.html":{},"miscellaneous/functions.html":{}}}],["links",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["linkstart",{"_index":384,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["list",{"_index":114,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["list_item",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listgroup",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listitem",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lists",{"_index":773,"title":{},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["literal",{"_index":428,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":1548,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["mac/.test(navigator.platform",{"_index":1586,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["made",{"_index":1553,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["managers",{"_index":1249,"title":{},"body":{"index.html":{}}}],["manually",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":88,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":589,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["mark",{"_index":194,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["mark.type",{"_index":373,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["marks",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/schema.html":{}}}],["marktype",{"_index":45,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1629,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1",{"_index":1631,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1].length",{"_index":1654,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["matching",{"_index":282,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["math.max((start.left",{"_index":734,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":643,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["maximum",{"_index":1644,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maxlengthvalidator",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["maxlevel",{"_index":1651,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maybeescape(unit",{"_index":1599,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["menu",{"_index":414,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["menu_item_classname",{"_index":72,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menubar",{"_index":546,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["menubarview",{"_index":404,"title":{"classes/MenuBarView.html":{}},"body":{"classes/MenuBarView.html":{}}}],["menudom",{"_index":239,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(dom",{"_index":271,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(rendered.dom",{"_index":260,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(seperatordom",{"_index":276,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.classname",{"_index":419,"title":{},"body":{"classes/MenuBarView.html":{}}}],["menuindex",{"_index":248,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":137,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem.attrs",{"_index":199,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.attrs.level",{"_index":143,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.key",{"_index":141,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.type",{"_index":193,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemmeta",{"_index":67,"title":{"interfaces/MenuItemMeta.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta",{"_index":66,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemsmeta[dropdownitem",{"_index":138,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta[toolbaritem",{"_index":265,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview",{"_index":152,"title":{"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview(menuitem",{"_index":153,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview.render",{"_index":155,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemviewrender",{"_index":51,"title":{"interfaces/MenuItemViewRender.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{}}}],["menuitemviewspec",{"_index":48,"title":{"interfaces/MenuItemViewSpec.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/variables.html":{}}}],["menulabels",{"_index":295,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menuoptions",{"_index":21,"title":{"interfaces/MenuOptions.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/variables.html":{}}}],["menuplugin",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menuplugin(options",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1333,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1307,"title":{},"body":{"license.html":{}}}],["meta",{"_index":68,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["metadata",{"_index":459,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{}}}],["microsoft",{"_index":1274,"title":{},"body":{"index.html":{}}}],["migrate",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":597,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["minheight",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["minwidth",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["mirror",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1228,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatches",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1285,"title":{},"body":{"license.html":{}}}],["mod",{"_index":1439,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["mode",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":47,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/html.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["modify",{"_index":1306,"title":{},"body":{"license.html":{}}}],["module",{"_index":664,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["modules",{"_index":666,"title":{"modules.html":{}},"body":{"modules/NgxEditorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":681,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["more",{"_index":733,"title":{},"body":{"interfaces/TooltipPosition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mount",{"_index":1474,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["mousedownhandler",{"_index":117,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["mouseevent",{"_index":119,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["move",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["mozilla",{"_index":1276,"title":{},"body":{"index.html":{}}}],["multi",{"_index":467,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{}}}],["nature",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":813,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["nested",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":87,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/reactive-forms.html":{}}}],["newend",{"_index":1516,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval",{"_index":1512,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.charcodeat(newend",{"_index":1519,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.length",{"_index":1517,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.slice(start",{"_index":1520,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ng",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["ng_value_accessor",{"_index":464,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngmodel",{"_index":1034,"title":{"additional-documentation/ngmodel.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ngmodel.html":{}}}],["ngmodule",{"_index":682,"title":{},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngondestroy",{"_index":544,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngoninit",{"_index":542,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngx",{"_index":56,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngx_editor_config_token",{"_index":686,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor",{"_index":77,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__content",{"_index":541,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditor__dropdown",{"_index":80,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__floatingbubble",{"_index":331,"title":{},"body":{"classes/FloatingOptionsView.html":{},"components/NgxEditorComponent.html":{}}}],["ngxeditor__menubar",{"_index":420,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{}}}],["ngxeditor__menuitem",{"_index":73,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__placeholder",{"_index":627,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__seperator",{"_index":71,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorcomponent",{"_index":448,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngxeditorconfig",{"_index":659,"title":{"interfaces/NgxEditorConfig.html":{}},"body":{"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditormodule",{"_index":665,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngxeditormodule.forroot",{"_index":808,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngxeditorservice",{"_index":479,"title":{"injectables/NgxEditorService.html":{}},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["ngxeditorservice.config",{"_index":504,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditorserviceconfig",{"_index":498,"title":{"injectables/NgxEditorServiceConfig.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["node",{"_index":122,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["node.attrs.language",{"_index":1504,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.attrs.order",{"_index":1633,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["node.attrs.text",{"_index":1505,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.childcount",{"_index":1632,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["node.marks",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodes",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["nodespec",{"_index":1493,"title":{},"body":{"additional-documentation/schema.html":{}}}],["nodetype",{"_index":46,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["nodeview",{"_index":661,"title":{},"body":{"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["nodeviews",{"_index":535,"title":{"interfaces/NodeViews.html":{}},"body":{"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/inline-code-editor.html":{}}}],["none",{"_index":365,"title":{},"body":{"classes/FloatingOptionsView.html":{},"components/NgxEditorComponent.html":{}}}],["noninfringement",{"_index":1337,"title":{},"body":{"license.html":{}}}],["notable",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":1243,"title":{},"body":{"index.html":{}}}],["notes",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":1321,"title":{},"body":{"license.html":{}}}],["now",{"_index":1208,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":624,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["npm",{"_index":1251,"title":{},"body":{"index.html":{}}}],["null",{"_index":192,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["number",{"_index":244,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["obj[1",{"_index":210,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object",{"_index":252,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{}}}],["object.assign",{"_index":705,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["object.entries(attrs).length",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries(this.spec.attrs).foreach(obj",{"_index":208,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object.keys(toolbaritem).foreach((dropdowngroup",{"_index":253,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1295,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1568,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldend",{"_index":1514,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["older",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["oldval",{"_index":1513,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.charcodeat(oldend",{"_index":1518,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.length",{"_index":1515,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["once",{"_index":157,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["onchange",{"_index":500,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["onchange(doc",{"_index":1431,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["ondestroy",{"_index":458,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["one",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["oninit",{"_index":457,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["opacity",{"_index":592,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["open",{"_index":82,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opendropdown",{"_index":124,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opendropdown(e",{"_index":135,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opera",{"_index":1278,"title":{},"body":{"index.html":{}}}],["option",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options",{"_index":20,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options.labels",{"_index":266,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["options.toolbar",{"_index":241,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1630,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["ordered",{"_index":1266,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["ordered_list",{"_index":435,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["orderedlist",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderedlistrule(nodetype",{"_index":1627,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["otherwise",{"_index":333,"title":{},"body":{"classes/FloatingOptionsView.html":{},"license.html":{}}}],["out",{"_index":588,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":1538,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["outline",{"_index":650,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["overflow",{"_index":645,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["override",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1352,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":631,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["package",{"_index":844,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packager",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":561,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["page",{"_index":1030,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{}}}],["paragraph",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":724,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["parent.getboundingclientrect",{"_index":726,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["parsedoc(contentjson",{"_index":508,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["parsedom",{"_index":1497,"title":{},"body":{"additional-documentation/schema.html":{}}}],["parser",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1335,"title":{},"body":{"license.html":{}}}],["peer",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["peerdependencies",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["peerdependency",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1289,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1314,"title":{},"body":{"license.html":{}}}],["person",{"_index":1294,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1315,"title":{},"body":{"license.html":{}}}],["placeholder",{"_index":697,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["placeholder_classname",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placeholderplugin",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholderplugin(text",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placholder('type",{"_index":809,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["plain",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":323,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"classes/FloatingOptionsView.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plugin.html",{"_index":1265,"title":{},"body":{"index.html":{}}}],["pluginkey",{"_index":324,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["pluginkey('link",{"_index":397,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["plugins",{"_index":534,"title":{},"body":{"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plush",{"_index":1635,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["pointer",{"_index":594,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["popover",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1325,"title":{},"body":{"license.html":{}}}],["pos",{"_index":380,"title":{},"body":{"classes/FloatingOptionsView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["pos.line",{"_index":1603,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["pos.parent.child($pos.index()).nodesize",{"_index":387,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["pos.textoffset",{"_index":385,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["position",{"_index":393,"title":{},"body":{"classes/FloatingOptionsView.html":{},"components/NgxEditorComponent.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["positioned",{"_index":721,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["pre",{"_index":629,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/schema.html":{}}}],["prefix",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["prepublishonly",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["prerequisites",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":96,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{}}}],["project",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["propagate",{"_index":1556,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["propagated",{"_index":1554,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properly",{"_index":1541,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/TooltipPosition.html":{}}}],["property",{"_index":806,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["props",{"_index":400,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["prosemirror",{"_index":40,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["prosemirrornode",{"_index":497,"title":{},"body":{"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["provide",{"_index":463,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["provided",{"_index":1326,"title":{},"body":{"license.html":{},"additional-documentation/schema.html":{}}}],["providedin",{"_index":699,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["providemyserviceoptions",{"_index":685,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{}}}],["providemyserviceoptions(config",{"_index":704,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":462,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["public",{"_index":701,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["publish",{"_index":1308,"title":{},"body":{"license.html":{}}}],["publishes",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1336,"title":{},"body":{"license.html":{}}}],["px",{"_index":339,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["query",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["quote",{"_index":443,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["quotes",{"_index":1657,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["radius",{"_index":551,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rc.0",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["rc0",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":1607,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["reactive",{"_index":765,"title":{"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{},"additional-documentation/reactive-forms.html":{}}}],["reactiveformsmodule",{"_index":1668,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["readme",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["recompile",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["redo",{"_index":1437,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["redo(view.state",{"_index":1596,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["redundant",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["ref",{"_index":1487,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["refactored",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1433,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["reflects",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["regexp('^(#{1",{"_index":1653,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["registeronchange",{"_index":475,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registeronchange(fn",{"_index":482,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registerontouched",{"_index":476,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["relative",{"_index":574,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["release",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":156,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["removecb",{"_index":311,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["removed",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["removeopt",{"_index":356,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["removeopt.classlist.add('command",{"_index":357,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["removeopt.onclick",{"_index":359,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["removeopt.textcontent",{"_index":358,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["renamed",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":13,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["render(view",{"_index":317,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["rendered",{"_index":257,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu",{"_index":238,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu(this.options",{"_index":421,"title":{},"body":{"classes/MenuBarView.html":{}}}],["replaced",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["reposition",{"_index":334,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["representation",{"_index":1539,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["reset",{"_index":676,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["resizer",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["resolvedpos",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restore",{"_index":173,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["restriction",{"_index":1302,"title":{},"body":{"license.html":{}}}],["result",{"_index":281,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["results",{"_index":283,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["return",{"_index":128,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["returns",{"_index":35,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/input-rules.html":{}}}],["rewritten",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":572,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rgba(60",{"_index":612,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["right",{"_index":606,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["rights",{"_index":1305,"title":{},"body":{"license.html":{}}}],["root",{"_index":700,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"additional-documentation/reactive-forms.html":{}}}],["rule",{"_index":1620,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules",{"_index":791,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["rules.push(blockquoterule(schema.nodes.blockquote",{"_index":1661,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(bulletlistrule(schema.nodes.bullet_list",{"_index":1663,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(codeblockrule(schema.nodes.code_block",{"_index":1664,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(headingrule(schema.nodes.heading",{"_index":1665,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(orderedlistrule(schema.nodes.ordered_list",{"_index":1662,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rxjs",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1639,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["s.github.io/ngx",{"_index":1283,"title":{},"body":{"index.html":{}}}],["s/ngx",{"_index":1489,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["same",{"_index":517,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["satisfying",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1253,"title":{},"body":{"index.html":{}}}],["scheama",{"_index":1259,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["schedule",{"_index":1543,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schema",{"_index":185,"title":{"additional-documentation/schema.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["schema.marks.link",{"_index":368,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["schema.marks[menuitem.key",{"_index":195,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodefromjson(contentjson",{"_index":510,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["schema.nodefromjson(this.jsondoc",{"_index":1461,"title":{},"body":{"additional-documentation/html.html":{}}}],["schema.nodes.blockquote",{"_index":226,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.bullet_list",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.code_block",{"_index":1480,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["schema.nodes.heading",{"_index":221,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.list_item",{"_index":220,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["schema.nodes.ordered_list",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.paragraph",{"_index":223,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["schema.nodes[menuitem.key",{"_index":197,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes[this.menuitem.key",{"_index":217,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.text(change.text",{"_index":1584,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schemabasic.marks",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemabasic.nodes",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.bulletlist",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.listitem",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.orderedlist",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":714,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1260,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["selected",{"_index":85,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_dropdown_item_classname",{"_index":84,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":366,"title":{},"body":{"classes/FloatingOptionsView.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["selection.eq(state.selection",{"_index":1565,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selector",{"_index":468,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["self",{"_index":579,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["sell",{"_index":1312,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["seperator_classname",{"_index":70,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["seperatordom",{"_index":275,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":770,"title":{},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["setblocktype(toggletype)(state",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setblocktype(type",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setdomposition",{"_index":306,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["setdomposition(view",{"_index":319,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["setselection(anchor",{"_index":1572,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["settimeout",{"_index":1545,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["setting",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["setup",{"_index":1612,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["setupcommandlisteners",{"_index":214,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["shadow",{"_index":611,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["shall",{"_index":1322,"title":{},"body":{"license.html":{}}}],["shift",{"_index":1440,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["shortcuts",{"_index":812,"title":{"additional-documentation/shortcuts.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["show",{"_index":375,"title":{},"body":{"classes/FloatingOptionsView.html":{},"changelog.html":{}}}],["sibiraj",{"_index":1288,"title":{},"body":{"license.html":{}}}],["signs",{"_index":1649,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["silver",{"_index":636,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["simple",{"_index":1242,"title":{},"body":{"index.html":{}}}],["sinklistitem",{"_index":1444,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["sinklistitem(schema.nodes.list_item",{"_index":1448,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["size",{"_index":549,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["smartquotes",{"_index":1616,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["smartquotes.concat(ellipsis",{"_index":1660,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["software",{"_index":1297,"title":{},"body":{"license.html":{}}}],["solid",{"_index":571,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["something",{"_index":810,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"additional-documentation/input-rules.html":{}}}],["space",{"_index":623,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/input-rules.html":{}}}],["spacing",{"_index":563,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["spec",{"_index":144,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["spellcheck",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["splitlistitem",{"_index":1442,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["splitlistitem(schema.nodes.list_item",{"_index":1446,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["src/.../bubbleposition.ts",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../flatdeep.ts",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../getselectionmarks.ts",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1230,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../islistitem.ts",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ismarkactive.ts",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isnodeactive.ts",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../link.ts",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../menu.ts",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meta.ts",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngx",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../placeholder.ts",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../schema.ts",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../toggleblocktype.ts",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglelist.ts",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglewrap.ts",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1356,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/commands/toggleblocktype.ts",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/commands/togglelist.ts",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/commands/togglewrap.ts",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/helpers/bubbleposition.ts",{"_index":712,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["src/helpers/getselectionmarks.ts",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/helpers/islistitem.ts",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/helpers/ismarkactive.ts",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/helpers/isnodeactive.ts",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/ngx",{"_index":453,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/schema.ts",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/types.ts",{"_index":660,"title":{},"body":{"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["src/lib/types.ts:5",{"_index":710,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["src/plugins/link.ts",{"_index":300,"title":{},"body":{"classes/FloatingOptionsView.html":{},"miscellaneous/functions.html":{}}}],["src/plugins/link.ts:114",{"_index":315,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["src/plugins/link.ts:16",{"_index":318,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["src/plugins/link.ts:22",{"_index":320,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["src/plugins/link.ts:31",{"_index":312,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["src/plugins/link.ts:62",{"_index":309,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["src/plugins/link.ts:66",{"_index":316,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["src/plugins/link.ts:70",{"_index":322,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["src/plugins/link.ts:9",{"_index":308,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["src/plugins/menu/index.ts",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/menu/menu.ts",{"_index":6,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/menu/menu.ts:168",{"_index":36,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/plugins/menu/menu.ts:183",{"_index":444,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/plugins/menu/menu.ts:191",{"_index":446,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/plugins/menu/menu.ts:224",{"_index":445,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/plugins/menu/menu.ts:45",{"_index":31,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/plugins/menu/menu.ts:47",{"_index":23,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/plugins/menu/menu.ts:61",{"_index":34,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/plugins/menu/menubarview.ts",{"_index":405,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/plugins/menu/menubarview.ts:10",{"_index":411,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/plugins/menu/menubarview.ts:12",{"_index":409,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/plugins/menu/menubarview.ts:14",{"_index":408,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/plugins/menu/menubarview.ts:25",{"_index":412,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/plugins/menu/menubarview.ts:35",{"_index":413,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/plugins/menu/menubarview.ts:9",{"_index":410,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/plugins/menu/meta.ts",{"_index":426,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/placeholder.ts",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/plugins/types.ts",{"_index":286,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/typealiases.html":{}}}],["src/plugins/utils/flatdeep.ts",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/plugins/utils/icons/index.ts",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ssuperczynski",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["stackblitz",{"_index":1279,"title":{},"body":{"index.html":{}}}],["start",{"_index":716,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["start.left",{"_index":736,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["start.top",{"_index":739,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":741,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":1640,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["state",{"_index":44,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["state.doc.content.size",{"_index":521,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.eq(doc",{"_index":518,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.nodesbetween(from",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.doc.rangehasmark(from",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.doc.tojson",{"_index":532,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.selection",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.tr",{"_index":519,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["static",{"_index":491,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["store",{"_index":1526,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["string",{"_index":264,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["strong",{"_index":430,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{}}}],["style",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":451,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":470,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["subject",{"_index":1317,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1310,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["subscription",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["substantial",{"_index":1324,"title":{},"body":{"license.html":{}}}],["such",{"_index":1250,"title":{},"body":{"index.html":{}}}],["support",{"_index":778,"title":{},"body":{"changelog.html":{},"modules.html":{},"additional-documentation/history.html":{}}}],["supported",{"_index":1080,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["svg",{"_index":590,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"modules.html":{}}}],["switching",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["tab",{"_index":946,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["tables",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["tabs",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":1148,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["tags",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":125,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["tcr",{"_index":289,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":450,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["templateurl",{"_index":472,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["text",{"_index":139,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["text/javascript",{"_index":1496,"title":{},"body":{"additional-documentation/schema.html":{}}}],["text/plain",{"_index":1501,"title":{},"body":{"additional-documentation/schema.html":{}}}],["textarea",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["textblock",{"_index":1622,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule",{"_index":1615,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule(new",{"_index":1652,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textcontent",{"_index":147,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{}}}],["textselection",{"_index":1509,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["textselection.create(doc",{"_index":1571,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["thanks",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["this.asprosemirrorselection(state.doc",{"_index":1564,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.bubbleel",{"_index":329,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.bubbleel.appendchild(el",{"_index":392,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.bubbleel.classname",{"_index":330,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.bubbleel.remove",{"_index":395,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.bubbleel.style.bottom",{"_index":340,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.bubbleel.style.display",{"_index":335,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.bubbleel.style.left",{"_index":338,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.bubbleel.textcontent",{"_index":364,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.clearbubblecontent",{"_index":382,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.cm",{"_index":1532,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.focus",{"_index":1573,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getcursor",{"_index":1601,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getvalue",{"_index":1579,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getwrapperelement",{"_index":1540,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.hasfocus",{"_index":1563,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('anchor",{"_index":1569,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('head",{"_index":1570,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('beforechange",{"_index":1555,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('changes",{"_index":1559,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('cursoractivity",{"_index":1557,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('focus",{"_index":1561,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.posfromindex(head",{"_index":1575,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.refresh",{"_index":1546,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.setselection(this.cm.posfromindex(anchor",{"_index":1574,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.somethingselected",{"_index":1602,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.codemirrorkeymap",{"_index":1537,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.config",{"_index":503,"title":{},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["this.createeditor",{"_index":543,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.createlinknode(linkitem",{"_index":391,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.dom",{"_index":178,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.dom.addeventlistener('mousedown",{"_index":228,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields",{"_index":98,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields.foreach(dropdownitem",{"_index":136,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdowngroup",{"_index":97,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorinitialized",{"_index":505,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.editorview",{"_index":99,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.dispatch",{"_index":234,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.state",{"_index":186,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.form.valuechanges.subscribe((val",{"_index":1677,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["this.forwardselection",{"_index":1558,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getdom",{"_index":184,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.getpos",{"_index":1529,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getwrapperdom",{"_index":179,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.handletransactions.bind(this",{"_index":539,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.hidebubble",{"_index":378,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.incomingchanges",{"_index":1530,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.jsondoc",{"_index":1432,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/html.html":{}}}],["this.maybeescape('char",{"_index":1592,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.maybeescape('line",{"_index":1591,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.menuitem",{"_index":182,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.attrs.level",{"_index":225,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.type",{"_index":215,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.node",{"_index":1528,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.node.textcontent",{"_index":1534,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.onchange",{"_index":507,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.onchange(json",{"_index":533,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.options",{"_index":100,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}}}],["this.options.labels",{"_index":106,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.parsedoc(value",{"_index":513,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.render",{"_index":417,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.render(view",{"_index":327,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.setdomposition(view",{"_index":394,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.setupcommandlisteners",{"_index":187,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec",{"_index":183,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.attrs",{"_index":207,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames",{"_index":204,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames.foreach(classname",{"_index":205,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.innerhtml",{"_index":211,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.textcontent",{"_index":213,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.update",{"_index":418,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.update(view",{"_index":328,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["this.updatecontent(value",{"_index":506,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.updatemenuitems",{"_index":422,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatemenuitems(this.view.state",{"_index":425,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updates",{"_index":180,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updates.push(dropupdate",{"_index":176,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updating",{"_index":1551,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.valuechanged",{"_index":1560,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view",{"_index":416,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.destroy",{"_index":545,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.dispatch(state.tr.setselection(selection",{"_index":1566,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.dispatch(tr",{"_index":522,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.dom",{"_index":424,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.dom.parentnode.insertbefore(menudom",{"_index":423,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.state",{"_index":514,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.state.applytransaction(tr",{"_index":528,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.state.tr.replacewith",{"_index":1580,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.updatestate(state",{"_index":529,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["three",{"_index":1641,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["title",{"_index":149,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["todom(node",{"_index":1502,"title":{},"body":{"additional-documentation/schema.html":{}}}],["toggle",{"_index":1453,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["toggleblocktype",{"_index":59,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["toggleblocktype(type",{"_index":222,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["togglelist",{"_index":58,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglelist(type",{"_index":219,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["togglemark",{"_index":39,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.code",{"_index":1455,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.em",{"_index":1454,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.strong",{"_index":1452,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks[this.menuitem.key",{"_index":216,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toggletype",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglewrap",{"_index":60,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglewrap(type",{"_index":227,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toolbar",{"_index":240,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbar.foreach((group",{"_index":242,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbar.length",{"_index":246,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbarcustommenuitem",{"_index":291,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbardropdown",{"_index":290,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/typealiases.html":{}}}],["toolbardropdown[toolbardropdowngroupkeys",{"_index":293,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{}}}],["toolbardropdowngroupkeys",{"_index":16,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbardropdowngroupvalues",{"_index":18,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbarindex",{"_index":243,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem",{"_index":49,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem(editorview",{"_index":274,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem[dropdowngroup",{"_index":255,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["tooltip",{"_index":720,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["tooltipel",{"_index":713,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["tooltipel.offsetparent",{"_index":725,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition",{"_index":711,"title":{"interfaces/TooltipPosition.html":{}},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":605,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tort",{"_index":1347,"title":{},"body":{"license.html":{}}}],["tr",{"_index":297,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["tr.docchanged",{"_index":530,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tr.removemark(linkstart",{"_index":388,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["tr.replacewith(0",{"_index":520,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["track",{"_index":1552,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["transaction",{"_index":288,"title":{},"body":{"interfaces/DropdownViewRender.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["transcation",{"_index":1473,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["transform",{"_index":637,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/input-rules.html":{}}}],["transition",{"_index":585,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["translate",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["translatex",{"_index":638,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["transparent",{"_index":607,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["travis",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":452,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["true",{"_index":130,"title":{},"body":{"classes/DropDownView.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{}}}],["try",{"_index":512,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tslib",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":1621,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["tweaks",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["twice",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/TooltipPosition.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["type.isinset(state.storedmarks",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1354,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1608,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["typeof",{"_index":251,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":52,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{}}}],["typo",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["udpate",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["unclear",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":1187,"title":{},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{}}}],["underline",{"_index":649,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["undo",{"_index":1436,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["undo(view.state",{"_index":1594,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["unique",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["units",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["unlink",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["unwanted",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1590,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["upcoming",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":154,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["update(state",{"_index":164,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["update(view",{"_index":321,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["updatecontent(value",{"_index":511,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["updated",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["updatemenuitems",{"_index":406,"title":{},"body":{"classes/MenuBarView.html":{}}}],["updates",{"_index":10,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["updates.push(rendered.updates",{"_index":259,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updates.push(update",{"_index":272,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":1524,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["upgrade",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["urls",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["us/docs/web/api/documentfragment",{"_index":1463,"title":{},"body":{"additional-documentation/html.html":{}}}],["usage",{"_index":788,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["use",{"_index":722,"title":{},"body":{"interfaces/TooltipPosition.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":935,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["useexisting",{"_index":465,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["usefactory",{"_index":689,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["user",{"_index":1609,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["usevalue",{"_index":688,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["using",{"_index":816,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/schema.html":{}}}],["utils",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["utils/flatdeep",{"_index":65,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["utils/icons",{"_index":63,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["v1.0.0",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["v1.1.1",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["v1.1.2",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["v1.1.5",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["v1.5.3",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["v1.5.4",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["v1.5.5",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["v1.6.5",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["v4.4.4",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["v5.34.0",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/reactive-forms.html":{}}}],["validation",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["valuechanged",{"_index":1576,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["values",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["var",{"_index":655,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["variables",{"_index":1357,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":603,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["via",{"_index":1248,"title":{},"body":{"index.html":{}}}],["video",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":42,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"interfaces/TooltipPosition.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["view(editorview",{"_index":398,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["view.coordsatpos(from",{"_index":717,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["view.coordsatpos(to",{"_index":719,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["view.dispatch",{"_index":1595,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view.dispatch(view.state.tr.setmeta('link_plugin_editor_blur",{"_index":403,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["view.dom.parentnode.appendchild(this.bubbleel",{"_index":332,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["view.focus",{"_index":390,"title":{},"body":{"classes/FloatingOptionsView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["view.hasfocus",{"_index":370,"title":{},"body":{"classes/FloatingOptionsView.html":{}}}],["view/edit",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":493,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewchild('ngxeditor",{"_index":490,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewed",{"_index":1281,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":494,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewencapsulation.none",{"_index":461,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["void",{"_index":188,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/DropdownViewRender.html":{},"classes/FloatingOptionsView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewRender.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["volodymyro",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["vulnerabilities",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["vulnerability",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1332,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1327,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1344,"title":{},"body":{"license.html":{},"additional-documentation/inline-code-editor.html":{}}}],["white",{"_index":567,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["whose",{"_index":1647,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["width",{"_index":584,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["wiki",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["window.addeventlistener('mousedown",{"_index":131,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["window.removeeventlistener('mousedown",{"_index":133,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["without",{"_index":1301,"title":{},"body":{"license.html":{}}}],["work",{"_index":1257,"title":{},"body":{"index.html":{}}}],["working",{"_index":1457,"title":{},"body":{"additional-documentation/html.html":{}}}],["wrap",{"_index":630,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wrapin(type)(state",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapinlist(type)(state",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapper",{"_index":160,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["wrappinginputrule",{"_index":1614,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s",{"_index":1638,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s*>\\s",{"_index":1624,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["writevalue",{"_index":477,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["writevalue(value",{"_index":486,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wysiwyg",{"_index":1212,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["x",{"_index":729,"title":{},"body":{"interfaces/TooltipPosition.html":{},"miscellaneous/variables.html":{}}}],["x1f37b",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["x1f389",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["xml",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["y",{"_index":1597,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["yarn",{"_index":1252,"title":{},"body":{"index.html":{}}}],["yes",{"_index":696,"title":{},"body":{"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":618,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["zero",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":675,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DropDownView.html":{"url":"classes/DropDownView.html","title":"class - DropDownView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropDownView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWrapperDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dropdownGroup: ToolbarDropdownGroupKeys, dropdownFields: ToolbarDropdownGroupValues, editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/plugins/menu/menu.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dropdownGroup\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupKeys\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropdownFields\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupValues\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/plugins/menu/menu.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/plugins/menu/menu.ts:47\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWrapperDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetWrapperDom()\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/menu/menu.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/menu/menu.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DropdownViewRender\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command,\n  DropdownViewRender,\n  MenuItemViewRender\n} from '../types';\n\nimport { isNodeActive, isMarkActive, isListItem } from 'ngx-editor/helpers';\nimport { toggleList, toggleBlockType, toggleWrap } from 'ngx-editor/commands';\n\nimport { getIconSvg } from '../utils/icons';\nimport flatDeep from '../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render(): DropdownViewRender {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render(): MenuItemViewRender {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners(): { command: Command } {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n\n      if (type === schema.nodes.blockquote) {\n        command = toggleWrap(type);\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState): void {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropdownViewRender.html":{"url":"interfaces/DropdownViewRender.html","title":"interface - DropdownViewRender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropdownViewRender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dom\n                                \n                                \n                                        updates\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dom\n                                    \n                                \n                                \n                                    \n                                        dom:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updates\n                                    \n                                \n                                \n                                    \n                                        updates:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EditorState, Transaction } from 'prosemirror-state';\nimport { Schema } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FloatingOptionsView.html":{"url":"classes/FloatingOptionsView.html","title":"class - FloatingOptionsView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FloatingOptionsView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/link.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bubbleEL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearBubbleContent\n                            \n                            \n                                createLinkNode\n                            \n                            \n                                destroy\n                            \n                            \n                                hideBubble\n                            \n                            \n                                render\n                            \n                            \n                                setDomPosition\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: EditorView)\n                    \n                \n                        \n                            \n                                Defined in src/plugins/link.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bubbleEL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/plugins/link.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearBubbleContent\n                        \n                        \n                    \n                \n            \n            \n                \nclearBubbleContent()\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/link.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createLinkNode\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLinkNode(item: Mark, removeCB: (e: MouseEvent) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/link.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            Mark\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    removeCB\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DocumentFragment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/link.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideBubble\n                        \n                        \n                    \n                \n            \n            \n                \nhideBubble()\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/link.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender(view: EditorView)\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/link.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                            EditorView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDomPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsetDomPosition(view: EditorView)\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/link.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                            EditorView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(view: EditorView)\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/link.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                            EditorView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EditorView } from 'prosemirror-view';\nimport { Plugin, PluginKey } from 'prosemirror-state';\nimport { Mark } from 'prosemirror-model';\n\nimport { calculateBubblePos } from 'ngx-editor/helpers';\nimport { isMarkActive, getSelectionMarks } from 'ngx-editor/helpers';\n\nclass FloatingOptionsView {\n  bubbleEL: HTMLElement;\n\n  constructor(view: EditorView) {\n    this.render(view);\n    this.update(view);\n  }\n\n  render(view: EditorView): void {\n    this.bubbleEL = document.createElement('div');\n    this.bubbleEL.className = 'NgxEditor__FloatingBubble';\n    view.dom.parentNode.appendChild(this.bubbleEL);\n  }\n\n  setDomPosition(view: EditorView): void {\n    // Otherwise, reposition it and update its content\n    this.bubbleEL.style.display = '';\n\n    const { bottom, left } = calculateBubblePos(view, this.bubbleEL);\n    this.bubbleEL.style.left = left + 'px';\n    this.bubbleEL.style.bottom = bottom + 'px';\n  }\n\n  createLinkNode(item: Mark, removeCB: (e: MouseEvent) => void): DocumentFragment {\n    const el = document.createDocumentFragment();\n\n    const link = document.createElement('a');\n    link.href = item.attrs.href;\n    link.target = '_blank';\n    link.innerText = item.attrs.href;\n    link.title = item.attrs.href;\n\n    const commands = document.createElement('div');\n    commands.classList.add('commands');\n\n    const editOpt = document.createElement('button');\n    editOpt.classList.add('command');\n    editOpt.textContent = 'Edit';\n\n    const removeOpt = document.createElement('button');\n    removeOpt.classList.add('command');\n    removeOpt.textContent = 'Remove';\n\n    removeOpt.onclick = removeCB;\n\n    // commands.appendChild(editOpt);\n    commands.appendChild(removeOpt);\n\n    el.appendChild(link);\n    el.appendChild(commands);\n\n    return el;\n  }\n\n  clearBubbleContent(): void {\n    this.bubbleEL.textContent = '';\n  }\n\n  hideBubble(): void {\n    this.bubbleEL.style.display = 'none';\n  }\n\n  update(view: EditorView): void {\n    const { state, dispatch } = view;\n    const { selection, schema, doc, tr } = state;\n\n    if (!schema.marks.link) {\n      return;\n    }\n\n    const hasFocus = view.hasFocus();\n    const isActive = isMarkActive(state, schema.marks.link);\n    const linkMarks: Mark[] = getSelectionMarks(state).filter(mark => mark.type === schema.marks.link);\n\n\n    // hide for selection and show only for clicks\n    if (!isActive || linkMarks.length !== 1 || !hasFocus) {\n      this.hideBubble();\n      return;\n    }\n\n    const { $head: { pos } } = selection;\n    const [linkItem] = linkMarks;\n\n    this.clearBubbleContent();\n\n    const removeCB = (e: MouseEvent) => {\n      e.preventDefault();\n\n      const $pos = doc.resolve(pos);\n      const linkStart = pos - $pos.textOffset;\n      const linkEnd = linkStart + $pos.parent.child($pos.index()).nodeSize;\n\n      tr.removeMark(linkStart, linkEnd);\n\n      dispatch(tr);\n      view.focus();\n    };\n\n    const el = this.createLinkNode(linkItem, removeCB);\n    this.bubbleEL.appendChild(el);\n\n    // update dom position\n    this.setDomPosition(view);\n  }\n\n  destroy(): void {\n    this.bubbleEL.remove();\n  }\n}\n\nfunction linkPlugin(): Plugin {\n  return new Plugin({\n    key: new PluginKey('link'),\n    view(editorView: EditorView): FloatingOptionsView {\n      return new FloatingOptionsView(editorView);\n    },\n    props: {\n      handleDOMEvents: {\n        blur(view): boolean {\n          view.dispatch(view.state.tr.setMeta('LINK_PLUGIN_EDITOR_BLUR', true));\n          return false;\n        }\n      }\n    }\n  });\n}\n\nexport default linkPlugin;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBarView.html":{"url":"classes/MenuBarView.html","title":"class - MenuBarView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBarView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/menu/MenuBarView.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                options\n                            \n                            \n                                updateMenuItems\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/plugins/menu/MenuBarView.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/plugins/menu/MenuBarView.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMenuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditorView\n\n                        \n                    \n                        \n                            \n                                    Defined in src/plugins/menu/MenuBarView.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/menu/MenuBarView.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/menu/MenuBarView.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nimport { MenuOptions } from '../types';\n\nimport { renderMenu } from './menu';\n\nclass MenuBarView {\n  options: MenuOptions;\n  view: EditorView;\n\n  dom: HTMLElement;\n\n  updateMenuItems: (state: EditorState) => void;\n\n  constructor(editorView: EditorView, options: MenuOptions) {\n    // const menu = getMenu(toolbar);\n    this.view = editorView;\n    this.options = options;\n\n    this.render();\n    this.update();\n  }\n\n  render(): void {\n    const menuDom = document.createElement('div');\n    menuDom.className = 'NgxEditor__MenuBar';\n\n    const { update } = renderMenu(this.options, this.view, menuDom);\n    this.updateMenuItems = update;\n\n    this.view.dom.parentNode.insertBefore(menuDom, this.view.dom);\n  }\n\n  update(): void {\n    this.updateMenuItems(this.view.state);\n  }\n}\n\nexport default MenuBarView;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemMeta.html":{"url":"interfaces/MenuItemMeta.html","title":"interface - MenuItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/menu/meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                        i18nKey\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        key\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nKey\n                                    \n                                \n                                \n                                    \n                                        i18nKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"mark\" | \"node\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mark\" | \"node\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItemMeta {\n  key: string;\n  i18nKey: string;\n  icon?: string;\n  type: 'mark' | 'node';\n  attrs?: {\n    level?: number\n  };\n}\n\nconst menuItemsMeta: { [key: string]: MenuItemMeta } = {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  },\n  blockquote: {\n    key: 'blockquote',\n    i18nKey: 'blockquote',\n    icon: 'quote',\n    type: 'node'\n  }\n};\n\nexport default menuItemsMeta;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItemView.html":{"url":"classes/MenuItemView.html","title":"class - MenuItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec)\n                    \n                \n                        \n                            \n                                Defined in src/plugins/menu/menu.ts:183\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuItem\n                                                  \n                                                        \n                                                                        MenuItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        MenuItemViewSpec\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/plugins/menu/menu.ts:183\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetDom()\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/menu/menu.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/plugins/menu/menu.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MenuItemViewRender\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command,\n  DropdownViewRender,\n  MenuItemViewRender\n} from '../types';\n\nimport { isNodeActive, isMarkActive, isListItem } from 'ngx-editor/helpers';\nimport { toggleList, toggleBlockType, toggleWrap } from 'ngx-editor/commands';\n\nimport { getIconSvg } from '../utils/icons';\nimport flatDeep from '../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render(): DropdownViewRender {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render(): MenuItemViewRender {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners(): { command: Command } {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n\n      if (type === schema.nodes.blockquote) {\n        command = toggleWrap(type);\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState): void {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemViewRender.html":{"url":"interfaces/MenuItemViewRender.html","title":"interface - MenuItemViewRender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemViewRender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dom\n                                \n                                \n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dom\n                                    \n                                \n                                \n                                    \n                                        dom:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EditorState, Transaction } from 'prosemirror-state';\nimport { Schema } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemViewSpec.html":{"url":"interfaces/MenuItemViewSpec.html","title":"interface - MenuItemViewSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemViewSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeClass\n                                \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                            Optional\n                                        classNames\n                                \n                                \n                                        disabledClass\n                                \n                                \n                                            Optional\n                                        innerHTML\n                                \n                                \n                                            Optional\n                                        textContent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeClass\n                                    \n                                \n                                \n                                    \n                                        activeClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledClass\n                                    \n                                \n                                \n                                    \n                                        disabledClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        innerHTML\n                                    \n                                \n                                \n                                    \n                                        innerHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textContent\n                                    \n                                \n                                \n                                    \n                                        textContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EditorState, Transaction } from 'prosemirror-state';\nimport { Schema } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuOptions.html":{"url":"interfaces/MenuOptions.html","title":"interface - MenuOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/plugins/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                                \n                                            Optional\n                                        toolbar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:         MenuLabels\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuLabels\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolbar\n                                    \n                                \n                                \n                                    \n                                        toolbar:         Toolbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Toolbar\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EditorState, Transaction } from 'prosemirror-state';\nimport { Schema } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\nexport interface DropdownViewRender {\n  dom: HTMLElement;\n  updates: Array void>;\n}\n\nexport interface MenuItemViewRender {\n  dom: HTMLElement;\n  update: (state: EditorState) => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorComponent.html":{"url":"components/NgxEditorComponent.html","title":"component - NgxEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ngx-editor\n            \n\n            \n                styleUrls\n                ngx-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ngxEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEditor\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxEditorService: NgxEditorService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxEditorService\n                                                  \n                                                        \n                                                                        NgxEditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: object | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            object | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditor', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, ViewEncapsulation, OnInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\n\nimport { NgxEditorService, NgxEditorServiceConfig } from './ngx-editor.service';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: 'ngx-editor.component.html',\n  styleUrls: ['ngx-editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  @ViewChild('ngxEditor', { static: true }) ngxEditor: ElementRef;\n\n  private view: EditorView;\n  private onChange: (value: object) => void;\n\n  private config: NgxEditorServiceConfig;\n\n  private editorInitialized = false;\n\n  constructor(ngxEditorService: NgxEditorService) {\n    this.config = ngxEditorService.config;\n  }\n\n  writeValue(value: object | null): void {\n    if (!this.editorInitialized) {\n      return;\n    }\n\n    this.updateContent(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(): void { }\n\n  private parseDoc(contentJson: object): ProsemirrorNode {\n    if (!contentJson) {\n      return null;\n    }\n\n    const { schema } = this.config;\n    return schema.nodeFromJSON(contentJson);\n  }\n\n  private updateContent(value: object): void {\n    try {\n      const doc = this.parseDoc(value);\n      const state = this.view.state;\n\n      // don't emit if both content is same\n      if (doc !== null && state.doc.eq(doc)) {\n        return;\n      }\n\n      const tr = state.tr;\n      tr.replaceWith(0, state.doc.content.size, doc);\n      this.view.dispatch(tr);\n    } catch (err) {\n      console.error('Unable to update document.', err);\n    }\n  }\n\n  private handleTransactions(tr: Transaction): void {\n    const { state } = this.view.state.applyTransaction(tr);\n\n    this.view.updateState(state);\n\n    if (tr.docChanged && this.onChange) {\n      const json = state.doc.toJSON();\n      this.onChange(json);\n    }\n  }\n\n  createEditor(): void {\n    const { schema, plugins, nodeViews } = this.config;\n\n    this.view = new EditorView(this.ngxEditor.nativeElement, {\n      state: EditorState.create({\n        schema,\n        plugins\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes: {\n        class: 'NgxEditor__Content'\n      },\n    });\n\n    this.editorInitialized = true;\n  }\n\n  ngOnInit(): void {\n    this.createEditor();\n  }\n\n  ngOnDestroy(): void {\n    this.view.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ngx-editor.component.scss\n                \n                $menubar-height: 1.85rem;\n$icon-size: 1.85rem;\n\n$border-radius: 4px;\n\n$menubar-border-color: #ddd;\n\n$menu-item-border-radius: 2px;\n$menu-item-hover-bg-color: #f1f1f1;\n$menu-item-active-bg-color: #e8f0fe;\n$menu-item-active-color: #1a73e8;\n\n$dropdown-menu-hover-bg-color: #f1f1f1;\n$dropdown-item-active-bg-color: #f1f1f1;\n\n$menubar-padding: 0.2rem;\n$menu-item-spacing: 0.3rem;\n$menubar-text-padding: 0 $menu-item-spacing;\n\n.NgxEditor {\n  background: white;\n  color: black;\n  background-clip: padding-box;\n  border-radius: $border-radius;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  position: relative;\n}\n\n.NgxEditor__MenuBar {\n  display: flex;\n  padding: $menubar-padding;\n  border-bottom: 1px solid $menubar-border-color;\n  cursor: default;\n  height: $menubar-height;\n}\n\n.NgxEditor__MenuItem {\n  $self: &;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: $menu-item-hover-bg-color;\n  }\n\n  &#{ $self }--Icon {\n    height: $icon-size;\n    width: $icon-size;\n    transition: 0.3s ease-in-out;\n\n    & + #{ $self }--Icon {\n      margin-left: 2px;\n    }\n  }\n\n  &#{ $self }--Text {\n    padding: $menubar-text-padding;\n  }\n\n  &#{ $self }--Active {\n    background-color: $menu-item-active-bg-color;\n    color: $menu-item-active-color;\n\n    svg {\n      fill: $menu-item-active-color;\n    }\n  }\n}\n\n.NgxEditor--Disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.NgxEditor__Seperator {\n  border-left: 1px solid #ccc;\n  margin: 0 $menu-item-spacing;\n}\n\n.NgxEditor__Dropdown {\n  $self: &;\n  min-width: 4rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: $dropdown-menu-hover-bg-color;\n  }\n\n  #{ $self }__Text {\n    display: flex;\n    align-items: center;\n    padding: $menubar-text-padding;\n\n    &::after {\n      display: inline-block;\n      content: \"\";\n      margin-left: 1.5rem;\n      vertical-align: 0.25rem;\n      border-top: 0.25rem solid;\n      border-right: 0.25rem solid transparent;\n      border-bottom: 0;\n      border-left: 0.25rem solid transparent;\n    }\n  }\n\n  #{ $self }__DropdownMenu {\n    position: absolute;\n    left: 0;\n    top: calc(#{$menubar-height} + 2px);\n    box-shadow: rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    border-radius: $border-radius;\n    background-color: white;\n    display: none;\n    z-index: 10;\n    width: 100%;\n  }\n\n  #{ $self }__Item {\n    padding: 0.5rem;\n    white-space: nowrap;\n    color: inherit;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 2%);\n    }\n  }\n\n  &#{ $self }--Selected,\n  &#{ $self }--Open {\n    background-color: $menu-item-active-bg-color;\n\n    #{ $self }__Text {\n      color: $menu-item-active-color;\n    }\n  }\n\n  #{ $self }--Active {\n    background-color: $dropdown-item-active-bg-color;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 4%);\n    }\n  }\n\n  &#{ $self }--Open {\n    #{ $self }__DropdownMenu {\n      display: block;\n    }\n  }\n}\n\n.NgxEditor__Placeholder {\n  color: #6c757d;\n  opacity: 1;\n}\n\n.NgxEditor__Content {\n  padding: 0.5rem;\n  white-space: pre-wrap;\n\n  p {\n    margin: 0;\n    margin-bottom: 0.7rem;\n  }\n\n  blockquote {\n    padding-left: 1rem;\n    border-left: 3px solid #ddd;\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n\n.NgxEditor__FloatingBubble {\n  position: absolute;\n  z-index: 20;\n  background: white;\n  border: 1px solid silver;\n  border-radius: 4px;\n  padding: 0.3rem;\n  margin-bottom: 0.3rem;\n  transform: translateX(-50%);\n  display: flex;\n\n  &::before,\n  &::after {\n    content: \"\";\n    height: 0;\n    width: 0;\n    position: absolute;\n    left: 50%;\n    margin-left: -5px;\n    border: 5px solid transparent;\n    border-bottom-width: 0;\n  }\n\n  &::before {\n    bottom: -6px;\n    border-top-color: silver;\n  }\n\n  &::after {\n    bottom: -4.5px;\n    border-top-color: white;\n  }\n\n  a {\n    display: inline-block;\n    max-width: 15rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-left: 2px;\n  }\n\n  .commands {\n    display: flex;\n    margin-left: 0.5rem;\n\n    .command {\n      border: none;\n\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n}\n\n// prosemirror\n.ProseMirror {\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxEditorComponent', 'selector': 'ngx-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorConfig.html":{"url":"interfaces/NgxEditorConfig.html","title":"interface - NgxEditorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nodeViews\n                                \n                                \n                                            Optional\n                                        plugins\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodeViews\n                                    \n                                \n                                \n                                    \n                                        nodeViews:         NodeViews\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeViews\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorModule.html":{"url":"modules/NgxEditorModule.html","title":"module - NgxEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxEditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgxEditorComponent } from './ngx-editor.component';\n\nimport { NgxEditorServiceConfig, provideMyServiceOptions } from './ngx-editor.service';\nimport { NgxEditorConfig } from './types';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\n\n@NgModule({\n  declarations: [NgxEditorComponent],\n  exports: [NgxEditorComponent],\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorService.html":{"url":"injectables/NgxEditorService.html","title":"injectable - NgxEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgxEditorServiceConfig)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorServiceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport { menu, placeholder } from 'ngx-editor/plugins';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorServiceConfig.html":{"url":"injectables/NgxEditorServiceConfig.html","title":"injectable - NgxEditorServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nodeViews\n                            \n                            \n                                    Public\n                                plugins\n                            \n                            \n                                    Public\n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeViews\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Plugin[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    menu(),\n    placeholder()\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Schema\n\n                        \n                    \n                    \n                        \n                            Default value : schema\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport { menu, placeholder } from 'ngx-editor/plugins';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeViews.html":{"url":"interfaces/NodeViews.html","title":"interface - NodeViews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeViews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    NodeView\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/types.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Plugin } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TooltipPosition.html":{"url":"interfaces/TooltipPosition.html","title":"interface - TooltipPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TooltipPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/helpers/bubblePosition.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottom\n                                \n                                \n                                        left\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EditorView } from 'prosemirror-view';\n\ninterface TooltipPosition {\n  bottom: number;\n  left: number;\n}\n\nexport const calculateBubblePos = (view: EditorView, toolTipEl: HTMLElement): TooltipPosition => {\n  const { state: { selection } } = view;\n  const { from, to } = selection;\n\n  // These are in screen coordinates\n  const start = view.coordsAtPos(from);\n  const end = view.coordsAtPos(to);\n\n  // The box in which the tooltip is positioned, to use as base\n  const parent = toolTipEl.offsetParent;\n  const box = parent.getBoundingClientRect();\n\n  // Find a center-ish x position from the selection endpoints (when\n  // crossing lines, end may be more to the left)\n  const left = Math.max((start.left + end.left) / 2, start.left + 3);\n\n  return {\n    left: left - box.left,\n    bottom: box.bottom - start.top\n  };\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\nAll notable changes to this project will be documented in this file.\n\nTags\n\nFeatures\nBug Fixes\nPerformance Improvements\nDependency Updates\nBreaking Changes\nEnhancements\nDocumentation\nInternal\n\n\nv5.0.0-alpha.9 (2020-06-13)\nBug Fixes\n\nfix issues with reactive-forms (bede7a1)\n\nv5.0.0-alpha.8 (2020-06-08)\nBug Fixes\n\nset active state correctly for nested lists (453d807)\nfix vulnerabilities (9c89d2a)\n\nFeatures\n\nadd blockquote support (a26f192)\n\nv5.0.0-alpha.7 (2020-06-01)\nEnhancements\n\nremove dependencies prosemirror-utils and prosemirror-tables (6e13142)\n\nBug Fixes\n\nhandle null value correctly in input (84104c2)\nfix schema usage in example app (6e13142)\n\nDocumentation\n\nadd input-rules examples (ce00b5f)\n\nv5.0.0-alpha.6 (2020-05-31)\nFeatures\n\nadd support for custom menu items in menu plugin (1737369)\nsupport custom prosemirror schema (1737369)\nsupport prosemirror nodeviews config (1737369)\n\nBreaking Changes\n\nrenamed few css identifiers (c9555b4)\n\nv5.0.0-alpha.5 (2020-05-08)\nFeatures\n\nadd support for prosemirror plugins (fcdc39b)\n\nBreaking Changes\n\nplaceholder and config property is replaced with plugins\n\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [menu(), placholder('Type something here...')]\n});\nshortcuts needs to be configured manually using plugins\nremoved peerDependencies prosemirror-history and prosemirror-keymap\n\nv5.0.0-alpha.4 (2020-05-05)\nFeatures\n\nadd support for headings (2d7d38e)\n\nv5.0.0-alpha.3 (2020-05-04)\nFeatures\n\nadd support for list (274dcc7)\n\nBreaking Changes\n\nprosemirror peerDependencies are no longer needed (274dcc7)\n\nv5.0.0-alpha.2 (2020-04-30)\nBug Fixes\n\nfix issues with custom config (613ec52)\nremove empty DOM wrapper around the editor (5f176e1)\n\nv5.0.0-alpha.1 (2020-04-23)\nBreaking Changes\n\nfix issues with ivy compiler (30b513c)\n\nEnhancements\n\nremove unwanted dependencies (94374c4)\n\nv5.0.0-alpha (2020-04-22)\nThe package is entirely rewritten with prosemirror as default editor. Most of the options are removed and will be added eventually in upcoming releases.\nFeatures\n\nuse prosemirror as default editor (f17d0ef)\n\nBreaking Changes\n\nremove app prefix from the component (bbe3daa)\nupgrade to angular 9 (b280769)\n\nInternal\n\nmigrate from travis-ci to github actions (2afb2ec)\nupdate devDependencies (fd3ee1a)\n\nv4.1.0 (2018-10-21)\nDependency Updates\n\nupdate husky to v1.1.2\n\nInternal\n\ncode cleanup\n\nv4.1.0-beta.0 (2018-10-12)\nFeatures\n\nnew MaxLengthvalidator for validation in reactive forms\n\nDependency Updates\n\nupdate ng-packagr to v4.3.0\n\nv4.0.0 (2018-10-04)\n&#x1F389; Support Angular 6.\nDependency Changes\n\nupdate angular to v6 and its dependencies\nupdate compodoc\nupdate ng-packagr\nremove commitizen, cz-conventional-changelog\n\nInternal\n\nadd prePublishOnly script to prevent accidental publishes\n\nDocumentation\n\nrecompile docs with compodoc v1.1.5\n\nv3.3.0 (2018-05-04)\nNo new changes were introduced.\nFollow releases from v3.3.0-rc0 to v3.3.0-rc.14 for release notes &#x1F37B;\nv3.3.0-rc.14 (2018-05-02)\nDocumentation\n\nupdate unclear prerequisites in README (1c316cb), closes #92\n\nEnhancements\n\nupdate ngx-bootstrap (eed8aaa)\n\nInternal\n\nupdate compodoc (47f34ad)\nupdate bootstrap (ee1555b)\nupdate ng-packagr (b174a14)\n\nBreaking Changes\n\nremove code-editor support (24b92e0)\n\nv3.3.0-rc.13 (2018-03-14)\nFeatures\n\nauto-focus while switching to code-editor mode (1ed938e), closes #79\nshow placeholder in code editor (bae2216)\noption to insert video link/ youtube urls (e074c7a), closes #72\noption to set font family (1248db7), closes #72\n\nInternal\n\nremove dead code which used to enable or disable toolbar (00adda2)\n\nDEPENDENCY UPDATE\n\nupdate dependencies in package-lock file to latest satisfying version (f62d945)\n\nv3.3.0-rc.12 (2018-03-11)\nFeatures\n\nsupport TAB key to focus the editor's text-area (8e3e65b), closes #79\n\nBug Fixes\n\ndon't return from writeValue (36133e1), closes #78\n\nPerformance\n\nremove unused imports/variables (182152a)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.3 (0f94d1e)\nupdate compodoc to v1.0.9 (a9262c2)\n\nv3.3.0-rc.11 (2018-03-06)\nBug Fixes\n\nuse codemirror's htmlMixed mode instead of xml mode (fbf9d1d)\n\nInternal\n\nremove redundant karma-cli (df192b)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.2 (87bb04e)\nupdate compodoc to v1.0.8 (47d5ba4)\nupdate ng-packagr to v2.2.0 (ba86da6)\n\nv3.3.0-rc.10 (2018-02-27)\nBug Fixes\n\ndon't override default styles (5beee77), closes #68\n\nv3.3.0-rc.9 (2018-02-26)\nFeatures\n\nstyle - highlight active tabs in popover (0b7dd99)\noption to set font color and background color (a983fd4), closes #65\noption to set font-size (f49e477), closes #31\n\nBug Fixes\n\nstyle - center align popover arrow (2a13ca0)\n\nInternal\n\nudpate devDependencies (4fddfac)\n\nv3.3.0-rc.8 (2018-02-22)\nBug Fixes\n\nfix: links inserted twice (97398ee), closes #61\n\nv3.3.0-rc.7 (2018-02-21)\nEnhancements\n\nremove bootstrap from peerDependency (8aa0ffd)\n\nv3.3.0-rc.6 (2018-02-20)\nBug Fixes\n\nfix a typo in toolbar (367474f)\n\nEnhancements\n\nadded new peer dependencies (683bbee)\nupdated docs (57e4056)\n\nv3.3.0-rc.5 (2018-02-19)\nFeatures\n\noption to open URL in new tab (d4001c4)\noption to upload images from local filesystem (09b69b5), closes #34\n\nInternal\n\ndocumentation compiled with compodoc v1.0.7\n\nv3.3.0-rc.4 (2018-02-08)\nInternal\n\nupdate ng-packager to v2.0.0\n\nv3.3.0-rc.3 (2018-02-05)\nBug Fixes\n\nremove border for toolbar if hidden (4eef077), closes #43\nplaceholder gets duplicated if a page has more than one editor (cdfd4bc), closes #44\nngModel binding does not reflects in editor's textarea (4f4967a), closes #45\n\nChanges\n\nupdate peerDependency codemirror to v5.34.0 (6012283)\n\nInternal\n\nupdate devDependencies (6012283)\n\nv3.3.0-rc.2 (2018-01-19)\nBug Fixes\n\nfix: add missing xml parser for code-mirror (1078c69)\n\nv3.3.0-rc.1 (2018-01-19)\nBug Fixes\n\nfix error in exporting codemirror (9f0e19d), closes #40\n\nInternal\n\nupdate ng-packagr to v2.0.0-rc.11 (9f0e19d)\n\nDocumentation\n\nupdate additional docs (9f0e19d)\nremoved wiki\n\nv3.3.0-rc.0 (2018-01-19)\nFeatures\n\nadded event-emitter to emit blur and focus events (2ed79b8)\nadded option to view/edit plain HTML code (2ed79b8), closes #26\n\nInternal\n\nupdate angular-cli to v1.6.5 (2ed79b8)\nupdate devDependencies (2ed79b8)\n\nDocumentation\n\ndocs autogenerated using compodoc\n\n\n\nv3.2.1 (2017-12-19)\nBug Fixes\n\nadd button types to toolbar to avoid firing submit while using in reactive forms (d4ccc79)\n\nEnhancements\n\nlighten placeholder color (27ccd72)\n\nv3.2.0 (2017-12-14)\nFeatures\n\nenable or disable toolbar (0a915f5)\n\nBug Fixes\n\nfix: horizontal overflow in editor (0a915f5)\nminor style tweaks (4390502)\n\nv3.1.2 (2017-12-05)\nBug Fixes\n\nremove methods that are not supported by Internet Explorer (7be2fd6)\nfix grippie svg not centre aligned in Internet Explorer (c87c5e4)\nfix inputs not replacing configuration (dabac4c)\n\nInternal\n\nupdate to @angular/cli v1.5.5\n\n\n\nv3.1.1 (2017-11-28)\nInternal\n\nmove dependencies to peerDependencies (0310191)\n\nv3.1.0 (2017-11-25)\nFeatures\n\nReactive forms support for the editor (ba350a83)\n\nBreaking Changes\n\nuse ngModel instead of html for HTML bindings (ba350a83)\n\nv3.0.2 (2017-11-24)\nBug Fixes\n\ncheck html has been initialized (#17) (ab0216b). Thanks to @ssuperczynski\n\nv3.0.1 (2017-11-23)\nInternal\n\nupdate to @angular/cli v1.5.4\n\nBug Fixes\n\nfix: default configuration not set onInit (443c994)\n\n\n\nv3.0.0 (2017-11-23)\nBug Fixes\n\nfix HTML Model not updated after subscription on Observable (84946ed), closes #9\n\nInternal\n\nngx-editor has been refactored. Thanks to @volodymyro-in6k (#11)\nupdate angular to v1.5.3 fixes a vulnerability warning due to older version of handlebars (b707409)\nupdate ng-packagr to v1.6.0\n\n\n\nv2.0.1 (2017-11-07)\nInternal\n\nupdate ng-packagr to v1.5.0 (35fbb57)\n\nv2.0.0 (2017-11-02)\nPerformance\n\nupdate angular to v5.0.0 (f12754b)\nupdate bootstrap to v4.0.0-beta.2 (23adb5e)\n\nv1.2.1 (2017-10-25)\nBug Fixes\n\ndowngrade dependency to avoid incompatibility (45752bc)\nupdate insert image query text (2748cc3)\n\nv1.2.0 (2017-10-23)\nFeatures\n\noption to insert/edit link (63e401b)\noption to edit link (89389ab)\nunlink anchor tag (90f88a5)\nenable toolbar only when editor is focused (b915d68)\n\nInternal\n\nupdate ng-packagr (cebc696)\nfix dependency mismatches with angular (26a1a6d)\n\nEnhancements\n\nCSS Tweaks\n\nBug Fixes\n\nenable/disbale toolbar on focusing the editor (8b2bb27)\n\nv1.1.1 (2017-10-09)\nPerformance\n\nuse unique CSS classes (3ddc3b0)\n\nv1.1.0 (2017-10-09)\nFeatures\n\nset width and minWidth to editor (731f2fc)\nnew resizer added (864a5be)\n\nEnhancements\n\nremove units for zero value (3978843)\n\nv1.0.0 (2017-10-06)\nPerformance\n\nimprove value handling for attributes that hold boolean values (8695873)\nbetter handling of default values (7a40862)\n\nFeatures\n\nset height and minHeight for editror (fdb1b30)\ntoolbar customization (c6a2151)\n\nDOCS\n\nget latest release direct from github (b2ddf54)\nadd wiki (da7d0c7)\n\nv1.0.0-beta.3 (2017-10-03)\nBug Fixes\n\nundefined intialization in editor (d17c1dd)\n\nInternal\n\nupdate angular to v4.4.4 (d99dff2)\nupdate ng-packagr to v1.2.1 (d99dff2)\n\nv1.0.0-beta.2 (2017-10-02)\nFeatures\n\nenable (or) disable HTML5 translate An Experimental Option\nenable (or) disable editable nature of editor (4bff8e5)\n\nEnhancements\n\nremove unused fullscreen function (af66d69)\nspellCheck attribute renamed to spellcheck (af66d69)\nremove instructions from docs (af66d69)\n\nBug Fixes\n\nfix spellcheck attribute binding to editable area (af66d69)\n\nv1.0.0-beta.1 (2017-10-01)\nFeatures\n\nbind HTML content with editor\n\nv1.0.0-alpha.3 (2017-10-01)\nChanges\n\nupdate README\nupdate demo\n\nv1.0.0-alpha.2 (2017-09-28)\nTweaks\n\nremove font-awesome loaded by the module. Now font-awesome should be imported separately.\n\nv1.0.0-alpha.1 (2017-09-27)\nBug Fixes\n\nfixes setting default values for the editor\n\nv1.0.0-alpha (2017-09-27)\nWYSIWYG Editor for Angular Applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.0.5\n        \n            @angular/common : ~10.0.5\n        \n            @angular/compiler : ~10.0.5\n        \n            @angular/core : ~10.0.5\n        \n            @angular/forms : ~10.0.5\n        \n            @angular/platform-browser : ~10.0.5\n        \n            @angular/platform-browser-dynamic : ~10.0.5\n        \n            @angular/router : ~10.0.5\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getIconSvg   (src/.../index.ts)\n                        \n                        \n                            linkPlugin   (src/.../link.ts)\n                        \n                        \n                            menuPlugin   (src/.../index.ts)\n                        \n                        \n                            placeholderPlugin   (src/.../placeholder.ts)\n                        \n                        \n                            provideMyServiceOptions   (src/.../ngx-editor.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/plugins/utils/icons/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getIconSvg\n                        \n                        \n                    \n                \n            \n            \n                \ngetIconSvg(name, width, height)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/plugins/link.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            linkPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nlinkPlugin()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Plugin\n\n                    \n                \n            \n        \n    \n    src/plugins/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            menuPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nmenuPlugin(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Plugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/plugins/placeholder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            placeholderPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nplaceholderPlugin(text)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Plugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/ngx-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideMyServiceOptions\n                        \n                        \n                    \n                \n            \n            \n                \nprovideMyServiceOptions(config?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxEditor\n\n  \n   \n  \n\nA Simple WYSIWYG Editor for Angular Applications.\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nGetting Started\n\nNOTE: This is documentation for ngx-editor@5.x. View here for ngx-editor@4.x documentation\n\nInstallation\nInstall via Package managers such as npm or yarn\nnpm install ngx-editor --save\n# or\nyarn add ngx-editorUsage\nImport ngx-editor module\nimport { NgxEditorModule } from 'ngx-editor';\n\n@NgModule({\n  imports: [NgxEditorModule],\n})\n\nexport class AppModule {}Then in HTML\nFor ngModel to work, You must import FormsModule from @angular/forms\nOptional Configuration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n        [codemirror] // custom menu, see https://sibiraj.dev/ngx-editor/additional-documentation/menu-plugin.html\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, see https://prosemirror.net/examples/footnote/\n});Compatibility\nAll Evergreen-Browsers are supported\n\nGoogle Chrome\nMicrosoft Edge\nMozilla Firefox\nOpera\n\nDemo\nDemo at stackblitz ngx-editor\nDocumentation\nDocumentation is auto-generated using compodoc, and can be viewed here: https://sibiraj-s.github.io/ngx-editor/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017-2020 Sibiraj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (src/.../types.ts)\n                        \n                        \n                            MenuLabels   (src/.../types.ts)\n                        \n                        \n                            TCR   (src/.../types.ts)\n                        \n                        \n                            Toolbar   (src/.../types.ts)\n                        \n                        \n                            ToolbarCustomMenuItem   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdown   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupKeys   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupValues   (src/.../types.ts)\n                        \n                        \n                            ToolbarItem   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/plugins/types.ts\n    \n    \n        \n            \n                \n                    \n                    Command\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MenuLabels\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TCR\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Toolbar\n                \n            \n            \n                \n                        Array | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarCustomMenuItem\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdown\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupKeys\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarItem\n                \n            \n            \n                \n                        string | ToolbarDropdown | ToolbarCustomMenuItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            ACTIVE_MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            bulletList   (src/.../schema.ts)\n                        \n                        \n                            calculateBubblePos   (src/.../bubblePosition.ts)\n                        \n                        \n                            DEFAULT_ICON_HEIGHT   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_ICON_WIDTH   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_LABELS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_PLACEHOLDER   (src/.../placeholder.ts)\n                        \n                        \n                            DEFAULT_TOOLBAR   (src/.../index.ts)\n                        \n                        \n                            defaultConfig   (src/.../ngx-editor.service.ts)\n                        \n                        \n                            DISABLED_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPDOWN_ITEMS   (src/.../menu.ts)\n                        \n                        \n                            DROPDWON_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPWDOWN_OPEN_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            findNodeType   (src/.../isNodeActive.ts)\n                        \n                        \n                            flatDeep   (src/.../flatDeep.ts)\n                        \n                        \n                            getSelectionMarks   (src/.../getSelectionMarks.ts)\n                        \n                        \n                            getSeperatorDom   (src/.../menu.ts)\n                        \n                        \n                            icons   (src/.../index.ts)\n                        \n                        \n                            isListItem   (src/.../isListItem.ts)\n                        \n                        \n                            isMarkActive   (src/.../isMarkActive.ts)\n                        \n                        \n                            isNodeActive   (src/.../isNodeActive.ts)\n                        \n                        \n                            listGroup   (src/.../schema.ts)\n                        \n                        \n                            listItem   (src/.../schema.ts)\n                        \n                        \n                            marks   (src/.../schema.ts)\n                        \n                        \n                            menu   (src/.../index.ts)\n                        \n                        \n                            MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            menuItemsMeta   (src/.../meta.ts)\n                        \n                        \n                            NGX_EDITOR_CONFIG_TOKEN   (src/.../ngx-editor.module.ts)\n                        \n                        \n                            nodes   (src/.../schema.ts)\n                        \n                        \n                            orderedList   (src/.../schema.ts)\n                        \n                        \n                            PLACEHOLDER_CLASSNAME   (src/.../placeholder.ts)\n                        \n                        \n                            renderMenu   (src/.../menu.ts)\n                        \n                        \n                            schema   (src/.../schema.ts)\n                        \n                        \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            SEPERATOR_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            toggleBlockType   (src/.../toggleBlockType.ts)\n                        \n                        \n                            toggleList   (src/.../toggleList.ts)\n                        \n                        \n                            toggleWrap   (src/.../toggleWrap.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/plugins/menu/menu.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${MENU_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLED_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor--Disabled'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEMS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDWON_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Dropdown'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPWDOWN_OPEN_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Open`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSeperatorDom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__MenuItem'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState): void {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Selected`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPERATOR_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Seperator'\n                        \n                    \n\n\n            \n        \n\n    src/lib/schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bulletList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.bulletList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'block'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.listItem, { content: 'paragraph block*' })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            marks\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : schemaBasic.marks\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign(\n  {},\n  schemaBasic.nodes,\n  {\n    list_item: listItem,\n    ordered_list: orderedList,\n    bullet_list: bulletList\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.orderedList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  marks,\n  nodes\n})\n                        \n                    \n\n\n            \n        \n\n    src/helpers/bubblePosition.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateBubblePos\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (view: EditorView, toolTipEl: HTMLElement): TooltipPosition => {\n  const { state: { selection } } = view;\n  const { from, to } = selection;\n\n  // These are in screen coordinates\n  const start = view.coordsAtPos(from);\n  const end = view.coordsAtPos(to);\n\n  // The box in which the tooltip is positioned, to use as base\n  const parent = toolTipEl.offsetParent;\n  const box = parent.getBoundingClientRect();\n\n  // Find a center-ish x position from the selection endpoints (when\n  // crossing lines, end may be more to the left)\n  const left = Math.max((start.left + end.left) / 2, start.left + 3);\n\n  return {\n    left: left - box.left,\n    bottom: box.bottom - start.top\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/plugins/utils/icons/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold,\n  italic,\n  code,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  quote,\n  link\n}\n                        \n                    \n\n\n            \n        \n\n    src/plugins/menu/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LABELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuLabels\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: 'Bold',\n  italics: 'Italics',\n  code: 'Code',\n  ordered_list: 'Ordered List',\n  bullet_list: 'Bullet List',\n  heading: 'Heading',\n  blockquote: 'Quote'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  toolbar: DEFAULT_TOOLBAR,\n  labels: DEFAULT_LABELS\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TOOLBAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Toolbar\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['bold', 'italic'],\n  ['code', 'blockquote'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }]\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions = DEFAULT_OPTIONS) => {\n  return menuPlugin(options);\n}\n                        \n                    \n\n\n            \n        \n\n    src/plugins/placeholder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PLACEHOLDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Type Here...'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLACEHOLDER_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Placeholder'\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  plugins: [],\n  nodeViews: {},\n  schema\n}\n                        \n                    \n\n\n            \n        \n\n    src/helpers/isNodeActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            findNodeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, $from: ResolvedPos): NodeType | null => {\n  for (let i = $from.depth; i > 0; i--) {\n    if ($from.node(i).type === type) {\n      return $from.node(i).type;\n    }\n  }\n\n  return null;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNodeActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: NodeType, attrs = {}): boolean => {\n  const { $from, to } = state.selection;\n\n  const node: NodeType = findNodeType(type, $from);\n\n  if (!Object.entries(attrs).length || !node) {\n    return !!node;\n  }\n\n  return to \n                        \n                    \n\n\n            \n        \n\n    src/plugins/utils/flatDeep.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            flatDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (arr: any[], d = 1): any[] => {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n}\n                        \n                    \n\n\n            \n        \n\n    src/helpers/getSelectionMarks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getSelectionMarks\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState): Mark[] => {\n  let marks: Mark[] = [];\n\n  const { selection: { from, to } } = state;\n\n  state.doc.nodesBetween(from, to, node => {\n    marks = [...marks, ...node.marks];\n  });\n\n  return marks;\n}\n                        \n                    \n\n\n            \n        \n\n    src/helpers/isListItem.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isListItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n}\n                        \n                    \n\n\n            \n        \n\n    src/helpers/isMarkActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isMarkActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: MarkType): boolean => {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/plugins/menu/meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            menuItemsMeta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  },\n  blockquote: {\n    key: 'blockquote',\n    i18nKey: 'blockquote',\n    icon: 'quote',\n    type: 'node'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITOR_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgxEditorConfig')\n                        \n                    \n\n\n            \n        \n\n    src/commands/toggleBlockType.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlockType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, toggleType: NodeType, attrs = {}) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggleType)(state, dispatch);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/commands/toggleList.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, itemType: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return liftListItem(itemType)(state, dispatch);\n    }\n\n    return wrapInList(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/commands/toggleWrap.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleWrap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration.html":{"url":"additional-documentation/configuration.html","title":"additional-page - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nimport { schema } from 'ngx-editor';\nimport { menu, placeholder } from 'ngx-editor/plugins';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic'], // inline icons\n        ['code', 'blockquote'],\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, for example see https://prosemirror.net/examples/footnote/\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ngmodel.html":{"url":"additional-documentation/ngmodel.html","title":"additional-page - NgModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nNgModel\nInput can be a prosemirror document object or undefined or null\nclass AppComponent {\n  jsonDoc = null;\n\n  onChange(doc: object) {\n    this.jsonDoc = doc;\n  }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/history.html":{"url":"additional-documentation/history.html","title":"additional-page - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nEnable history support in the editor\nReference\n\nhttps://prosemirror.net/docs/ref/#history\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { undo, redo, history } from 'prosemirror-history';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    history(), // enable history support\n    keymap({\n      // configure shortcuts\n      'Mod-z': undo,\n      'Shift-Mod-z': redo\n    })\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/shortcuts.html":{"url":"additional-documentation/shortcuts.html","title":"additional-page - Shortcuts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nExamples\nList Items\nReference\n\nhttps://prosemirror.net/docs/ref/#keymap\nhttps://prosemirror.net/docs/ref/#schema-list\n\nimport { schema } from 'ngx-editor';\nimport { splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      Enter: splitListItem(schema.nodes.list_item),\n      'Mod-[': liftListItem(schema.nodes.list_item),\n      'Mod-]': sinkListItem(schema.nodes.list_item),\n      Tab: sinkListItem(schema.nodes.list_item)\n    })\n  ]\n});Marks\nReference\n\nhttps://prosemirror.net/docs/ref/#commands\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { schema } from 'ngx-editor';\nimport { keymap } from 'prosemirror-keymap';\nimport { toggleMark, baseKeymap } from 'prosemirror-commands';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      'Mod-b': toggleMark(schema.marks.strong), // toggle strong\n      'Mod-i': toggleMark(schema.marks.em), // toggle italics\n      'Mod-`': toggleMark(schema.marks.code) // toggle code\n    }),\n    keymap(baseKeymap)\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/html.html":{"url":"additional-documentation/html.html","title":"additional-page - HTML","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nWorking with HTML\nGenerate HTML from JSON\nimport { DOMSerializer } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst contentNode = schema.nodeFromJSON(this.jsonDoc);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst html: DocumentFragment = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);\nconsole.log(html);Generating JSON from HTML\nimport { DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst el = document.createElement('div');\nel.innerHTML = htmlString;\n\nthis.jsonDoc = DOMParser.fromSchema(schema).parse(el).toJSON();\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/menu-plugin.html":{"url":"additional-documentation/menu-plugin.html","title":"additional-page - Menu Plugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nMenu Plugin\nConfiguring the plugin\nimport { menu, placeholder } from 'ngx-editor/plugins';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic'], // inline icons\n        ['code', 'blockquote'],\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }], // dropdown\n        [codemirror] // custom menu, example below\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    })\n  ]\n});Custom Menu\nCustom menu should return an update function (invoked for every transcation) and dom html-element (to mount in the menubar).\nExample:\nimport { EditorState } from 'prosemirror-state';\nimport { isNodeActive, toggleBlockType, ToolbarCustomMenuItem } from 'ngx-editor';\n\nimport schema from '../../schema';\n\nconst codeMirror: ToolbarCustomMenuItem = (editorView) => {\n  const dom: HTMLElement = document.createElement('div');\n  dom.innerHTML = 'CodeMirror';\n\n  dom.classList.add('NgxEditor__MenuItem');\n  dom.classList.add('NgxEditor__MenuItem--Text');\n\n  // you must add `code_block` to schema first\n  // see https://prosemirror.net/examples/schema/\n  // https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  const type = schema.nodes.code_block;\n\n  const command = toggleBlockType(type, schema.nodes.paragraph);\n\n  dom.addEventListener('mousedown', (e: MouseEvent) => {\n    e.preventDefault();\n\n    // don't execute if not left click\n    if (e.buttons !== 1) {\n      return;\n    }\n\n    command(editorView.state, editorView.dispatch);\n  });\n\n  const update = (state: EditorState): void => {\n    const isActive = isNodeActive(state, type);\n\n    const canExecute = command(state, null);\n\n    dom.classList.toggle(`NgxEditor__MenuItem--Active`, isActive);\n    dom.classList.toggle(`NgxEditor--Disabled`, !canExecute);\n  };\n\n  return {\n    dom,\n    update\n  };\n};\n\nexport default codeMirror;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/schema.html":{"url":"additional-documentation/schema.html","title":"additional-page - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nThe Configuration can be provided using config property\nRef: https://prosemirror.net/examples/schema/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo\nUsage\nimport { schema } from 'ngx-editor';\nimport { menu, placeholder } from 'ngx-editor/plugins';\n\nNgxEditorModule.forRoot({\n  schema\n});Create custom schema\nimport { nodes as basicNodes, marks as basicMarks } from 'ngx-editor';\nimport { Schema, Node as ProsemirrorNode, NodeSpec } from 'prosemirror-model';\n\nconst codeBlock: NodeSpec = {\n  group: 'block',\n  attrs: {\n    text: { default: '' },\n    language: { default: 'text/javascript' }\n  },\n  parseDOM: [\n    {\n      tag: 'pre',\n      getAttrs: (dom: HTMLElement) => {\n        return {\n          text: dom.textContent,\n          language: dom.getAttribute('data-language') || 'text/plain'\n        };\n      }\n    }\n  ],\n  toDOM(node: ProsemirrorNode) {\n    return ['pre', { 'data-language': node.attrs.language }, node.attrs.text];\n  }\n};\n\nconst nodes = Object.assign({}, basicNodes, {\n  code_mirror: codeBlock\n});\n\nconst schema = new Schema({\n  nodes,\n  marks: basicMarks\n});\n\nexport default schema;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/inline-code-editor.html":{"url":"additional-documentation/inline-code-editor.html","title":"additional-page - Inline Code Editor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInline code editor\nRef: https://prosemirror.net/examples/codemirror/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo for examples\nimport { exitCode } from 'prosemirror-commands';\nimport { undo, redo } from 'prosemirror-history';\nimport { TextSelection, Selection } from 'prosemirror-state';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\n\nimport schema from '../schema';\n\nfunction computeChange(oldVal: string, newVal: string) {\n  if (oldVal === newVal) {\n    return null;\n  }\n  let start = 0;\n  let oldEnd = oldVal.length;\n  let newEnd = newVal.length;\n  while (start  start && newEnd > start && oldVal.charCodeAt(oldEnd - 1) === newVal.charCodeAt(newEnd - 1)) {\n    oldEnd--;\n    newEnd--;\n  }\n  return { from: start, to: oldEnd, text: newVal.slice(start, newEnd) };\n}\n\ntype GetPos = () => number;\n\nclass CodeMirrorView {\n  node: ProsemirrorNode;\n  getPos: GetPos;\n  incomingChanges: boolean;\n\n  cm: CodeMirror;\n\n  view: EditorView;\n  dom: HTMLElement;\n  updating: boolean;\n\n  constructor(node: ProsemirrorNode, view: EditorView, getPos: GetPos) {\n    // Store for later\n    this.node = node;\n    this.view = view;\n    this.getPos = getPos;\n    this.incomingChanges = false;\n\n    // Create a CodeMirror instance\n    this.cm = new CodeMirror(null, {\n      value: this.node.textContent,\n      lineNumbers: true,\n      extraKeys: this.codeMirrorKeymap()\n    });\n\n    // The editor's outer node is our DOM representation\n    this.dom = this.cm.getWrapperElement();\n    // CodeMirror needs to be in the DOM to properly initialize, so\n    // schedule it to update itself\n    setTimeout(() => this.cm.refresh(), 20);\n\n    // This flag is used to avoid an update loop between the outer and\n    // inner editor\n    this.updating = false;\n    // Track whether changes are have been made but not yet propagated\n    this.cm.on('beforeChange', () => (this.incomingChanges = true));\n    // Propagate updates from the code editor to ProseMirror\n    this.cm.on('cursorActivity', () => {\n      if (!this.updating && !this.incomingChanges) {\n        this.forwardSelection();\n      }\n    });\n\n    this.cm.on('changes', () => {\n      if (!this.updating) {\n        this.valueChanged();\n        this.forwardSelection();\n      }\n      this.incomingChanges = false;\n    });\n\n    this.cm.on('focus', () => this.forwardSelection());\n  }\n\n  forwardSelection() {\n    if (!this.cm.hasFocus()) {\n      return;\n    }\n\n    const state = this.view.state;\n    const selection = this.asProseMirrorSelection(state.doc);\n\n    if (!selection.eq(state.selection)) {\n      this.view.dispatch(state.tr.setSelection(selection));\n    }\n  }\n\n  asProseMirrorSelection(doc: ProsemirrorNode) {\n    const offset = this.getPos() + 1;\n    const anchor = this.cm.indexFromPos(this.cm.getCursor('anchor')) + offset;\n    const head = this.cm.indexFromPos(this.cm.getCursor('head')) + offset;\n    return TextSelection.create(doc, anchor, head);\n  }\n\n  setSelection(anchor: number, head: number) {\n    this.cm.focus();\n    this.updating = true;\n    this.cm.setSelection(this.cm.posFromIndex(anchor), this.cm.posFromIndex(head));\n    this.updating = false;\n  }\n\n  valueChanged() {\n    const change = computeChange(this.node.textContent, this.cm.getValue());\n    if (change) {\n      const start = this.getPos() + 1;\n      const tr = this.view.state.tr.replaceWith(\n        start + change.from,\n        start + change.to,\n        change.text ? schema.text(change.text) : null\n      );\n      this.view.dispatch(tr);\n    }\n  }\n  codeMirrorKeymap() {\n    const view = this.view;\n    const mod = /Mac/.test(navigator.platform) ? 'Cmd' : 'Ctrl';\n    return CodeMirror.normalizeKeyMap({\n      Up: () => this.maybeEscape('line', -1),\n      Left: () => this.maybeEscape('char', -1),\n      Down: () => this.maybeEscape('line', 1),\n      Right: () => this.maybeEscape('char', 1),\n      [`${mod}-Z`]: () => undo(view.state, view.dispatch),\n      [`Shift-${mod}-Z`]: () => redo(view.state, view.dispatch),\n      [`${mod}-Y`]: () => redo(view.state, view.dispatch),\n      'Ctrl-Enter': () => {\n        if (exitCode(view.state, view.dispatch)) {\n          view.focus();\n        }\n      }\n    });\n  }\n\n  maybeEscape(unit: string, dir: number) {\n    const pos = this.cm.getCursor();\n    if (\n      this.cm.somethingSelected() ||\n      pos.line !== (dir Usage\nimport { NgxEditorModule } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  nodeViews: {\n    code_block: (node: ProsemirrorNode, view: EditorView, getPos: () => number) => {\n      return new CodeBlockView(node, view, getPos);\n    }\n  }\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/input-rules.html":{"url":"additional-documentation/input-rules.html","title":"additional-page - Input Rules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInput rules\nThis module defines a plugin for attaching input rules to an editor, which can react to or transform text typed by the user.\nDoc: https://prosemirror.net/docs/ref/#inputrules\nSource: https://github.com/ProseMirror/prosemirror-example-setup/\nRules\nimport {\n  inputRules,\n  wrappingInputRule,\n  textblockTypeInputRule,\n  smartQuotes,\n  emDash,\n  ellipsis,\n  InputRule,\n} from 'prosemirror-inputrules';\nimport { NodeType, Schema } from 'prosemirror-model';\n\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nexport function blockQuoteRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nexport function orderedListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(\n    /^(\\d+)\\.\\s$/,\n    nodeType,\n    (match) => ({ order: +match[1] }),\n    (match, node) => node.childCount + node.attrs.order === +match[1],\n  );\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nexport function bulletListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nexport function codeBlockRule(nodeType: NodeType): InputRule {\n  return textblockTypeInputRule(/^```$/, nodeType);\n}\n\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nexport function headingRule(nodeType: NodeType, maxLevel: number): InputRule {\n  return textblockTypeInputRule(new RegExp('^(#{1,' + maxLevel + '})\\\\s$'), nodeType, (match) => ({\n    level: match[1].length,\n  }));\n}\n\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nexport function buildInputRules(schema: Schema) {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n\n  rules.push(blockQuoteRule(schema.nodes.blockquote));\n  rules.push(orderedListRule(schema.nodes.ordered_list));\n  rules.push(bulletListRule(schema.nodes.bullet_list));\n  rules.push(codeBlockRule(schema.nodes.code_block));\n  rules.push(headingRule(schema.nodes.heading, 6));\n\n  return inputRules({ rules });\n}Config\nimport { NgxEditorModule, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [buildInputRules(schema)],\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/reactive-forms.html":{"url":"additional-documentation/reactive-forms.html","title":"additional-page - Reactive Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nReactive Forms\nModule\nimport { CommonModule } from \"@angular/common\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { NgxEditorModule } from \"ngx-editor\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [CommonModule, BrowserModule, FormsModule, ReactiveFormsModule, NgxEditorModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}AppComponent\nimport { Component } from \"@angular/core\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n  styleUrls: [\"app.component.scss\"]\n})\n\nexport class AppComponent {\n  form = new FormGroup({\n    editorContent: new FormControl(null)\n  });\n\n  ngOnInit() {\n    this.form.valueChanges.subscribe((val) => {\n      console.log(\"Value Changes:\", val);\n    });\n  }\n}Template\n\n  \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
